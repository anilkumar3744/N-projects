//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VFS.PMS.ImportDataFromSAPFiles {
	using System;
	
	
	public partial class VFSPMSEntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public VFSPMSEntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Use this list to track upcoming events, status updates or other team news.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Announcements")]
		public Microsoft.SharePoint.Linq.EntityList<Announcement> Announcements {
			get {
				return this.GetList<Announcement>("Announcements");
			}
		}
		
		/// <summary>
		/// Appraisal Competencies
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Competencies")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalCompetenciesItem> AppraisalCompetencies {
			get {
				return this.GetList<AppraisalCompetenciesItem>("Appraisal Competencies");
			}
		}
		
		/// <summary>
		/// Appraisal Development Measures
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Development Measures")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalDevelopmentMeasuresItem> AppraisalDevelopmentMeasures {
			get {
				return this.GetList<AppraisalDevelopmentMeasuresItem>("Appraisal Development Measures");
			}
		}
		
		/// <summary>
		/// Appraisal Goals
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Goals")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalGoalsItem> AppraisalGoals {
			get {
				return this.GetList<AppraisalGoalsItem>("Appraisal Goals");
			}
		}
		
		/// <summary>
		/// Appraisal Lock Audit
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Lock Audit")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalLockAuditItem> AppraisalLockAudit {
			get {
				return this.GetList<AppraisalLockAuditItem>("Appraisal Lock Audit");
			}
		}
		
		/// <summary>
		/// Appraisal Phases
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Phases")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalPhasesItem> AppraisalPhases {
			get {
				return this.GetList<AppraisalPhasesItem>("Appraisal Phases");
			}
		}
		
		/// <summary>
		/// Appraisal Status
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Status")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalStatusItem> AppraisalStatus {
			get {
				return this.GetList<AppraisalStatusItem>("Appraisal Status");
			}
		}
		
		/// <summary>
		/// Appraisal Workflow History
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Workflow History")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalWorkflowHistoryItem> AppraisalWorkflowHistory {
			get {
				return this.GetList<AppraisalWorkflowHistoryItem>("Appraisal Workflow History");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisals")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalsItem> Appraisals {
			get {
				return this.GetList<AppraisalsItem>("Appraisals");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Areas")]
		public Microsoft.SharePoint.Linq.EntityList<AreasItem> Areas {
			get {
				return this.GetList<AreasItem>("Areas");
			}
		}
		
		/// <summary>
		/// Use the Calendar list to keep informed of upcoming meetings, deadlines, and other important events.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Calendar")]
		public Microsoft.SharePoint.Linq.EntityList<CalendarEvent> Calendar {
			get {
				return this.GetList<CalendarEvent>("Calendar");
			}
		}
		
		/// <summary>
		/// Comments History
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Comments History")]
		public Microsoft.SharePoint.Linq.EntityList<CommentsHistoryItem> CommentsHistory {
			get {
				return this.GetList<CommentsHistoryItem>("Comments History");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Companies")]
		public Microsoft.SharePoint.Linq.EntityList<CompaniesItem> Companies {
			get {
				return this.GetList<CompaniesItem>("Companies");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Competencies")]
		public Microsoft.SharePoint.Linq.EntityList<CompetenciesItem> Competencies {
			get {
				return this.GetList<CompetenciesItem>("Competencies");
			}
		}
		
		/// <summary>
		/// Competency Descriptions
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Competency Descriptions")]
		public Microsoft.SharePoint.Linq.EntityList<CompetencyDescriptionsItem> CompetencyDescriptions {
			get {
				return this.GetList<CompetencyDescriptionsItem>("Competency Descriptions");
			}
		}
		
		/// <summary>
		/// Competency Ratings
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Competency Ratings")]
		public Microsoft.SharePoint.Linq.EntityList<CompetencyRatingsItem> CompetencyRatings {
			get {
				return this.GetList<CompetencyRatingsItem>("Competency Ratings");
			}
		}
		
		/// <summary>
		/// This Document library has the templates to create Web Analytics custom reports for this site collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Customized Reports")]
		public Microsoft.SharePoint.Linq.EntityList<Document> CustomizedReports {
			get {
				return this.GetList<Document>("Customized Reports");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Employee Groups")]
		public Microsoft.SharePoint.Linq.EntityList<EmployeeGroupsItem> EmployeeGroups {
			get {
				return this.GetList<EmployeeGroupsItem>("Employee Groups");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Employee Sub Groups")]
		public Microsoft.SharePoint.Linq.EntityList<EmployeeSubGroupsItem> EmployeeSubGroups {
			get {
				return this.GetList<EmployeeSubGroupsItem>("Employee Sub Groups");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Employees Master")]
		public Microsoft.SharePoint.Linq.EntityList<EmployeesMasterItem> EmployeesMaster {
			get {
				return this.GetList<EmployeesMasterItem>("Employees Master");
			}
		}
		
		/// <summary>
		/// This library contains administrator-approved form templates that were activated to this site collection.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Form Templates")]
		public Microsoft.SharePoint.Linq.EntityList<Item> FormTemplates {
			get {
				return this.GetList<Item>("Form Templates");
			}
		}
		
		/// <summary>
		/// Goal Categories
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Goal Categories")]
		public Microsoft.SharePoint.Linq.EntityList<GoalCategoriesItem> GoalCategories {
			get {
				return this.GetList<GoalCategoriesItem>("Goal Categories");
			}
		}
		
		/// <summary>
		/// Use the Links list for links to Web pages that your team members will find interesting or useful.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Links")]
		public Microsoft.SharePoint.Linq.EntityList<Link> Links {
			get {
				return this.GetList<Link>("Links");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Organization Units")]
		public Microsoft.SharePoint.Linq.EntityList<OrganizationUnitsItem> OrganizationUnits {
			get {
				return this.GetList<OrganizationUnitsItem>("Organization Units");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Performance Cycle Activity")]
		public Microsoft.SharePoint.Linq.EntityList<PerformanceCycleActivityItem> PerformanceCycleActivity {
			get {
				return this.GetList<PerformanceCycleActivityItem>("Performance Cycle Activity");
			}
		}
		
		/// <summary>
		/// Performance Cycles
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Performance Cycles")]
		public Microsoft.SharePoint.Linq.EntityList<PerformanceCyclesItem> PerformanceCycles {
			get {
				return this.GetList<PerformanceCyclesItem>("Performance Cycles");
			}
		}
		
		/// <summary>
		/// Performance Ratings
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Performance Ratings")]
		public Microsoft.SharePoint.Linq.EntityList<PerformanceRatingsItem> PerformanceRatings {
			get {
				return this.GetList<PerformanceRatingsItem>("Performance Ratings");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Phases")]
		public Microsoft.SharePoint.Linq.EntityList<PhasesItem> Phases {
			get {
				return this.GetList<PhasesItem>("Phases");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PIP")]
		public Microsoft.SharePoint.Linq.EntityList<PIPItem> PIP {
			get {
				return this.GetList<PIPItem>("PIP");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Positions")]
		public Microsoft.SharePoint.Linq.EntityList<PositionsItem> Positions {
			get {
				return this.GetList<PositionsItem>("Positions");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Regions")]
		public Microsoft.SharePoint.Linq.EntityList<RegionsItem> Regions {
			get {
				return this.GetList<RegionsItem>("Regions");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Reminders")]
		public Microsoft.SharePoint.Linq.EntityList<RemindersItem> Reminders {
			get {
				return this.GetList<RemindersItem>("Reminders");
			}
		}
		
		/// <summary>
		/// Share a document with the team by adding it to this document library.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shared Documents")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SharedDocuments {
			get {
				return this.GetList<Document>("Shared Documents");
			}
		}
		
		/// <summary>
		/// Use this library to store files which are included on pages within this site, such as images on Wiki pages.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Assets")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SiteAssets {
			get {
				return this.GetList<Document>("Site Assets");
			}
		}
		
		/// <summary>
		/// Use this library to create and store pages on this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Pages")]
		public Microsoft.SharePoint.Linq.EntityList<WikiPage> SitePages {
			get {
				return this.GetList<WikiPage>("Site Pages");
			}
		}
		
		/// <summary>
		/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
		public Microsoft.SharePoint.Linq.EntityList<Document> StyleLibrary {
			get {
				return this.GetList<Document>("Style Library");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Sub-Areas")]
		public Microsoft.SharePoint.Linq.EntityList<SubAreasItem> SubAreas {
			get {
				return this.GetList<SubAreasItem>("Sub-Areas");
			}
		}
		
		/// <summary>
		/// Use the Tasks list to keep track of work that you or your team needs to complete.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> Tasks {
			get {
				return this.GetList<Item>("Tasks");
			}
		}
		
		/// <summary>
		/// Use the Team Discussion list to hold newsgroup-style discussions on topics relevant to your team.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Team Discussion")]
		public Microsoft.SharePoint.Linq.EntityList<Item> TeamDiscussion {
			get {
				return this.GetList<Item>("Team Discussion");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Announcement))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Folder))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalCompetenciesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalDevelopmentMeasuresItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalGoalsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalLockAuditItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalPhasesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalStatusItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalWorkflowHistoryItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AreasItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Event))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CommentsHistoryItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CompaniesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CompetenciesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CompetencyDescriptionsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CompetencyRatingsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EmployeeGroupsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EmployeeSubGroupsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EmployeesMasterItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(GoalCategoriesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Link))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(OrganizationUnitsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PerformanceCycleActivityItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PerformanceCyclesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PerformanceRatingsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PhasesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PIPItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PositionsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(RegionsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(RemindersItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SubAreasItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Task))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Message))]
	public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		protected string _title;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Item() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Create a new news item, status or other short piece of information.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Announcement", Id="0x0104")]
	public partial class Announcement : Item {
		
		private string _body;
		
		private System.Nullable<System.DateTime> _expires;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Announcement() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_expires", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Expires {
			get {
				return this._expires;
			}
			set {
				if ((value != this._expires)) {
					this.OnPropertyChanging("Expires", this._expires);
					this._expires = value;
					this.OnPropertyChanged("Expires");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new folder.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Folder", Id="0x0120")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Discussion))]
	public partial class Folder : Item {
		
		private string _name;
		
		private System.Nullable<int> _itemChildCountId;
		
		private string _itemChildCountItemChildCount;
		
		private System.Nullable<int> _folderChildCountId;
		
		private string _folderChildCountFolderChildCount;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Folder() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public virtual string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_itemChildCountId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ItemChildCountId {
			get {
				return this._itemChildCountId;
			}
			set {
				if ((value != this._itemChildCountId)) {
					this.OnPropertyChanging("ItemChildCountId", this._itemChildCountId);
					this._itemChildCountId = value;
					this.OnPropertyChanged("ItemChildCountId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_itemChildCountItemChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ItemChildCountItemChildCount {
			get {
				return this._itemChildCountItemChildCount;
			}
			set {
				if ((value != this._itemChildCountItemChildCount)) {
					this.OnPropertyChanging("ItemChildCountItemChildCount", this._itemChildCountItemChildCount);
					this._itemChildCountItemChildCount = value;
					this.OnPropertyChanged("ItemChildCountItemChildCount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_folderChildCountId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> FolderChildCountId {
			get {
				return this._folderChildCountId;
			}
			set {
				if ((value != this._folderChildCountId)) {
					this.OnPropertyChanging("FolderChildCountId", this._folderChildCountId);
					this._folderChildCountId = value;
					this.OnPropertyChanged("FolderChildCountId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_folderChildCountFolderChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string FolderChildCountFolderChildCount {
			get {
				return this._folderChildCountFolderChildCount;
			}
			set {
				if ((value != this._folderChildCountFolderChildCount)) {
					this.OnPropertyChanging("FolderChildCountFolderChildCount", this._folderChildCountFolderChildCount);
					this._folderChildCountFolderChildCount = value;
					this.OnPropertyChanged("FolderChildCountFolderChildCount");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CalendarEvent))]
	public partial class Event : Item {
		
		private string _location;
		
		protected System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		protected string _description;
		
		private System.Nullable<bool> _allDayEvent;
		
		private System.Nullable<bool> _recurrence;
		
		private System.Nullable<bool> _workspace;
		
		private System.Nullable<Category> _category;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Event() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_location", FieldType="Text")]
		public string Location {
			get {
				return this._location;
			}
			set {
				if ((value != this._location)) {
					this.OnPropertyChanging("Location", this._location);
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_endTime", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_allDayEvent", FieldType="AllDayEvent")]
		public System.Nullable<bool> AllDayEvent {
			get {
				return this._allDayEvent;
			}
			set {
				if ((value != this._allDayEvent)) {
					this.OnPropertyChanging("AllDayEvent", this._allDayEvent);
					this._allDayEvent = value;
					this.OnPropertyChanged("AllDayEvent");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_recurrence", FieldType="Recurrence")]
		public System.Nullable<bool> Recurrence {
			get {
				return this._recurrence;
			}
			set {
				if ((value != this._recurrence)) {
					this.OnPropertyChanging("Recurrence", this._recurrence);
					this._recurrence = value;
					this.OnPropertyChanged("Recurrence");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_workspace", FieldType="CrossProjectLink")]
		public System.Nullable<bool> Workspace {
			get {
				return this._workspace;
			}
			set {
				if ((value != this._workspace)) {
					this.OnPropertyChanging("Workspace", this._workspace);
					this._workspace = value;
					this.OnPropertyChanged("Workspace");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
		public System.Nullable<Category> Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WikiPage))]
	public partial class Document : Item {
		
		private string _name;
		
		private string _documentModifiedBy;
		
		private string _documentCreatedBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Document() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentModifiedBy {
			get {
				return this._documentModifiedBy;
			}
			set {
				if ((value != this._documentModifiedBy)) {
					this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
					this._documentModifiedBy = value;
					this.OnPropertyChanged("DocumentModifiedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentCreatedBy {
			get {
				return this._documentCreatedBy;
			}
			set {
				if ((value != this._documentCreatedBy)) {
					this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
					this._documentCreatedBy = value;
					this.OnPropertyChanged("DocumentCreatedBy");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new link to a Web page or other resource.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Link", Id="0x0105")]
	public partial class Link : Item {
		
		private string _uRL;
		
		private string _comments;
		
		private string _uRL0;
		
		private string _uRL1;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Link() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URL", Storage="_uRL", Required=true, FieldType="Url")]
		public string URL {
			get {
				return this._uRL;
			}
			set {
				if ((value != this._uRL)) {
					this.OnPropertyChanging("URL", this._uRL);
					this._uRL = value;
					this.OnPropertyChanged("URL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLwMenu", Storage="_uRL0", ReadOnly=true, FieldType="Computed")]
		public string URL0 {
			get {
				return this._uRL0;
			}
			set {
				if ((value != this._uRL0)) {
					this.OnPropertyChanging("URL0", this._uRL0);
					this._uRL0 = value;
					this.OnPropertyChanged("URL0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLNoMenu", Storage="_uRL1", ReadOnly=true, FieldType="Computed")]
		public string URL1 {
			get {
				return this._uRL1;
			}
			set {
				if ((value != this._uRL1)) {
					this.OnPropertyChanging("URL1", this._uRL1);
					this._uRL1 = value;
					this.OnPropertyChanged("URL1");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Link.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Link.");
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksTask))]
	public partial class Task : Item {
		
		private System.Nullable<double> _complete;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _startDate;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<Priority> _priority;
		
		protected System.Nullable<TaskStatus> _taskStatus;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Task() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_taskStatus", FieldType="Choice")]
		public virtual System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new message.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Message", Id="0x0107")]
	public partial class Message : Item {
		
		private string _discussionSubject;
		
		private string _version0;
		
		private string _body;
		
		private string _reply;
		
		private string _post;
		
		private string _threading;
		
		private string _postedBy;
		
		private string _eMailSender;
		
		private System.Nullable<int> _modifiedById;
		
		private string _modifiedByNameWithPicture;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Message() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_discussionSubject", ReadOnly=true, FieldType="Computed")]
		public string DiscussionSubject {
			get {
				return this._discussionSubject;
			}
			set {
				if ((value != this._discussionSubject)) {
					this.OnPropertyChanging("DiscussionSubject", this._discussionSubject);
					this._discussionSubject = value;
					this.OnPropertyChanged("DiscussionSubject");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_version0", ReadOnly=true, FieldType="Text")]
		public string Version0 {
			get {
				return this._version0;
			}
			set {
				if ((value != this._version0)) {
					this.OnPropertyChanging("Version0", this._version0);
					this._version0 = value;
					this.OnPropertyChanged("Version0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_reply", ReadOnly=true, FieldType="Computed")]
		public string Reply {
			get {
				return this._reply;
			}
			set {
				if ((value != this._reply)) {
					this.OnPropertyChanging("Reply", this._reply);
					this._reply = value;
					this.OnPropertyChanged("Reply");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_post", ReadOnly=true, FieldType="Computed")]
		public string Post {
			get {
				return this._post;
			}
			set {
				if ((value != this._post)) {
					this.OnPropertyChanging("Post", this._post);
					this._post = value;
					this.OnPropertyChanged("Post");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_threading", ReadOnly=true, FieldType="Computed")]
		public string Threading {
			get {
				return this._threading;
			}
			set {
				if ((value != this._threading)) {
					this.OnPropertyChanging("Threading", this._threading);
					this._threading = value;
					this.OnPropertyChanged("Threading");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_postedBy", ReadOnly=true, FieldType="Computed")]
		public string PostedBy {
			get {
				return this._postedBy;
			}
			set {
				if ((value != this._postedBy)) {
					this.OnPropertyChanging("PostedBy", this._postedBy);
					this._postedBy = value;
					this.OnPropertyChanged("PostedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_eMailSender", FieldType="Note")]
		public string EMailSender {
			get {
				return this._eMailSender;
			}
			set {
				if ((value != this._eMailSender)) {
					this.OnPropertyChanging("EMailSender", this._eMailSender);
					this._eMailSender = value;
					this.OnPropertyChanged("EMailSender");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Message.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Message.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedById", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ModifiedById {
			get {
				return this._modifiedById;
			}
			set {
				if ((value != this._modifiedById)) {
					this.OnPropertyChanging("ModifiedById", this._modifiedById);
					this._modifiedById = value;
					this.OnPropertyChanged("ModifiedById");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedByNameWithPicture", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ModifiedByNameWithPicture {
			get {
				return this._modifiedByNameWithPicture;
			}
			set {
				if ((value != this._modifiedByNameWithPicture)) {
					this.OnPropertyChanging("ModifiedByNameWithPicture", this._modifiedByNameWithPicture);
					this._modifiedByNameWithPicture = value;
					this.OnPropertyChanged("ModifiedByNameWithPicture");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new wiki page.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wiki Page", Id="0x010108")]
	public partial class WikiPage : Document {
		
		private string _wikiContent;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WikiPage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_wikiContent", FieldType="Note")]
		public string WikiContent {
			get {
				return this._wikiContent;
			}
			set {
				if ((value != this._wikiContent)) {
					this.OnPropertyChanging("WikiContent", this._wikiContent);
					this._wikiContent = value;
					this.OnPropertyChanged("WikiContent");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
			}
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksSummaryTask))]
	public partial class SummaryTask : Folder {
		
		private System.Nullable<double> _complete;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _startDate;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<Priority> _priority;
		
		protected System.Nullable<TaskStatus> _taskStatus;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SummaryTask() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_taskStatus", FieldType="Choice")]
		public virtual System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new discussion topic.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Discussion", Id="0x012002")]
	public partial class Discussion : Folder {
		
		private string _discussionSubject;
		
		private string _version0;
		
		private string _body;
		
		private string _reply;
		
		private string _post;
		
		private string _threading;
		
		private string _postedBy;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
		private string _eMailSender;
		
		private System.Nullable<int> _modifiedById;
		
		private string _modifiedByNameWithPicture;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Discussion() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public override string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_discussionSubject", ReadOnly=true, FieldType="Computed")]
		public string DiscussionSubject {
			get {
				return this._discussionSubject;
			}
			set {
				if ((value != this._discussionSubject)) {
					this.OnPropertyChanging("DiscussionSubject", this._discussionSubject);
					this._discussionSubject = value;
					this.OnPropertyChanged("DiscussionSubject");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_version0", ReadOnly=true, FieldType="Text")]
		public string Version0 {
			get {
				return this._version0;
			}
			set {
				if ((value != this._version0)) {
					this.OnPropertyChanging("Version0", this._version0);
					this._version0 = value;
					this.OnPropertyChanged("Version0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_reply", ReadOnly=true, FieldType="Computed")]
		public string Reply {
			get {
				return this._reply;
			}
			set {
				if ((value != this._reply)) {
					this.OnPropertyChanging("Reply", this._reply);
					this._reply = value;
					this.OnPropertyChanged("Reply");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_post", ReadOnly=true, FieldType="Computed")]
		public string Post {
			get {
				return this._post;
			}
			set {
				if ((value != this._post)) {
					this.OnPropertyChanging("Post", this._post);
					this._post = value;
					this.OnPropertyChanged("Post");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_threading", ReadOnly=true, FieldType="Computed")]
		public string Threading {
			get {
				return this._threading;
			}
			set {
				if ((value != this._threading)) {
					this.OnPropertyChanging("Threading", this._threading);
					this._threading = value;
					this.OnPropertyChanged("Threading");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_postedBy", ReadOnly=true, FieldType="Computed")]
		public string PostedBy {
			get {
				return this._postedBy;
			}
			set {
				if ((value != this._postedBy)) {
					this.OnPropertyChanging("PostedBy", this._postedBy);
					this._postedBy = value;
					this.OnPropertyChanged("PostedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionLastUpdated", Storage="_lastUpdated", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated {
			get {
				return this._lastUpdated;
			}
			set {
				if ((value != this._lastUpdated)) {
					this.OnPropertyChanging("LastUpdated", this._lastUpdated);
					this._lastUpdated = value;
					this.OnPropertyChanged("LastUpdated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_eMailSender", FieldType="Note")]
		public string EMailSender {
			get {
				return this._eMailSender;
			}
			set {
				if ((value != this._eMailSender)) {
					this.OnPropertyChanging("EMailSender", this._eMailSender);
					this._eMailSender = value;
					this.OnPropertyChanged("EMailSender");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Name {
			get {
				throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Discussion.");
			}
			set {
				throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Discussion.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedById", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ModifiedById {
			get {
				return this._modifiedById;
			}
			set {
				if ((value != this._modifiedById)) {
					this.OnPropertyChanging("ModifiedById", this._modifiedById);
					this._modifiedById = value;
					this.OnPropertyChanged("ModifiedById");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedByNameWithPicture", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ModifiedByNameWithPicture {
			get {
				return this._modifiedByNameWithPicture;
			}
			set {
				if ((value != this._modifiedByNameWithPicture)) {
					this.OnPropertyChanging("ModifiedByNameWithPicture", this._modifiedByNameWithPicture);
					this._modifiedByNameWithPicture = value;
					this.OnPropertyChanged("ModifiedByNameWithPicture");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Competencies")]
	public partial class AppraisalCompetenciesItem : Item {
		
		private string _appraiseeLatestComments;
		
		private string _appraiserLatestComments;
		
		private string _reviewerLatestComments;
		
		private System.Nullable<int> _competencyId;
		
		private string _competencyCompetency;
		
		private System.Nullable<int> _expectedResultId;
		
		private string _expectedResultRating;
		
		private System.Nullable<int> _ratingId;
		
		private string _ratingRating;
		
		private System.Nullable<int> _appraisalPhaseId;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalCompetenciesItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisee_x0020_Latest_x0020_Com", Storage="_appraiseeLatestComments", FieldType="Note")]
		public string AppraiseeLatestComments {
			get {
				return this._appraiseeLatestComments;
			}
			set {
				if ((value != this._appraiseeLatestComments)) {
					this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
					this._appraiseeLatestComments = value;
					this.OnPropertyChanged("AppraiseeLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraiser_x0020_Latest_x0020_Com", Storage="_appraiserLatestComments", FieldType="Note")]
		public string AppraiserLatestComments {
			get {
				return this._appraiserLatestComments;
			}
			set {
				if ((value != this._appraiserLatestComments)) {
					this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
					this._appraiserLatestComments = value;
					this.OnPropertyChanged("AppraiserLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reviewer_x0020_Latest_x0020_Comm", Storage="_reviewerLatestComments", FieldType="Note")]
		public string ReviewerLatestComments {
			get {
				return this._reviewerLatestComments;
			}
			set {
				if ((value != this._reviewerLatestComments)) {
					this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
					this._reviewerLatestComments = value;
					this.OnPropertyChanged("ReviewerLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Competency", Storage="_competencyId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> CompetencyId {
			get {
				return this._competencyId;
			}
			set {
				if ((value != this._competencyId)) {
					this.OnPropertyChanging("CompetencyId", this._competencyId);
					this._competencyId = value;
					this.OnPropertyChanged("CompetencyId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Competency", Storage="_competencyCompetency", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string CompetencyCompetency {
			get {
				return this._competencyCompetency;
			}
			set {
				if ((value != this._competencyCompetency)) {
					this.OnPropertyChanging("CompetencyCompetency", this._competencyCompetency);
					this._competencyCompetency = value;
					this.OnPropertyChanged("CompetencyCompetency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expected_x0020_Result", Storage="_expectedResultId", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ExpectedResultId {
			get {
				return this._expectedResultId;
			}
			set {
				if ((value != this._expectedResultId)) {
					this.OnPropertyChanging("ExpectedResultId", this._expectedResultId);
					this._expectedResultId = value;
					this.OnPropertyChanged("ExpectedResultId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expected_x0020_Result", Storage="_expectedResultRating", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ExpectedResultRating {
			get {
				return this._expectedResultRating;
			}
			set {
				if ((value != this._expectedResultRating)) {
					this.OnPropertyChanging("ExpectedResultRating", this._expectedResultRating);
					this._expectedResultRating = value;
					this.OnPropertyChanged("ExpectedResultRating");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Rating", Storage="_ratingId", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> RatingId {
			get {
				return this._ratingId;
			}
			set {
				if ((value != this._ratingId)) {
					this.OnPropertyChanging("RatingId", this._ratingId);
					this._ratingId = value;
					this.OnPropertyChanged("RatingId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Rating", Storage="_ratingRating", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string RatingRating {
			get {
				return this._ratingRating;
			}
			set {
				if ((value != this._ratingRating)) {
					this.OnPropertyChanging("RatingRating", this._ratingRating);
					this._ratingRating = value;
					this.OnPropertyChanged("RatingRating");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhaseId", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> AppraisalPhaseId {
			get {
				return this._appraisalPhaseId;
			}
			set {
				if ((value != this._appraisalPhaseId)) {
					this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
					this._appraisalPhaseId = value;
					this.OnPropertyChanged("AppraisalPhaseId");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Development Measures")]
	public partial class AppraisalDevelopmentMeasuresItem : Item {
		
		private System.Nullable<System.DateTime> _when;
		
		private string _what;
		
		private string _nextSteps;
		
		private string _h1AppraiseeComments;
		
		private string _h1AppraiserComments;
		
		private string _h2AppraiseeComments;
		
		private string _h2AppraiserComments;
		
		private System.Nullable<int> _appraisalId;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalDevelopmentMeasuresItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="When", Storage="_when", FieldType="DateTime")]
		public System.Nullable<System.DateTime> When {
			get {
				return this._when;
			}
			set {
				if ((value != this._when)) {
					this.OnPropertyChanging("When", this._when);
					this._when = value;
					this.OnPropertyChanged("When");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="What", Storage="_what", FieldType="Note")]
		public string What {
			get {
				return this._what;
			}
			set {
				if ((value != this._what)) {
					this.OnPropertyChanging("What", this._what);
					this._what = value;
					this.OnPropertyChanged("What");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Next_x0020_Steps", Storage="_nextSteps", FieldType="Note")]
		public string NextSteps {
			get {
				return this._nextSteps;
			}
			set {
				if ((value != this._nextSteps)) {
					this.OnPropertyChanging("NextSteps", this._nextSteps);
					this._nextSteps = value;
					this.OnPropertyChanged("NextSteps");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1_x0020_Appraisee_x0020_Comment", Storage="_h1AppraiseeComments", FieldType="Note")]
		public string H1AppraiseeComments {
			get {
				return this._h1AppraiseeComments;
			}
			set {
				if ((value != this._h1AppraiseeComments)) {
					this.OnPropertyChanging("H1AppraiseeComments", this._h1AppraiseeComments);
					this._h1AppraiseeComments = value;
					this.OnPropertyChanged("H1AppraiseeComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1_x0020_Appraiser_x0020_Comment", Storage="_h1AppraiserComments", FieldType="Note")]
		public string H1AppraiserComments {
			get {
				return this._h1AppraiserComments;
			}
			set {
				if ((value != this._h1AppraiserComments)) {
					this.OnPropertyChanging("H1AppraiserComments", this._h1AppraiserComments);
					this._h1AppraiserComments = value;
					this.OnPropertyChanged("H1AppraiserComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H2_x0020_Appraisee_x0020_Comment", Storage="_h2AppraiseeComments", FieldType="Note")]
		public string H2AppraiseeComments {
			get {
				return this._h2AppraiseeComments;
			}
			set {
				if ((value != this._h2AppraiseeComments)) {
					this.OnPropertyChanging("H2AppraiseeComments", this._h2AppraiseeComments);
					this._h2AppraiseeComments = value;
					this.OnPropertyChanged("H2AppraiseeComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H2_x0020_Appraiser_x0020_Comment", Storage="_h2AppraiserComments", FieldType="Note")]
		public string H2AppraiserComments {
			get {
				return this._h2AppraiserComments;
			}
			set {
				if ((value != this._h2AppraiserComments)) {
					this.OnPropertyChanging("H2AppraiserComments", this._h2AppraiserComments);
					this._h2AppraiserComments = value;
					this.OnPropertyChanged("H2AppraiserComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal", Storage="_appraisalId", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> AppraisalId {
			get {
				return this._appraisalId;
			}
			set {
				if ((value != this._appraisalId)) {
					this.OnPropertyChanging("AppraisalId", this._appraisalId);
					this._appraisalId = value;
					this.OnPropertyChanged("AppraisalId");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Goals")]
	public partial class AppraisalGoalsItem : Item {
		
		private string _goal;
		
		private string _goalDescription;
		
		private string _appraiseeLatestComments;
		
		private System.Nullable<double> _weightage;
		
		private System.Nullable<System.DateTime> _dueDate;
		
		private string _appraiserLatestComments;
		
		private string _reviewerLatestComments;
		
		private System.Nullable<double> _evaluation;
		
		private System.Nullable<double> _score;
		
		private System.Nullable<int> _appraisalPhaseId;
		
		private System.Nullable<int> _goalCategoryId;
		
		private string _goalCategoryCategory;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalGoalsItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Goal", Storage="_goal", Required=true, FieldType="Text")]
		public string Goal {
			get {
				return this._goal;
			}
			set {
				if ((value != this._goal)) {
					this.OnPropertyChanging("Goal", this._goal);
					this._goal = value;
					this.OnPropertyChanged("Goal");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Goal_x0020_Description", Storage="_goalDescription", FieldType="Note")]
		public string GoalDescription {
			get {
				return this._goalDescription;
			}
			set {
				if ((value != this._goalDescription)) {
					this.OnPropertyChanging("GoalDescription", this._goalDescription);
					this._goalDescription = value;
					this.OnPropertyChanged("GoalDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisee_x0020_Comments", Storage="_appraiseeLatestComments", FieldType="Note")]
		public string AppraiseeLatestComments {
			get {
				return this._appraiseeLatestComments;
			}
			set {
				if ((value != this._appraiseeLatestComments)) {
					this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
					this._appraiseeLatestComments = value;
					this.OnPropertyChanged("AppraiseeLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Weightage", Storage="_weightage", FieldType="Number")]
		public System.Nullable<double> Weightage {
			get {
				return this._weightage;
			}
			set {
				if ((value != this._weightage)) {
					this.OnPropertyChanging("Weightage", this._weightage);
					this._weightage = value;
					this.OnPropertyChanged("Weightage");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Due_x0020_Date", Storage="_dueDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraiser_x0020_Comments", Storage="_appraiserLatestComments", FieldType="Note")]
		public string AppraiserLatestComments {
			get {
				return this._appraiserLatestComments;
			}
			set {
				if ((value != this._appraiserLatestComments)) {
					this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
					this._appraiserLatestComments = value;
					this.OnPropertyChanged("AppraiserLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reviewer_x0020_Comments", Storage="_reviewerLatestComments", FieldType="Note")]
		public string ReviewerLatestComments {
			get {
				return this._reviewerLatestComments;
			}
			set {
				if ((value != this._reviewerLatestComments)) {
					this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
					this._reviewerLatestComments = value;
					this.OnPropertyChanged("ReviewerLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Evaluation", Storage="_evaluation", FieldType="Number")]
		public System.Nullable<double> Evaluation {
			get {
				return this._evaluation;
			}
			set {
				if ((value != this._evaluation)) {
					this.OnPropertyChanging("Evaluation", this._evaluation);
					this._evaluation = value;
					this.OnPropertyChanged("Evaluation");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Score", Storage="_score", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> Score {
			get {
				return this._score;
			}
			set {
				if ((value != this._score)) {
					this.OnPropertyChanging("Score", this._score);
					this._score = value;
					this.OnPropertyChanged("Score");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhaseId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> AppraisalPhaseId {
			get {
				return this._appraisalPhaseId;
			}
			set {
				if ((value != this._appraisalPhaseId)) {
					this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
					this._appraisalPhaseId = value;
					this.OnPropertyChanged("AppraisalPhaseId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Goal_x0020_Category", Storage="_goalCategoryId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> GoalCategoryId {
			get {
				return this._goalCategoryId;
			}
			set {
				if ((value != this._goalCategoryId)) {
					this.OnPropertyChanging("GoalCategoryId", this._goalCategoryId);
					this._goalCategoryId = value;
					this.OnPropertyChanged("GoalCategoryId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Goal_x0020_Category", Storage="_goalCategoryCategory", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string GoalCategoryCategory {
			get {
				return this._goalCategoryCategory;
			}
			set {
				if ((value != this._goalCategoryCategory)) {
					this.OnPropertyChanging("GoalCategoryCategory", this._goalCategoryCategory);
					this._goalCategoryCategory = value;
					this.OnPropertyChanged("GoalCategoryCategory");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Lock Audit")]
	public partial class AppraisalLockAuditItem : Item {
		
		private System.Nullable<bool> _locked;
		
		private System.Nullable<System.DateTime> _actionDate;
		
		private string _comments;
		
		private System.Nullable<int> _appraisalCycleId;
		
		private string _appraisalCyclePerformance_x0020_Cycle;
		
		private System.Nullable<int> _actionById;
		
		private string _actionByEmployee_x0020_Code;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalLockAuditItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Locked", Storage="_locked", FieldType="Boolean")]
		public System.Nullable<bool> Locked {
			get {
				return this._locked;
			}
			set {
				if ((value != this._locked)) {
					this.OnPropertyChanging("Locked", this._locked);
					this._locked = value;
					this.OnPropertyChanged("Locked");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Action_x0020_Date", Storage="_actionDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate {
			get {
				return this._actionDate;
			}
			set {
				if ((value != this._actionDate)) {
					this.OnPropertyChanging("ActionDate", this._actionDate);
					this._actionDate = value;
					this.OnPropertyChanged("ActionDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal_x0020_Cycle", Storage="_appraisalCycleId", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> AppraisalCycleId {
			get {
				return this._appraisalCycleId;
			}
			set {
				if ((value != this._appraisalCycleId)) {
					this.OnPropertyChanging("AppraisalCycleId", this._appraisalCycleId);
					this._appraisalCycleId = value;
					this.OnPropertyChanged("AppraisalCycleId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal_x0020_Cycle", Storage="_appraisalCyclePerformance_x0020_Cycle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string AppraisalCyclePerformance_x0020_Cycle {
			get {
				return this._appraisalCyclePerformance_x0020_Cycle;
			}
			set {
				if ((value != this._appraisalCyclePerformance_x0020_Cycle)) {
					this.OnPropertyChanging("AppraisalCyclePerformance_x0020_Cycle", this._appraisalCyclePerformance_x0020_Cycle);
					this._appraisalCyclePerformance_x0020_Cycle = value;
					this.OnPropertyChanged("AppraisalCyclePerformance_x0020_Cycle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Action_x0020_By", Storage="_actionById", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ActionById {
			get {
				return this._actionById;
			}
			set {
				if ((value != this._actionById)) {
					this.OnPropertyChanging("ActionById", this._actionById);
					this._actionById = value;
					this.OnPropertyChanged("ActionById");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Action_x0020_By", Storage="_actionByEmployee_x0020_Code", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ActionByEmployee_x0020_Code {
			get {
				return this._actionByEmployee_x0020_Code;
			}
			set {
				if ((value != this._actionByEmployee_x0020_Code)) {
					this.OnPropertyChanging("ActionByEmployee_x0020_Code", this._actionByEmployee_x0020_Code);
					this._actionByEmployee_x0020_Code = value;
					this.OnPropertyChanged("ActionByEmployee_x0020_Code");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Phases")]
	public partial class AppraisalPhasesItem : Item {
		
		private System.Nullable<double> _score;
		
		private System.Nullable<double> _signedOffOnBehalf;
		
		private string _signOffOnBehalfComments;
		
		private System.Nullable<bool> _hRReview;
		
		private string _hRReviewLatestComments;
		
		private System.Nullable<int> _appraisalId;
		
		private System.Nullable<int> _appraisalPhaseId;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalPhasesItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Score", Storage="_score", FieldType="Number")]
		public System.Nullable<double> Score {
			get {
				return this._score;
			}
			set {
				if ((value != this._score)) {
					this.OnPropertyChanging("Score", this._score);
					this._score = value;
					this.OnPropertyChanged("Score");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Signed_x0020_off_x0020_on_x0020_", Storage="_signedOffOnBehalf", FieldType="Number")]
		public System.Nullable<double> SignedOffOnBehalf {
			get {
				return this._signedOffOnBehalf;
			}
			set {
				if ((value != this._signedOffOnBehalf)) {
					this.OnPropertyChanging("SignedOffOnBehalf", this._signedOffOnBehalf);
					this._signedOffOnBehalf = value;
					this.OnPropertyChanged("SignedOffOnBehalf");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Sign_x0020_off_x0020_comments", Storage="_signOffOnBehalfComments", FieldType="Note")]
		public string SignOffOnBehalfComments {
			get {
				return this._signOffOnBehalfComments;
			}
			set {
				if ((value != this._signOffOnBehalfComments)) {
					this.OnPropertyChanging("SignOffOnBehalfComments", this._signOffOnBehalfComments);
					this._signOffOnBehalfComments = value;
					this.OnPropertyChanged("SignOffOnBehalfComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HR_x0020_Review", Storage="_hRReview", FieldType="Boolean")]
		public System.Nullable<bool> HRReview {
			get {
				return this._hRReview;
			}
			set {
				if ((value != this._hRReview)) {
					this.OnPropertyChanging("HRReview", this._hRReview);
					this._hRReview = value;
					this.OnPropertyChanged("HRReview");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HR_x0020_Review_x0020_Latest_x00", Storage="_hRReviewLatestComments", FieldType="Note")]
		public string HRReviewLatestComments {
			get {
				return this._hRReviewLatestComments;
			}
			set {
				if ((value != this._hRReviewLatestComments)) {
					this.OnPropertyChanging("HRReviewLatestComments", this._hRReviewLatestComments);
					this._hRReviewLatestComments = value;
					this.OnPropertyChanged("HRReviewLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal", Storage="_appraisalId", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> AppraisalId {
			get {
				return this._appraisalId;
			}
			set {
				if ((value != this._appraisalId)) {
					this.OnPropertyChanging("AppraisalId", this._appraisalId);
					this._appraisalId = value;
					this.OnPropertyChanged("AppraisalId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhaseId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> AppraisalPhaseId {
			get {
				return this._appraisalPhaseId;
			}
			set {
				if ((value != this._appraisalPhaseId)) {
					this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
					this._appraisalPhaseId = value;
					this.OnPropertyChanged("AppraisalPhaseId");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Status")]
	public partial class AppraisalStatusItem : Item {
		
		private string _statusText;
		
		private string _description;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalStatusItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status_x0020_Text", Storage="_statusText", Required=true, FieldType="Text")]
		public string StatusText {
			get {
				return this._statusText;
			}
			set {
				if ((value != this._statusText)) {
					this.OnPropertyChanging("StatusText", this._statusText);
					this._statusText = value;
					this.OnPropertyChanged("StatusText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", Required=true, FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Workflow History")]
	public partial class AppraisalWorkflowHistoryItem : Item {
		
		private System.Nullable<double> _appraisal;
		
		private string _fromStatus;
		
		private string _toStatus;
		
		private string _comment;
		
		private System.Nullable<double> _actor;
		
		private System.Nullable<System.DateTime> _actionDate;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalWorkflowHistoryItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal", Storage="_appraisal", Required=true, FieldType="Number")]
		public System.Nullable<double> Appraisal {
			get {
				return this._appraisal;
			}
			set {
				if ((value != this._appraisal)) {
					this.OnPropertyChanging("Appraisal", this._appraisal);
					this._appraisal = value;
					this.OnPropertyChanged("Appraisal");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="From_x0020_Status", Storage="_fromStatus", Required=true, FieldType="Text")]
		public string FromStatus {
			get {
				return this._fromStatus;
			}
			set {
				if ((value != this._fromStatus)) {
					this.OnPropertyChanging("FromStatus", this._fromStatus);
					this._fromStatus = value;
					this.OnPropertyChanged("FromStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="To_x0020_Status", Storage="_toStatus", Required=true, FieldType="Text")]
		public string ToStatus {
			get {
				return this._toStatus;
			}
			set {
				if ((value != this._toStatus)) {
					this.OnPropertyChanging("ToStatus", this._toStatus);
					this._toStatus = value;
					this.OnPropertyChanged("ToStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_comment", FieldType="Note")]
		public string Comment {
			get {
				return this._comment;
			}
			set {
				if ((value != this._comment)) {
					this.OnPropertyChanging("Comment", this._comment);
					this._comment = value;
					this.OnPropertyChanged("Comment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Actor", Storage="_actor", Required=true, FieldType="Number")]
		public System.Nullable<double> Actor {
			get {
				return this._actor;
			}
			set {
				if ((value != this._actor)) {
					this.OnPropertyChanging("Actor", this._actor);
					this._actor = value;
					this.OnPropertyChanged("Actor");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Action_x0020_Date", Storage="_actionDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate {
			get {
				return this._actionDate;
			}
			set {
				if ((value != this._actionDate)) {
					this.OnPropertyChanging("ActionDate", this._actionDate);
					this._actionDate = value;
					this.OnPropertyChanged("ActionDate");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisals")]
	public partial class AppraisalsItem : Item {
		
		private System.Nullable<double> _finalScore;
		
		private System.Nullable<double> _finalRating;
		
		private System.Nullable<bool> _deactivated;
		
		private System.Nullable<System.DateTime> _h1GoalSettingStartDate;
		
		private System.Nullable<System.DateTime> _h1AppraisalEvaluationStartDate;
		
		private System.Nullable<System.DateTime> _h2AppraisalEvaluationStartDate;
		
		private System.Nullable<int> _performanceCycleId;
		
		private string _performanceCyclePerformance_x0020_Cycle;
		
		private System.Nullable<int> _employeeCodeId;
		
		private string _employeeCodeEmployee_x0020_Code;
		
		private System.Nullable<int> _appraisalStatusId;
		
		private string _appraisalStatusStatus_x0020_Text;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalsItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Final_x0020_Score", Storage="_finalScore", FieldType="Number")]
		public System.Nullable<double> FinalScore {
			get {
				return this._finalScore;
			}
			set {
				if ((value != this._finalScore)) {
					this.OnPropertyChanging("FinalScore", this._finalScore);
					this._finalScore = value;
					this.OnPropertyChanged("FinalScore");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Final_x0020_Rating", Storage="_finalRating", FieldType="Number")]
		public System.Nullable<double> FinalRating {
			get {
				return this._finalRating;
			}
			set {
				if ((value != this._finalRating)) {
					this.OnPropertyChanging("FinalRating", this._finalRating);
					this._finalRating = value;
					this.OnPropertyChanged("FinalRating");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Deactivated", Storage="_deactivated", FieldType="Boolean")]
		public System.Nullable<bool> Deactivated {
			get {
				return this._deactivated;
			}
			set {
				if ((value != this._deactivated)) {
					this.OnPropertyChanging("Deactivated", this._deactivated);
					this._deactivated = value;
					this.OnPropertyChanged("Deactivated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1_x0020_Goal_x0020_Setting_x002", Storage="_h1GoalSettingStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H1GoalSettingStartDate {
			get {
				return this._h1GoalSettingStartDate;
			}
			set {
				if ((value != this._h1GoalSettingStartDate)) {
					this.OnPropertyChanging("H1GoalSettingStartDate", this._h1GoalSettingStartDate);
					this._h1GoalSettingStartDate = value;
					this.OnPropertyChanged("H1GoalSettingStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1_x0020_Appraisal_x0020_Evaluat", Storage="_h1AppraisalEvaluationStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H1AppraisalEvaluationStartDate {
			get {
				return this._h1AppraisalEvaluationStartDate;
			}
			set {
				if ((value != this._h1AppraisalEvaluationStartDate)) {
					this.OnPropertyChanging("H1AppraisalEvaluationStartDate", this._h1AppraisalEvaluationStartDate);
					this._h1AppraisalEvaluationStartDate = value;
					this.OnPropertyChanged("H1AppraisalEvaluationStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H2_x0020_Appraisal_x0020_Evaluat", Storage="_h2AppraisalEvaluationStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H2AppraisalEvaluationStartDate {
			get {
				return this._h2AppraisalEvaluationStartDate;
			}
			set {
				if ((value != this._h2AppraisalEvaluationStartDate)) {
					this.OnPropertyChanging("H2AppraisalEvaluationStartDate", this._h2AppraisalEvaluationStartDate);
					this._h2AppraisalEvaluationStartDate = value;
					this.OnPropertyChanged("H2AppraisalEvaluationStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Performance_x0020_Cycle", Storage="_performanceCycleId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> PerformanceCycleId {
			get {
				return this._performanceCycleId;
			}
			set {
				if ((value != this._performanceCycleId)) {
					this.OnPropertyChanging("PerformanceCycleId", this._performanceCycleId);
					this._performanceCycleId = value;
					this.OnPropertyChanged("PerformanceCycleId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Performance_x0020_Cycle", Storage="_performanceCyclePerformance_x0020_Cycle", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string PerformanceCyclePerformance_x0020_Cycle {
			get {
				return this._performanceCyclePerformance_x0020_Cycle;
			}
			set {
				if ((value != this._performanceCyclePerformance_x0020_Cycle)) {
					this.OnPropertyChanging("PerformanceCyclePerformance_x0020_Cycle", this._performanceCyclePerformance_x0020_Cycle);
					this._performanceCyclePerformance_x0020_Cycle = value;
					this.OnPropertyChanged("PerformanceCyclePerformance_x0020_Cycle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Employee_x0020_Code", Storage="_employeeCodeId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> EmployeeCodeId {
			get {
				return this._employeeCodeId;
			}
			set {
				if ((value != this._employeeCodeId)) {
					this.OnPropertyChanging("EmployeeCodeId", this._employeeCodeId);
					this._employeeCodeId = value;
					this.OnPropertyChanged("EmployeeCodeId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Employee_x0020_Code", Storage="_employeeCodeEmployee_x0020_Code", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string EmployeeCodeEmployee_x0020_Code {
			get {
				return this._employeeCodeEmployee_x0020_Code;
			}
			set {
				if ((value != this._employeeCodeEmployee_x0020_Code)) {
					this.OnPropertyChanging("EmployeeCodeEmployee_x0020_Code", this._employeeCodeEmployee_x0020_Code);
					this._employeeCodeEmployee_x0020_Code = value;
					this.OnPropertyChanged("EmployeeCodeEmployee_x0020_Code");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Aprraisal_x0020_Status", Storage="_appraisalStatusId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> AppraisalStatusId {
			get {
				return this._appraisalStatusId;
			}
			set {
				if ((value != this._appraisalStatusId)) {
					this.OnPropertyChanging("AppraisalStatusId", this._appraisalStatusId);
					this._appraisalStatusId = value;
					this.OnPropertyChanged("AppraisalStatusId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Aprraisal_x0020_Status", Storage="_appraisalStatusStatus_x0020_Text", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string AppraisalStatusStatus_x0020_Text {
			get {
				return this._appraisalStatusStatus_x0020_Text;
			}
			set {
				if ((value != this._appraisalStatusStatus_x0020_Text)) {
					this.OnPropertyChanging("AppraisalStatusStatus_x0020_Text", this._appraisalStatusStatus_x0020_Text);
					this._appraisalStatusStatus_x0020_Text = value;
					this.OnPropertyChanged("AppraisalStatusStatus_x0020_Text");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Areas")]
	public partial class AreasItem : Item {
		
		private string _personnelAreaCode;
		
		private string _personnelAreaText;
		
		private Microsoft.SharePoint.Linq.EntityRef<CompaniesItem> _companyCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<RegionsItem> _regionName;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem0;
		
		private Microsoft.SharePoint.Linq.EntitySet<SubAreasItem> _subAreasItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AreasItem() {
			this._companyCode = new Microsoft.SharePoint.Linq.EntityRef<CompaniesItem>();
			this._companyCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem>>(this.OnCompanyCodeSync);
			this._companyCode.OnChanged += new System.EventHandler(this.OnCompanyCodeChanged);
			this._companyCode.OnChanging += new System.EventHandler(this.OnCompanyCodeChanging);
			this._regionName = new Microsoft.SharePoint.Linq.EntityRef<RegionsItem>();
			this._regionName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem>>(this.OnRegionNameSync);
			this._regionName.OnChanged += new System.EventHandler(this.OnRegionNameChanged);
			this._regionName.OnChanging += new System.EventHandler(this.OnRegionNameChanging);
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this._employeesMasterItem0 = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItem0Sync);
			this._employeesMasterItem0.OnChanged += new System.EventHandler(this.OnEmployeesMasterItem0Changed);
			this._employeesMasterItem0.OnChanging += new System.EventHandler(this.OnEmployeesMasterItem0Changing);
			this._subAreasItem = new Microsoft.SharePoint.Linq.EntitySet<SubAreasItem>();
			this._subAreasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem>>(this.OnSubAreasItemSync);
			this._subAreasItem.OnChanged += new System.EventHandler(this.OnSubAreasItemChanged);
			this._subAreasItem.OnChanging += new System.EventHandler(this.OnSubAreasItemChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Personnel Area Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonnelAreaCode", Storage="_personnelAreaCode", Required=true, FieldType="Text")]
		public string PersonnelAreaCode {
			get {
				return this._personnelAreaCode;
			}
			set {
				if ((value != this._personnelAreaCode)) {
					this.OnPropertyChanging("PersonnelAreaCode", this._personnelAreaCode);
					this._personnelAreaCode = value;
					this.OnPropertyChanged("PersonnelAreaCode");
				}
			}
		}
		
		/// <summary>
		/// Personnel Area Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonnelAreaText", Storage="_personnelAreaText", Required=true, FieldType="Text")]
		public string PersonnelAreaText {
			get {
				return this._personnelAreaText;
			}
			set {
				if ((value != this._personnelAreaText)) {
					this.OnPropertyChanging("PersonnelAreaText", this._personnelAreaText);
					this._personnelAreaText = value;
					this.OnPropertyChanged("PersonnelAreaText");
				}
			}
		}
		
		/// <summary>
		/// Company Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CompanyCode", Storage="_companyCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Companies")]
		public CompaniesItem CompanyCode {
			get {
				return this._companyCode.GetEntity();
			}
			set {
				this._companyCode.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Region Name
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="RegionName", Storage="_regionName", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Regions")]
		public RegionsItem RegionName {
			get {
				return this._regionName.GetEntity();
			}
			set {
				this._regionName.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Area Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AreaCode", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		/// <summary>
		/// Area
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Area", Storage="_employeesMasterItem0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem0 {
			get {
				return this._employeesMasterItem0;
			}
			set {
				this._employeesMasterItem0.Assign(value);
			}
		}
		
		/// <summary>
		/// Personnel Area Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PersonnelAreaCode", Storage="_subAreasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Sub-Areas")]
		public Microsoft.SharePoint.Linq.EntitySet<SubAreasItem> SubAreasItem {
			get {
				return this._subAreasItem;
			}
			set {
				this._subAreasItem.Assign(value);
			}
		}
		
		private void OnCompanyCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CompanyCode", this._companyCode.Clone());
		}
		
		private void OnCompanyCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CompanyCode");
		}
		
		private void OnCompanyCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AreasItem.Add(this);
			}
			else {
				e.Item.AreasItem.Remove(this);
			}
		}
		
		private void OnRegionNameChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("RegionName", this._regionName.Clone());
		}
		
		private void OnRegionNameChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("RegionName");
		}
		
		private void OnRegionNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AreasItem.Add(this);
			}
			else {
				e.Item.AreasItem.Remove(this);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AreaCode = this;
			}
			else {
				e.Item.AreaCode = null;
			}
		}
		
		private void OnEmployeesMasterItem0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem0", this._employeesMasterItem0.Clone());
		}
		
		private void OnEmployeesMasterItem0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem0");
		}
		
		private void OnEmployeesMasterItem0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Area = this;
			}
			else {
				e.Item.Area = null;
			}
		}
		
		private void OnSubAreasItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SubAreasItem", this._subAreasItem.Clone());
		}
		
		private void OnSubAreasItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SubAreasItem");
		}
		
		private void OnSubAreasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PersonnelAreaCode = this;
			}
			else {
				e.Item.PersonnelAreaCode = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Comments History")]
	public partial class CommentsHistoryItem : Item {
		
		private System.Nullable<double> _commentFor;
		
		private System.Nullable<double> _referenceId;
		
		private string _comment;
		
		private System.Nullable<double> _commentedBy;
		
		private System.Nullable<System.DateTime> _commentedDate;
		
		private System.Nullable<double> _actor;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CommentsHistoryItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment_x0020_For", Storage="_commentFor", Required=true, FieldType="Number")]
		public System.Nullable<double> CommentFor {
			get {
				return this._commentFor;
			}
			set {
				if ((value != this._commentFor)) {
					this.OnPropertyChanging("CommentFor", this._commentFor);
					this._commentFor = value;
					this.OnPropertyChanged("CommentFor");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reference_x0020_Id", Storage="_referenceId", Required=true, FieldType="Number")]
		public System.Nullable<double> ReferenceId {
			get {
				return this._referenceId;
			}
			set {
				if ((value != this._referenceId)) {
					this.OnPropertyChanging("ReferenceId", this._referenceId);
					this._referenceId = value;
					this.OnPropertyChanged("ReferenceId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_comment", Required=true, FieldType="Note")]
		public string Comment {
			get {
				return this._comment;
			}
			set {
				if ((value != this._comment)) {
					this.OnPropertyChanging("Comment", this._comment);
					this._comment = value;
					this.OnPropertyChanged("Comment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Commented_x0020_By", Storage="_commentedBy", Required=true, FieldType="Number")]
		public System.Nullable<double> CommentedBy {
			get {
				return this._commentedBy;
			}
			set {
				if ((value != this._commentedBy)) {
					this.OnPropertyChanging("CommentedBy", this._commentedBy);
					this._commentedBy = value;
					this.OnPropertyChanged("CommentedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Commented_x0020_Date", Storage="_commentedDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> CommentedDate {
			get {
				return this._commentedDate;
			}
			set {
				if ((value != this._commentedDate)) {
					this.OnPropertyChanging("CommentedDate", this._commentedDate);
					this._commentedDate = value;
					this.OnPropertyChanged("CommentedDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Actor", Storage="_actor", Required=true, FieldType="Number")]
		public System.Nullable<double> Actor {
			get {
				return this._actor;
			}
			set {
				if ((value != this._actor)) {
					this.OnPropertyChanging("Actor", this._actor);
					this._actor = value;
					this.OnPropertyChanged("Actor");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Companies")]
	public partial class CompaniesItem : Item {
		
		private System.Nullable<double> _companyCode;
		
		private string _companyName;
		
		private Microsoft.SharePoint.Linq.EntitySet<AreasItem> _areasItem;
		
		private Microsoft.SharePoint.Linq.EntityRef<RegionsItem> _region;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CompaniesItem() {
			this._areasItem = new Microsoft.SharePoint.Linq.EntitySet<AreasItem>();
			this._areasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreasItemSync);
			this._areasItem.OnChanged += new System.EventHandler(this.OnAreasItemChanged);
			this._areasItem.OnChanging += new System.EventHandler(this.OnAreasItemChanging);
			this._region = new Microsoft.SharePoint.Linq.EntityRef<RegionsItem>();
			this._region.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem>>(this.OnRegionSync);
			this._region.OnChanged += new System.EventHandler(this.OnRegionChanged);
			this._region.OnChanging += new System.EventHandler(this.OnRegionChanging);
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Company Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyCode", Storage="_companyCode", Required=true, FieldType="Number")]
		public System.Nullable<double> CompanyCode {
			get {
				return this._companyCode;
			}
			set {
				if ((value != this._companyCode)) {
					this.OnPropertyChanging("CompanyCode", this._companyCode);
					this._companyCode = value;
					this.OnPropertyChanged("CompanyCode");
				}
			}
		}
		
		/// <summary>
		/// Company Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyName", Storage="_companyName", Required=true, FieldType="Text")]
		public string CompanyName {
			get {
				return this._companyName;
			}
			set {
				if ((value != this._companyName)) {
					this.OnPropertyChanging("CompanyName", this._companyName);
					this._companyName = value;
					this.OnPropertyChanged("CompanyName");
				}
			}
		}
		
		/// <summary>
		/// Company Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CompanyCode", Storage="_areasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Areas")]
		public Microsoft.SharePoint.Linq.EntitySet<AreasItem> AreasItem {
			get {
				return this._areasItem;
			}
			set {
				this._areasItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Region", Storage="_region", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Regions")]
		public RegionsItem Region {
			get {
				return this._region.GetEntity();
			}
			set {
				this._region.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Company Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CompanyCode", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnAreasItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AreasItem", this._areasItem.Clone());
		}
		
		private void OnAreasItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AreasItem");
		}
		
		private void OnAreasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CompanyCode = this;
			}
			else {
				e.Item.CompanyCode = null;
			}
		}
		
		private void OnRegionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Region", this._region.Clone());
		}
		
		private void OnRegionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Region");
		}
		
		private void OnRegionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CompaniesItem.Add(this);
			}
			else {
				e.Item.CompaniesItem.Remove(this);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CompanyCode = this;
			}
			else {
				e.Item.CompanyCode = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Competencies")]
	public partial class CompetenciesItem : Item {
		
		private string _competency;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CompetenciesItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Competency", Storage="_competency", Required=true, FieldType="Text")]
		public string Competency {
			get {
				return this._competency;
			}
			set {
				if ((value != this._competency)) {
					this.OnPropertyChanging("Competency", this._competency);
					this._competency = value;
					this.OnPropertyChanged("Competency");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Competency Descriptions")]
	public partial class CompetencyDescriptionsItem : Item {
		
		private string _description;
		
		private System.Nullable<int> _competencyId;
		
		private string _competencyCompetency;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CompetencyDescriptionsItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", Required=true, FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Competency", Storage="_competencyId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> CompetencyId {
			get {
				return this._competencyId;
			}
			set {
				if ((value != this._competencyId)) {
					this.OnPropertyChanging("CompetencyId", this._competencyId);
					this._competencyId = value;
					this.OnPropertyChanged("CompetencyId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Competency", Storage="_competencyCompetency", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string CompetencyCompetency {
			get {
				return this._competencyCompetency;
			}
			set {
				if ((value != this._competencyCompetency)) {
					this.OnPropertyChanging("CompetencyCompetency", this._competencyCompetency);
					this._competencyCompetency = value;
					this.OnPropertyChanged("CompetencyCompetency");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Competency Ratings")]
	public partial class CompetencyRatingsItem : Item {
		
		private string _rating;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CompetencyRatingsItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Rating", Storage="_rating", Required=true, FieldType="Text")]
		public string Rating {
			get {
				return this._rating;
			}
			set {
				if ((value != this._rating)) {
					this.OnPropertyChanging("Rating", this._rating);
					this._rating = value;
					this.OnPropertyChanged("Rating");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Employee Groups")]
	public partial class EmployeeGroupsItem : Item {
		
		private string _employeeGroupCode;
		
		private string _employeeGroupText;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem> _employeeSubGroupsItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EmployeeGroupsItem() {
			this._employeeSubGroupsItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem>();
			this._employeeSubGroupsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem>>(this.OnEmployeeSubGroupsItemSync);
			this._employeeSubGroupsItem.OnChanged += new System.EventHandler(this.OnEmployeeSubGroupsItemChanged);
			this._employeeSubGroupsItem.OnChanging += new System.EventHandler(this.OnEmployeeSubGroupsItemChanging);
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Employee Group Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeGroupCode", Storage="_employeeGroupCode", Required=true, FieldType="Text")]
		public string EmployeeGroupCode {
			get {
				return this._employeeGroupCode;
			}
			set {
				if ((value != this._employeeGroupCode)) {
					this.OnPropertyChanging("EmployeeGroupCode", this._employeeGroupCode);
					this._employeeGroupCode = value;
					this.OnPropertyChanged("EmployeeGroupCode");
				}
			}
		}
		
		/// <summary>
		/// Employee Group Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeGroupText", Storage="_employeeGroupText", Required=true, FieldType="Text")]
		public string EmployeeGroupText {
			get {
				return this._employeeGroupText;
			}
			set {
				if ((value != this._employeeGroupText)) {
					this.OnPropertyChanging("EmployeeGroupText", this._employeeGroupText);
					this._employeeGroupText = value;
					this.OnPropertyChanged("EmployeeGroupText");
				}
			}
		}
		
		/// <summary>
		/// Employee Group Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeGroupCode", Storage="_employeeSubGroupsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employee Sub Groups")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem> EmployeeSubGroupsItem {
			get {
				return this._employeeSubGroupsItem;
			}
			set {
				this._employeeSubGroupsItem.Assign(value);
			}
		}
		
		/// <summary>
		/// Employee Group Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeGroup", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnEmployeeSubGroupsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeSubGroupsItem", this._employeeSubGroupsItem.Clone());
		}
		
		private void OnEmployeeSubGroupsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeSubGroupsItem");
		}
		
		private void OnEmployeeSubGroupsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeeGroupCode = this;
			}
			else {
				e.Item.EmployeeGroupCode = null;
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeeGroup = this;
			}
			else {
				e.Item.EmployeeGroup = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Employee Sub Groups")]
	public partial class EmployeeSubGroupsItem : Item {
		
		private string _employeeSubGroupCode;
		
		private string _employeeSubGroupText;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem> _employeeGroupCode;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EmployeeSubGroupsItem() {
			this._employeeGroupCode = new Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem>();
			this._employeeGroupCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem>>(this.OnEmployeeGroupCodeSync);
			this._employeeGroupCode.OnChanged += new System.EventHandler(this.OnEmployeeGroupCodeChanged);
			this._employeeGroupCode.OnChanging += new System.EventHandler(this.OnEmployeeGroupCodeChanging);
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Employee Sub Group Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeSubGroupCode", Storage="_employeeSubGroupCode", Required=true, FieldType="Text")]
		public string EmployeeSubGroupCode {
			get {
				return this._employeeSubGroupCode;
			}
			set {
				if ((value != this._employeeSubGroupCode)) {
					this.OnPropertyChanging("EmployeeSubGroupCode", this._employeeSubGroupCode);
					this._employeeSubGroupCode = value;
					this.OnPropertyChanged("EmployeeSubGroupCode");
				}
			}
		}
		
		/// <summary>
		/// Employee Sub Group Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeSubGroupText", Storage="_employeeSubGroupText", Required=true, FieldType="Text")]
		public string EmployeeSubGroupText {
			get {
				return this._employeeSubGroupText;
			}
			set {
				if ((value != this._employeeSubGroupText)) {
					this.OnPropertyChanging("EmployeeSubGroupText", this._employeeSubGroupText);
					this._employeeSubGroupText = value;
					this.OnPropertyChanged("EmployeeSubGroupText");
				}
			}
		}
		
		/// <summary>
		/// Employee Group Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeGroupCode", Storage="_employeeGroupCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employee Groups")]
		public EmployeeGroupsItem EmployeeGroupCode {
			get {
				return this._employeeGroupCode.GetEntity();
			}
			set {
				this._employeeGroupCode.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Employee Sub Group Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeSubGroup", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnEmployeeGroupCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeGroupCode", this._employeeGroupCode.Clone());
		}
		
		private void OnEmployeeGroupCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeGroupCode");
		}
		
		private void OnEmployeeGroupCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeeSubGroupsItem.Add(this);
			}
			else {
				e.Item.EmployeeSubGroupsItem.Remove(this);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeeSubGroup = this;
			}
			else {
				e.Item.EmployeeSubGroup = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Employees Master")]
	public partial class EmployeesMasterItem : Item {
		
		private string _employeeName;
		
		private System.Nullable<double> _employeeCode;
		
		private string _organizationUnit;
		
		private string _position;
		
		private System.Nullable<System.DateTime> _hireDate;
		
		private System.Nullable<double> _reportingManagerEmployeeCode;
		
		private string _reportingManagerName;
		
		private System.Nullable<double> _departmentHeadEmployeeCode;
		
		private string _departmentHeadName;
		
		private System.Nullable<double> _hRBusinessPartnerEmployeeCode;
		
		private string _hRBusinessPartnerName;
		
		private string _companyName;
		
		private System.Nullable<System.DateTime> _confirmationDate;
		
		private System.Nullable<System.DateTime> _confirmationDueDate;
		
		private string _employeeStatus;
		
		private System.Nullable<double> _oldEmployeeCode;
		
		private string _windowsLogin;
		
		private System.Nullable<bool> _status;
		
		private Microsoft.SharePoint.Linq.EntityRef<OrganizationUnitsItem> _oUCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<PositionsItem> _positionCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem> _employeeGroup;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeeSubGroupsItem> _employeeSubGroup;
		
		private Microsoft.SharePoint.Linq.EntityRef<CompaniesItem> _companyCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<RegionsItem> _hRRegion;
		
		private Microsoft.SharePoint.Linq.EntityRef<AreasItem> _areaCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<AreasItem> _area;
		
		private Microsoft.SharePoint.Linq.EntityRef<SubAreasItem> _subAreaCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<SubAreasItem> _subArea;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EmployeesMasterItem() {
			this._oUCode = new Microsoft.SharePoint.Linq.EntityRef<OrganizationUnitsItem>();
			this._oUCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<OrganizationUnitsItem>>(this.OnOUCodeSync);
			this._oUCode.OnChanged += new System.EventHandler(this.OnOUCodeChanged);
			this._oUCode.OnChanging += new System.EventHandler(this.OnOUCodeChanging);
			this._positionCode = new Microsoft.SharePoint.Linq.EntityRef<PositionsItem>();
			this._positionCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PositionsItem>>(this.OnPositionCodeSync);
			this._positionCode.OnChanged += new System.EventHandler(this.OnPositionCodeChanged);
			this._positionCode.OnChanging += new System.EventHandler(this.OnPositionCodeChanging);
			this._employeeGroup = new Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem>();
			this._employeeGroup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem>>(this.OnEmployeeGroupSync);
			this._employeeGroup.OnChanged += new System.EventHandler(this.OnEmployeeGroupChanged);
			this._employeeGroup.OnChanging += new System.EventHandler(this.OnEmployeeGroupChanging);
			this._employeeSubGroup = new Microsoft.SharePoint.Linq.EntityRef<EmployeeSubGroupsItem>();
			this._employeeSubGroup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem>>(this.OnEmployeeSubGroupSync);
			this._employeeSubGroup.OnChanged += new System.EventHandler(this.OnEmployeeSubGroupChanged);
			this._employeeSubGroup.OnChanging += new System.EventHandler(this.OnEmployeeSubGroupChanging);
			this._companyCode = new Microsoft.SharePoint.Linq.EntityRef<CompaniesItem>();
			this._companyCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem>>(this.OnCompanyCodeSync);
			this._companyCode.OnChanged += new System.EventHandler(this.OnCompanyCodeChanged);
			this._companyCode.OnChanging += new System.EventHandler(this.OnCompanyCodeChanging);
			this._hRRegion = new Microsoft.SharePoint.Linq.EntityRef<RegionsItem>();
			this._hRRegion.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem>>(this.OnHRRegionSync);
			this._hRRegion.OnChanged += new System.EventHandler(this.OnHRRegionChanged);
			this._hRRegion.OnChanging += new System.EventHandler(this.OnHRRegionChanging);
			this._areaCode = new Microsoft.SharePoint.Linq.EntityRef<AreasItem>();
			this._areaCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreaCodeSync);
			this._areaCode.OnChanged += new System.EventHandler(this.OnAreaCodeChanged);
			this._areaCode.OnChanging += new System.EventHandler(this.OnAreaCodeChanging);
			this._area = new Microsoft.SharePoint.Linq.EntityRef<AreasItem>();
			this._area.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreaSync);
			this._area.OnChanged += new System.EventHandler(this.OnAreaChanged);
			this._area.OnChanging += new System.EventHandler(this.OnAreaChanging);
			this._subAreaCode = new Microsoft.SharePoint.Linq.EntityRef<SubAreasItem>();
			this._subAreaCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem>>(this.OnSubAreaCodeSync);
			this._subAreaCode.OnChanged += new System.EventHandler(this.OnSubAreaCodeChanged);
			this._subAreaCode.OnChanging += new System.EventHandler(this.OnSubAreaCodeChanging);
			this._subArea = new Microsoft.SharePoint.Linq.EntityRef<SubAreasItem>();
			this._subArea.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem>>(this.OnSubAreaSync);
			this._subArea.OnChanged += new System.EventHandler(this.OnSubAreaChanged);
			this._subArea.OnChanging += new System.EventHandler(this.OnSubAreaChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Employee Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeName", Storage="_employeeName", Required=true, FieldType="Text")]
		public string EmployeeName {
			get {
				return this._employeeName;
			}
			set {
				if ((value != this._employeeName)) {
					this.OnPropertyChanging("EmployeeName", this._employeeName);
					this._employeeName = value;
					this.OnPropertyChanged("EmployeeName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeCode", Storage="_employeeCode", Required=true, FieldType="Number")]
		public System.Nullable<double> EmployeeCode {
			get {
				return this._employeeCode;
			}
			set {
				if ((value != this._employeeCode)) {
					this.OnPropertyChanging("EmployeeCode", this._employeeCode);
					this._employeeCode = value;
					this.OnPropertyChanged("EmployeeCode");
				}
			}
		}
		
		/// <summary>
		/// Organization Unit
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrganizationUnit", Storage="_organizationUnit", Required=true, FieldType="Text")]
		public string OrganizationUnit {
			get {
				return this._organizationUnit;
			}
			set {
				if ((value != this._organizationUnit)) {
					this.OnPropertyChanging("OrganizationUnit", this._organizationUnit);
					this._organizationUnit = value;
					this.OnPropertyChanged("OrganizationUnit");
				}
			}
		}
		
		/// <summary>
		/// Position Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Position", Storage="_position", Required=true, FieldType="Text")]
		public string Position {
			get {
				return this._position;
			}
			set {
				if ((value != this._position)) {
					this.OnPropertyChanging("Position", this._position);
					this._position = value;
					this.OnPropertyChanged("Position");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HireDate", Storage="_hireDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> HireDate {
			get {
				return this._hireDate;
			}
			set {
				if ((value != this._hireDate)) {
					this.OnPropertyChanging("HireDate", this._hireDate);
					this._hireDate = value;
					this.OnPropertyChanged("HireDate");
				}
			}
		}
		
		/// <summary>
		/// Reporting Manager Employee Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportingManagerEmployeeCode", Storage="_reportingManagerEmployeeCode", Required=true, FieldType="Number")]
		public System.Nullable<double> ReportingManagerEmployeeCode {
			get {
				return this._reportingManagerEmployeeCode;
			}
			set {
				if ((value != this._reportingManagerEmployeeCode)) {
					this.OnPropertyChanging("ReportingManagerEmployeeCode", this._reportingManagerEmployeeCode);
					this._reportingManagerEmployeeCode = value;
					this.OnPropertyChanged("ReportingManagerEmployeeCode");
				}
			}
		}
		
		/// <summary>
		/// Reporting Manager Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportingManagerName", Storage="_reportingManagerName", Required=true, FieldType="Text")]
		public string ReportingManagerName {
			get {
				return this._reportingManagerName;
			}
			set {
				if ((value != this._reportingManagerName)) {
					this.OnPropertyChanging("ReportingManagerName", this._reportingManagerName);
					this._reportingManagerName = value;
					this.OnPropertyChanged("ReportingManagerName");
				}
			}
		}
		
		/// <summary>
		/// Department Head Employee Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DepartmentHeadEmployeeCode", Storage="_departmentHeadEmployeeCode", Required=true, FieldType="Number")]
		public System.Nullable<double> DepartmentHeadEmployeeCode {
			get {
				return this._departmentHeadEmployeeCode;
			}
			set {
				if ((value != this._departmentHeadEmployeeCode)) {
					this.OnPropertyChanging("DepartmentHeadEmployeeCode", this._departmentHeadEmployeeCode);
					this._departmentHeadEmployeeCode = value;
					this.OnPropertyChanged("DepartmentHeadEmployeeCode");
				}
			}
		}
		
		/// <summary>
		/// Department Head Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DepartmentHeadName", Storage="_departmentHeadName", Required=true, FieldType="Text")]
		public string DepartmentHeadName {
			get {
				return this._departmentHeadName;
			}
			set {
				if ((value != this._departmentHeadName)) {
					this.OnPropertyChanging("DepartmentHeadName", this._departmentHeadName);
					this._departmentHeadName = value;
					this.OnPropertyChanged("DepartmentHeadName");
				}
			}
		}
		
		/// <summary>
		/// HR Business Partner Employee Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HRBusinessPartnerEmployeeCode", Storage="_hRBusinessPartnerEmployeeCode", Required=true, FieldType="Number")]
		public System.Nullable<double> HRBusinessPartnerEmployeeCode {
			get {
				return this._hRBusinessPartnerEmployeeCode;
			}
			set {
				if ((value != this._hRBusinessPartnerEmployeeCode)) {
					this.OnPropertyChanging("HRBusinessPartnerEmployeeCode", this._hRBusinessPartnerEmployeeCode);
					this._hRBusinessPartnerEmployeeCode = value;
					this.OnPropertyChanged("HRBusinessPartnerEmployeeCode");
				}
			}
		}
		
		/// <summary>
		/// HR Business Partner Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HRBusinessPartnerName", Storage="_hRBusinessPartnerName", Required=true, FieldType="Text")]
		public string HRBusinessPartnerName {
			get {
				return this._hRBusinessPartnerName;
			}
			set {
				if ((value != this._hRBusinessPartnerName)) {
					this.OnPropertyChanging("HRBusinessPartnerName", this._hRBusinessPartnerName);
					this._hRBusinessPartnerName = value;
					this.OnPropertyChanged("HRBusinessPartnerName");
				}
			}
		}
		
		/// <summary>
		/// Company Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyName", Storage="_companyName", Required=true, FieldType="Text")]
		public string CompanyName {
			get {
				return this._companyName;
			}
			set {
				if ((value != this._companyName)) {
					this.OnPropertyChanging("CompanyName", this._companyName);
					this._companyName = value;
					this.OnPropertyChanged("CompanyName");
				}
			}
		}
		
		/// <summary>
		/// Confirmation Date
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConfirmationDate", Storage="_confirmationDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmationDate {
			get {
				return this._confirmationDate;
			}
			set {
				if ((value != this._confirmationDate)) {
					this.OnPropertyChanging("ConfirmationDate", this._confirmationDate);
					this._confirmationDate = value;
					this.OnPropertyChanged("ConfirmationDate");
				}
			}
		}
		
		/// <summary>
		/// Confirmation Due Date
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ConfirmationDueDate", Storage="_confirmationDueDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmationDueDate {
			get {
				return this._confirmationDueDate;
			}
			set {
				if ((value != this._confirmationDueDate)) {
					this.OnPropertyChanging("ConfirmationDueDate", this._confirmationDueDate);
					this._confirmationDueDate = value;
					this.OnPropertyChanged("ConfirmationDueDate");
				}
			}
		}
		
		/// <summary>
		/// Employee Status
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeStatus", Storage="_employeeStatus", Required=true, FieldType="Text")]
		public string EmployeeStatus {
			get {
				return this._employeeStatus;
			}
			set {
				if ((value != this._employeeStatus)) {
					this.OnPropertyChanging("EmployeeStatus", this._employeeStatus);
					this._employeeStatus = value;
					this.OnPropertyChanged("EmployeeStatus");
				}
			}
		}
		
		/// <summary>
		/// Old Employee Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OldEmployeeCode", Storage="_oldEmployeeCode", FieldType="Number")]
		public System.Nullable<double> OldEmployeeCode {
			get {
				return this._oldEmployeeCode;
			}
			set {
				if ((value != this._oldEmployeeCode)) {
					this.OnPropertyChanging("OldEmployeeCode", this._oldEmployeeCode);
					this._oldEmployeeCode = value;
					this.OnPropertyChanged("OldEmployeeCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WindowsLogin", Storage="_windowsLogin", Required=true, FieldType="Text")]
		public string WindowsLogin {
			get {
				return this._windowsLogin;
			}
			set {
				if ((value != this._windowsLogin)) {
					this.OnPropertyChanging("WindowsLogin", this._windowsLogin);
					this._windowsLogin = value;
					this.OnPropertyChanged("WindowsLogin");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", FieldType="Boolean")]
		public System.Nullable<bool> Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		/// <summary>
		/// OU Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OUCode", Storage="_oUCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Organization Units")]
		public OrganizationUnitsItem OUCode {
			get {
				return this._oUCode.GetEntity();
			}
			set {
				this._oUCode.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Position Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PositionCode", Storage="_positionCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Positions")]
		public PositionsItem PositionCode {
			get {
				return this._positionCode.GetEntity();
			}
			set {
				this._positionCode.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Employee Group Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeGroup", Storage="_employeeGroup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employee Groups")]
		public EmployeeGroupsItem EmployeeGroup {
			get {
				return this._employeeGroup.GetEntity();
			}
			set {
				this._employeeGroup.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Employee Sub Group Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="EmployeeSubGroup", Storage="_employeeSubGroup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employee Sub Groups")]
		public EmployeeSubGroupsItem EmployeeSubGroup {
			get {
				return this._employeeSubGroup.GetEntity();
			}
			set {
				this._employeeSubGroup.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Company Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="CompanyCode", Storage="_companyCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Companies")]
		public CompaniesItem CompanyCode {
			get {
				return this._companyCode.GetEntity();
			}
			set {
				this._companyCode.SetEntity(value);
			}
		}
		
		/// <summary>
		/// HR Region
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="HRRegion", Storage="_hRRegion", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Regions")]
		public RegionsItem HRRegion {
			get {
				return this._hRRegion.GetEntity();
			}
			set {
				this._hRRegion.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Area Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="AreaCode", Storage="_areaCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Areas")]
		public AreasItem AreaCode {
			get {
				return this._areaCode.GetEntity();
			}
			set {
				this._areaCode.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Area
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Area", Storage="_area", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Areas")]
		public AreasItem Area {
			get {
				return this._area.GetEntity();
			}
			set {
				this._area.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Sub Area Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SubAreaCode", Storage="_subAreaCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Sub-Areas")]
		public SubAreasItem SubAreaCode {
			get {
				return this._subAreaCode.GetEntity();
			}
			set {
				this._subAreaCode.SetEntity(value);
			}
		}
		
		/// <summary>
		/// Sub Area
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SubArea", Storage="_subArea", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Sub-Areas")]
		public SubAreasItem SubArea {
			get {
				return this._subArea.GetEntity();
			}
			set {
				this._subArea.SetEntity(value);
			}
		}
		
		private void OnOUCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("OUCode", this._oUCode.Clone());
		}
		
		private void OnOUCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("OUCode");
		}
		
		private void OnOUCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<OrganizationUnitsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnPositionCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PositionCode", this._positionCode.Clone());
		}
		
		private void OnPositionCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PositionCode");
		}
		
		private void OnPositionCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PositionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnEmployeeGroupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeGroup", this._employeeGroup.Clone());
		}
		
		private void OnEmployeeGroupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeGroup");
		}
		
		private void OnEmployeeGroupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnEmployeeSubGroupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeSubGroup", this._employeeSubGroup.Clone());
		}
		
		private void OnEmployeeSubGroupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeSubGroup");
		}
		
		private void OnEmployeeSubGroupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnCompanyCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CompanyCode", this._companyCode.Clone());
		}
		
		private void OnCompanyCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CompanyCode");
		}
		
		private void OnCompanyCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnHRRegionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("HRRegion", this._hRRegion.Clone());
		}
		
		private void OnHRRegionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("HRRegion");
		}
		
		private void OnHRRegionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnAreaCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AreaCode", this._areaCode.Clone());
		}
		
		private void OnAreaCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AreaCode");
		}
		
		private void OnAreaCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnAreaChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Area", this._area.Clone());
		}
		
		private void OnAreaChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Area");
		}
		
		private void OnAreaSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem0.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem0.Remove(this);
			}
		}
		
		private void OnSubAreaCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SubAreaCode", this._subAreaCode.Clone());
		}
		
		private void OnSubAreaCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SubAreaCode");
		}
		
		private void OnSubAreaCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnSubAreaChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SubArea", this._subArea.Clone());
		}
		
		private void OnSubAreaChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SubArea");
		}
		
		private void OnSubAreaSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem0.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem0.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Goal Categories")]
	public partial class GoalCategoriesItem : Item {
		
		private string _category;
		
		private System.Nullable<bool> _mandatory;
		
		private string _description;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public GoalCategoriesItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", Required=true, FieldType="Text")]
		public string Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Mandatory", Storage="_mandatory", FieldType="Boolean")]
		public System.Nullable<bool> Mandatory {
			get {
				return this._mandatory;
			}
			set {
				if ((value != this._mandatory)) {
					this.OnPropertyChanging("Mandatory", this._mandatory);
					this._mandatory = value;
					this.OnPropertyChanged("Mandatory");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Organization Units")]
	public partial class OrganizationUnitsItem : Item {
		
		private System.Nullable<double> _organizationUnitCode;
		
		private string _organizationUnitShortText;
		
		private string _organizationUnitLongText;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public OrganizationUnitsItem() {
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Organization Unit Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrganizationUnitCode", Storage="_organizationUnitCode", Required=true, FieldType="Number")]
		public System.Nullable<double> OrganizationUnitCode {
			get {
				return this._organizationUnitCode;
			}
			set {
				if ((value != this._organizationUnitCode)) {
					this.OnPropertyChanging("OrganizationUnitCode", this._organizationUnitCode);
					this._organizationUnitCode = value;
					this.OnPropertyChanged("OrganizationUnitCode");
				}
			}
		}
		
		/// <summary>
		/// Organization Unit Short Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrganizationUnitShortText", Storage="_organizationUnitShortText", Required=true, FieldType="Text")]
		public string OrganizationUnitShortText {
			get {
				return this._organizationUnitShortText;
			}
			set {
				if ((value != this._organizationUnitShortText)) {
					this.OnPropertyChanging("OrganizationUnitShortText", this._organizationUnitShortText);
					this._organizationUnitShortText = value;
					this.OnPropertyChanged("OrganizationUnitShortText");
				}
			}
		}
		
		/// <summary>
		/// Organization Unit Long Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OrganizationUnitLongText", Storage="_organizationUnitLongText", Required=true, FieldType="Text")]
		public string OrganizationUnitLongText {
			get {
				return this._organizationUnitLongText;
			}
			set {
				if ((value != this._organizationUnitLongText)) {
					this.OnPropertyChanging("OrganizationUnitLongText", this._organizationUnitLongText);
					this._organizationUnitLongText = value;
					this.OnPropertyChanged("OrganizationUnitLongText");
				}
			}
		}
		
		/// <summary>
		/// OU Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OUCode", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.OUCode = this;
			}
			else {
				e.Item.OUCode = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Performance Cycle Activity")]
	public partial class PerformanceCycleActivityItem : Item {
		
		private System.Nullable<double> _performanceCycle;
		
		private System.Nullable<System.DateTime> _h1GoalSettingStartDate;
		
		private System.Nullable<double> _h1GoalSettingStartedBy;
		
		private System.Nullable<double> _h1SelfEvaluationStartedBy;
		
		private System.Nullable<double> _h2SelfEvaluationStartedBy;
		
		private System.Nullable<System.DateTime> _cycleCloseDate;
		
		private System.Nullable<System.DateTime> _h2SelfEvaluationStartDate;
		
		private System.Nullable<System.DateTime> _h1SelfEvaluationStartDate;
		
		private System.Nullable<double> _cycleClosedBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PerformanceCycleActivityItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PerformanceCycle", Storage="_performanceCycle", Required=true, FieldType="Number")]
		public System.Nullable<double> PerformanceCycle {
			get {
				return this._performanceCycle;
			}
			set {
				if ((value != this._performanceCycle)) {
					this.OnPropertyChanging("PerformanceCycle", this._performanceCycle);
					this._performanceCycle = value;
					this.OnPropertyChanged("PerformanceCycle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1GoalSettingStartDate", Storage="_h1GoalSettingStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H1GoalSettingStartDate {
			get {
				return this._h1GoalSettingStartDate;
			}
			set {
				if ((value != this._h1GoalSettingStartDate)) {
					this.OnPropertyChanging("H1GoalSettingStartDate", this._h1GoalSettingStartDate);
					this._h1GoalSettingStartDate = value;
					this.OnPropertyChanged("H1GoalSettingStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1GoalSettingStartedBy", Storage="_h1GoalSettingStartedBy", FieldType="Number")]
		public System.Nullable<double> H1GoalSettingStartedBy {
			get {
				return this._h1GoalSettingStartedBy;
			}
			set {
				if ((value != this._h1GoalSettingStartedBy)) {
					this.OnPropertyChanging("H1GoalSettingStartedBy", this._h1GoalSettingStartedBy);
					this._h1GoalSettingStartedBy = value;
					this.OnPropertyChanged("H1GoalSettingStartedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1SelfEvaluationStartedBy", Storage="_h1SelfEvaluationStartedBy", FieldType="Number")]
		public System.Nullable<double> H1SelfEvaluationStartedBy {
			get {
				return this._h1SelfEvaluationStartedBy;
			}
			set {
				if ((value != this._h1SelfEvaluationStartedBy)) {
					this.OnPropertyChanging("H1SelfEvaluationStartedBy", this._h1SelfEvaluationStartedBy);
					this._h1SelfEvaluationStartedBy = value;
					this.OnPropertyChanged("H1SelfEvaluationStartedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H2SelfEvaluationStartedBy", Storage="_h2SelfEvaluationStartedBy", FieldType="Number")]
		public System.Nullable<double> H2SelfEvaluationStartedBy {
			get {
				return this._h2SelfEvaluationStartedBy;
			}
			set {
				if ((value != this._h2SelfEvaluationStartedBy)) {
					this.OnPropertyChanging("H2SelfEvaluationStartedBy", this._h2SelfEvaluationStartedBy);
					this._h2SelfEvaluationStartedBy = value;
					this.OnPropertyChanged("H2SelfEvaluationStartedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CycleCloseDate", Storage="_cycleCloseDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> CycleCloseDate {
			get {
				return this._cycleCloseDate;
			}
			set {
				if ((value != this._cycleCloseDate)) {
					this.OnPropertyChanging("CycleCloseDate", this._cycleCloseDate);
					this._cycleCloseDate = value;
					this.OnPropertyChanged("CycleCloseDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H2SelfEvaluationStartDate", Storage="_h2SelfEvaluationStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H2SelfEvaluationStartDate {
			get {
				return this._h2SelfEvaluationStartDate;
			}
			set {
				if ((value != this._h2SelfEvaluationStartDate)) {
					this.OnPropertyChanging("H2SelfEvaluationStartDate", this._h2SelfEvaluationStartDate);
					this._h2SelfEvaluationStartDate = value;
					this.OnPropertyChanged("H2SelfEvaluationStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1SelfEvaluationStartDate", Storage="_h1SelfEvaluationStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H1SelfEvaluationStartDate {
			get {
				return this._h1SelfEvaluationStartDate;
			}
			set {
				if ((value != this._h1SelfEvaluationStartDate)) {
					this.OnPropertyChanging("H1SelfEvaluationStartDate", this._h1SelfEvaluationStartDate);
					this._h1SelfEvaluationStartDate = value;
					this.OnPropertyChanged("H1SelfEvaluationStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CycleClosedBy", Storage="_cycleClosedBy", FieldType="Number")]
		public System.Nullable<double> CycleClosedBy {
			get {
				return this._cycleClosedBy;
			}
			set {
				if ((value != this._cycleClosedBy)) {
					this.OnPropertyChanging("CycleClosedBy", this._cycleClosedBy);
					this._cycleClosedBy = value;
					this.OnPropertyChanged("CycleClosedBy");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Performance Cycles")]
	public partial class PerformanceCyclesItem : Item {
		
		private System.Nullable<double> _performanceCycle;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private System.Nullable<bool> _locked;
		
		private System.Nullable<bool> _current;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PerformanceCyclesItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Performance_x0020_Cycle", Storage="_performanceCycle", Required=true, FieldType="Number")]
		public System.Nullable<double> PerformanceCycle {
			get {
				return this._performanceCycle;
			}
			set {
				if ((value != this._performanceCycle)) {
					this.OnPropertyChanging("PerformanceCycle", this._performanceCycle);
					this._performanceCycle = value;
					this.OnPropertyChanged("PerformanceCycle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Text")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Start_x0020_Date", Storage="_startDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="End_x0020_Date", Storage="_endDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndDate {
			get {
				return this._endDate;
			}
			set {
				if ((value != this._endDate)) {
					this.OnPropertyChanging("EndDate", this._endDate);
					this._endDate = value;
					this.OnPropertyChanged("EndDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Locked", Storage="_locked", FieldType="Boolean")]
		public System.Nullable<bool> Locked {
			get {
				return this._locked;
			}
			set {
				if ((value != this._locked)) {
					this.OnPropertyChanging("Locked", this._locked);
					this._locked = value;
					this.OnPropertyChanged("Locked");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Current", Storage="_current", FieldType="Boolean")]
		public System.Nullable<bool> Current {
			get {
				return this._current;
			}
			set {
				if ((value != this._current)) {
					this.OnPropertyChanging("Current", this._current);
					this._current = value;
					this.OnPropertyChanged("Current");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Performance Ratings")]
	public partial class PerformanceRatingsItem : Item {
		
		private System.Nullable<double> _rating;
		
		private System.Nullable<double> _lowerValue;
		
		private System.Nullable<double> _upperValue;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PerformanceRatingsItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Rating", Storage="_rating", Required=true, FieldType="Number")]
		public System.Nullable<double> Rating {
			get {
				return this._rating;
			}
			set {
				if ((value != this._rating)) {
					this.OnPropertyChanging("Rating", this._rating);
					this._rating = value;
					this.OnPropertyChanged("Rating");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Lower_x0020_Value", Storage="_lowerValue", Required=true, FieldType="Number")]
		public System.Nullable<double> LowerValue {
			get {
				return this._lowerValue;
			}
			set {
				if ((value != this._lowerValue)) {
					this.OnPropertyChanging("LowerValue", this._lowerValue);
					this._lowerValue = value;
					this.OnPropertyChanged("LowerValue");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Upper_x0020_Value", Storage="_upperValue", Required=true, FieldType="Number")]
		public System.Nullable<double> UpperValue {
			get {
				return this._upperValue;
			}
			set {
				if ((value != this._upperValue)) {
					this.OnPropertyChanging("UpperValue", this._upperValue);
					this._upperValue = value;
					this.OnPropertyChanged("UpperValue");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Phases")]
	public partial class PhasesItem : Item {
		
		private string _phase;
		
		private string _description;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PhasesItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Phase", Storage="_phase", Required=true, FieldType="Text")]
		public string Phase {
			get {
				return this._phase;
			}
			set {
				if ((value != this._phase)) {
					this.OnPropertyChanging("Phase", this._phase);
					this._phase = value;
					this.OnPropertyChanged("Phase");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Text")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="PIP")]
	public partial class PIPItem : Item {
		
		private string _performanceIssue;
		
		private string _expectedAchievement;
		
		private string _timeFrame;
		
		private string _midTermActualResults;
		
		private string _midTermAppraisersAssesment;
		
		private string _finalActualResults;
		
		private string _finalAppraisersAssesment;
		
		private System.Nullable<int> _appraisalPhaseId;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PIPItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Performance_x0020_Issue", Storage="_performanceIssue", Required=true, FieldType="Text")]
		public string PerformanceIssue {
			get {
				return this._performanceIssue;
			}
			set {
				if ((value != this._performanceIssue)) {
					this.OnPropertyChanging("PerformanceIssue", this._performanceIssue);
					this._performanceIssue = value;
					this.OnPropertyChanged("PerformanceIssue");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expected_x0020_Achievement", Storage="_expectedAchievement", FieldType="Note")]
		public string ExpectedAchievement {
			get {
				return this._expectedAchievement;
			}
			set {
				if ((value != this._expectedAchievement)) {
					this.OnPropertyChanging("ExpectedAchievement", this._expectedAchievement);
					this._expectedAchievement = value;
					this.OnPropertyChanged("ExpectedAchievement");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="time_x0020_Frame", Storage="_timeFrame", FieldType="Text")]
		public string TimeFrame {
			get {
				return this._timeFrame;
			}
			set {
				if ((value != this._timeFrame)) {
					this.OnPropertyChanging("TimeFrame", this._timeFrame);
					this._timeFrame = value;
					this.OnPropertyChanged("TimeFrame");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Mid_x0020_Term_x0020_Actual_x002", Storage="_midTermActualResults", FieldType="Note")]
		public string MidTermActualResults {
			get {
				return this._midTermActualResults;
			}
			set {
				if ((value != this._midTermActualResults)) {
					this.OnPropertyChanging("MidTermActualResults", this._midTermActualResults);
					this._midTermActualResults = value;
					this.OnPropertyChanged("MidTermActualResults");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Mid_x0020_Term_x0020_Appraisers_", Storage="_midTermAppraisersAssesment", FieldType="Note")]
		public string MidTermAppraisersAssesment {
			get {
				return this._midTermAppraisersAssesment;
			}
			set {
				if ((value != this._midTermAppraisersAssesment)) {
					this.OnPropertyChanging("MidTermAppraisersAssesment", this._midTermAppraisersAssesment);
					this._midTermAppraisersAssesment = value;
					this.OnPropertyChanged("MidTermAppraisersAssesment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Final_x0020_Actual_x0020_Results", Storage="_finalActualResults", FieldType="Note")]
		public string FinalActualResults {
			get {
				return this._finalActualResults;
			}
			set {
				if ((value != this._finalActualResults)) {
					this.OnPropertyChanging("FinalActualResults", this._finalActualResults);
					this._finalActualResults = value;
					this.OnPropertyChanged("FinalActualResults");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Final_x0020_Appraisers_x0020_Ass", Storage="_finalAppraisersAssesment", FieldType="Note")]
		public string FinalAppraisersAssesment {
			get {
				return this._finalAppraisersAssesment;
			}
			set {
				if ((value != this._finalAppraisersAssesment)) {
					this.OnPropertyChanging("FinalAppraisersAssesment", this._finalAppraisersAssesment);
					this._finalAppraisersAssesment = value;
					this.OnPropertyChanged("FinalAppraisersAssesment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhaseId", FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> AppraisalPhaseId {
			get {
				return this._appraisalPhaseId;
			}
			set {
				if ((value != this._appraisalPhaseId)) {
					this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
					this._appraisalPhaseId = value;
					this.OnPropertyChanged("AppraisalPhaseId");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Positions")]
	public partial class PositionsItem : Item {
		
		private System.Nullable<double> _positionCode;
		
		private string _positionShortText;
		
		private string _positionLongText;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PositionsItem() {
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Position Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PositionCode", Storage="_positionCode", Required=true, FieldType="Number")]
		public System.Nullable<double> PositionCode {
			get {
				return this._positionCode;
			}
			set {
				if ((value != this._positionCode)) {
					this.OnPropertyChanging("PositionCode", this._positionCode);
					this._positionCode = value;
					this.OnPropertyChanged("PositionCode");
				}
			}
		}
		
		/// <summary>
		/// Position Short Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PositionShortText", Storage="_positionShortText", Required=true, FieldType="Text")]
		public string PositionShortText {
			get {
				return this._positionShortText;
			}
			set {
				if ((value != this._positionShortText)) {
					this.OnPropertyChanging("PositionShortText", this._positionShortText);
					this._positionShortText = value;
					this.OnPropertyChanged("PositionShortText");
				}
			}
		}
		
		/// <summary>
		/// Position Long Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PositionLongText", Storage="_positionLongText", Required=true, FieldType="Text")]
		public string PositionLongText {
			get {
				return this._positionLongText;
			}
			set {
				if ((value != this._positionLongText)) {
					this.OnPropertyChanging("PositionLongText", this._positionLongText);
					this._positionLongText = value;
					this.OnPropertyChanged("PositionLongText");
				}
			}
		}
		
		/// <summary>
		/// Position Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PositionCode", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PositionCode = this;
			}
			else {
				e.Item.PositionCode = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Regions")]
	public partial class RegionsItem : Item {
		
		private string _regionName;
		
		private System.Nullable<double> _regionHREmployeeCode;
		
		private string _regionHRName;
		
		private Microsoft.SharePoint.Linq.EntitySet<AreasItem> _areasItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<CompaniesItem> _companiesItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public RegionsItem() {
			this._areasItem = new Microsoft.SharePoint.Linq.EntitySet<AreasItem>();
			this._areasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreasItemSync);
			this._areasItem.OnChanged += new System.EventHandler(this.OnAreasItemChanged);
			this._areasItem.OnChanging += new System.EventHandler(this.OnAreasItemChanging);
			this._companiesItem = new Microsoft.SharePoint.Linq.EntitySet<CompaniesItem>();
			this._companiesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem>>(this.OnCompaniesItemSync);
			this._companiesItem.OnChanged += new System.EventHandler(this.OnCompaniesItemChanged);
			this._companiesItem.OnChanging += new System.EventHandler(this.OnCompaniesItemChanging);
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Region Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RegionName", Storage="_regionName", Required=true, FieldType="Text")]
		public string RegionName {
			get {
				return this._regionName;
			}
			set {
				if ((value != this._regionName)) {
					this.OnPropertyChanging("RegionName", this._regionName);
					this._regionName = value;
					this.OnPropertyChanged("RegionName");
				}
			}
		}
		
		/// <summary>
		/// Region HR Employee Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RegionHREmployeeCode", Storage="_regionHREmployeeCode", Required=true, FieldType="Number")]
		public System.Nullable<double> RegionHREmployeeCode {
			get {
				return this._regionHREmployeeCode;
			}
			set {
				if ((value != this._regionHREmployeeCode)) {
					this.OnPropertyChanging("RegionHREmployeeCode", this._regionHREmployeeCode);
					this._regionHREmployeeCode = value;
					this.OnPropertyChanged("RegionHREmployeeCode");
				}
			}
		}
		
		/// <summary>
		/// Region HR Name
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RegionHRName", Storage="_regionHRName", Required=true, FieldType="Text")]
		public string RegionHRName {
			get {
				return this._regionHRName;
			}
			set {
				if ((value != this._regionHRName)) {
					this.OnPropertyChanging("RegionHRName", this._regionHRName);
					this._regionHRName = value;
					this.OnPropertyChanged("RegionHRName");
				}
			}
		}
		
		/// <summary>
		/// Region Name
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="RegionName", Storage="_areasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Areas")]
		public Microsoft.SharePoint.Linq.EntitySet<AreasItem> AreasItem {
			get {
				return this._areasItem;
			}
			set {
				this._areasItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Region", Storage="_companiesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Companies")]
		public Microsoft.SharePoint.Linq.EntitySet<CompaniesItem> CompaniesItem {
			get {
				return this._companiesItem;
			}
			set {
				this._companiesItem.Assign(value);
			}
		}
		
		/// <summary>
		/// HR Region
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="HRRegion", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnAreasItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AreasItem", this._areasItem.Clone());
		}
		
		private void OnAreasItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AreasItem");
		}
		
		private void OnAreasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.RegionName = this;
			}
			else {
				e.Item.RegionName = null;
			}
		}
		
		private void OnCompaniesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CompaniesItem", this._companiesItem.Clone());
		}
		
		private void OnCompaniesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CompaniesItem");
		}
		
		private void OnCompaniesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Region = this;
			}
			else {
				e.Item.Region = null;
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.HRRegion = this;
			}
			else {
				e.Item.HRRegion = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Reminders")]
	public partial class RemindersItem : Item {
		
		private System.Nullable<bool> _reminderRequired;
		
		private System.Nullable<bool> _recurring;
		
		private System.Nullable<double> _reminderDuration;
		
		private System.Nullable<int> _workflowStateId;
		
		private string _workflowStateStatus_x0020_Text;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public RemindersItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reminder_x0020_Required", Storage="_reminderRequired", FieldType="Boolean")]
		public System.Nullable<bool> ReminderRequired {
			get {
				return this._reminderRequired;
			}
			set {
				if ((value != this._reminderRequired)) {
					this.OnPropertyChanging("ReminderRequired", this._reminderRequired);
					this._reminderRequired = value;
					this.OnPropertyChanged("ReminderRequired");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Recurring", Storage="_recurring", FieldType="Boolean")]
		public System.Nullable<bool> Recurring {
			get {
				return this._recurring;
			}
			set {
				if ((value != this._recurring)) {
					this.OnPropertyChanging("Recurring", this._recurring);
					this._recurring = value;
					this.OnPropertyChanged("Recurring");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reminder_x0020_Duration", Storage="_reminderDuration", FieldType="Number")]
		public System.Nullable<double> ReminderDuration {
			get {
				return this._reminderDuration;
			}
			set {
				if ((value != this._reminderDuration)) {
					this.OnPropertyChanging("ReminderDuration", this._reminderDuration);
					this._reminderDuration = value;
					this.OnPropertyChanged("ReminderDuration");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Workflow_x0020_State", Storage="_workflowStateId", Required=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> WorkflowStateId {
			get {
				return this._workflowStateId;
			}
			set {
				if ((value != this._workflowStateId)) {
					this.OnPropertyChanging("WorkflowStateId", this._workflowStateId);
					this._workflowStateId = value;
					this.OnPropertyChanged("WorkflowStateId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Workflow_x0020_State", Storage="_workflowStateStatus_x0020_Text", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string WorkflowStateStatus_x0020_Text {
			get {
				return this._workflowStateStatus_x0020_Text;
			}
			set {
				if ((value != this._workflowStateStatus_x0020_Text)) {
					this.OnPropertyChanging("WorkflowStateStatus_x0020_Text", this._workflowStateStatus_x0020_Text);
					this._workflowStateStatus_x0020_Text = value;
					this.OnPropertyChanged("WorkflowStateStatus_x0020_Text");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Sub-Areas")]
	public partial class SubAreasItem : Item {
		
		private string _personnelSubAreaCode;
		
		private string _subPersonnelAreaText;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem0;
		
		private Microsoft.SharePoint.Linq.EntityRef<AreasItem> _personnelAreaCode;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SubAreasItem() {
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this._employeesMasterItem0 = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItem0Sync);
			this._employeesMasterItem0.OnChanged += new System.EventHandler(this.OnEmployeesMasterItem0Changed);
			this._employeesMasterItem0.OnChanging += new System.EventHandler(this.OnEmployeesMasterItem0Changing);
			this._personnelAreaCode = new Microsoft.SharePoint.Linq.EntityRef<AreasItem>();
			this._personnelAreaCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnPersonnelAreaCodeSync);
			this._personnelAreaCode.OnChanged += new System.EventHandler(this.OnPersonnelAreaCodeChanged);
			this._personnelAreaCode.OnChanging += new System.EventHandler(this.OnPersonnelAreaCodeChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Personnel Sub Area Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonnelSubAreaCode", Storage="_personnelSubAreaCode", Required=true, FieldType="Text")]
		public string PersonnelSubAreaCode {
			get {
				return this._personnelSubAreaCode;
			}
			set {
				if ((value != this._personnelSubAreaCode)) {
					this.OnPropertyChanging("PersonnelSubAreaCode", this._personnelSubAreaCode);
					this._personnelSubAreaCode = value;
					this.OnPropertyChanged("PersonnelSubAreaCode");
				}
			}
		}
		
		/// <summary>
		/// Sub Personnel Area Text
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SubPersonnelAreaText", Storage="_subPersonnelAreaText", Required=true, FieldType="Text")]
		public string SubPersonnelAreaText {
			get {
				return this._subPersonnelAreaText;
			}
			set {
				if ((value != this._subPersonnelAreaText)) {
					this.OnPropertyChanging("SubPersonnelAreaText", this._subPersonnelAreaText);
					this._subPersonnelAreaText = value;
					this.OnPropertyChanged("SubPersonnelAreaText");
				}
			}
		}
		
		/// <summary>
		/// Sub Area Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SubAreaCode", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		/// <summary>
		/// Sub Area
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="SubArea", Storage="_employeesMasterItem0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem0 {
			get {
				return this._employeesMasterItem0;
			}
			set {
				this._employeesMasterItem0.Assign(value);
			}
		}
		
		/// <summary>
		/// Personnel Area Code
		/// </summary>
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="PersonnelAreaCode", Storage="_personnelAreaCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Areas")]
		public AreasItem PersonnelAreaCode {
			get {
				return this._personnelAreaCode.GetEntity();
			}
			set {
				this._personnelAreaCode.SetEntity(value);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SubAreaCode = this;
			}
			else {
				e.Item.SubAreaCode = null;
			}
		}
		
		private void OnEmployeesMasterItem0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem0", this._employeesMasterItem0.Clone());
		}
		
		private void OnEmployeesMasterItem0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem0");
		}
		
		private void OnEmployeesMasterItem0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SubArea = this;
			}
			else {
				e.Item.SubArea = null;
			}
		}
		
		private void OnPersonnelAreaCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PersonnelAreaCode", this._personnelAreaCode.Clone());
		}
		
		private void OnPersonnelAreaCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PersonnelAreaCode");
		}
		
		private void OnPersonnelAreaCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SubAreasItem.Add(this);
			}
			else {
				e.Item.SubAreasItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102", List="Calendar")]
	public partial class CalendarEvent : Event {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CalendarEvent() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public override string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Tasks")]
	public partial class TasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Tasks")]
	public partial class TasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	public enum Category : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	public enum Priority : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) High")]
		_1High = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Normal")]
		_2Normal = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Low")]
		_3Low = 8,
	}
	
	public enum TaskStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not Started")]
		NotStarted = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="In Progress")]
		InProgress = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Deferred")]
		Deferred = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting on someone else")]
		WaitingOnSomeoneElse = 32,
	}
}
