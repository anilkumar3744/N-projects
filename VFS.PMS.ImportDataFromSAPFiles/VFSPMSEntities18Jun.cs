//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VFS.PMS.ImportDataFromSAPFiles {
	using System;
	
	
	public partial class VFSPMSEntitiesDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public VFSPMSEntitiesDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		/// <summary>
		/// Use this list to track upcoming events, status updates or other team news.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Announcements")]
		public Microsoft.SharePoint.Linq.EntityList<Announcement> Announcements {
			get {
				return this.GetList<Announcement>("Announcements");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Competencies")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalCompetenciesItem> AppraisalCompetencies {
			get {
				return this.GetList<AppraisalCompetenciesItem>("Appraisal Competencies");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Development Measures")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalDevelopmentMeasuresItem> AppraisalDevelopmentMeasures {
			get {
				return this.GetList<AppraisalDevelopmentMeasuresItem>("Appraisal Development Measures");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Goals")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalGoalsItem> AppraisalGoals {
			get {
				return this.GetList<AppraisalGoalsItem>("Appraisal Goals");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Lock Audit")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalLockAuditItem> AppraisalLockAudit {
			get {
				return this.GetList<AppraisalLockAuditItem>("Appraisal Lock Audit");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Phases")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalPhasesItem> AppraisalPhases {
			get {
				return this.GetList<AppraisalPhasesItem>("Appraisal Phases");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Status")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalStatusItem> AppraisalStatus {
			get {
				return this.GetList<AppraisalStatusItem>("Appraisal Status");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisal Workflow History")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalWorkflowHistoryItem> AppraisalWorkflowHistory {
			get {
				return this.GetList<AppraisalWorkflowHistoryItem>("Appraisal Workflow History");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Appraisals")]
		public Microsoft.SharePoint.Linq.EntityList<AppraisalsItem> Appraisals {
			get {
				return this.GetList<AppraisalsItem>("Appraisals");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Areas")]
		public Microsoft.SharePoint.Linq.EntityList<AreasItem> Areas {
			get {
				return this.GetList<AreasItem>("Areas");
			}
		}
		
		/// <summary>
		/// Use the Calendar list to keep informed of upcoming meetings, deadlines, and other important events.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Calendar")]
		public Microsoft.SharePoint.Linq.EntityList<CalendarEvent> Calendar {
			get {
				return this.GetList<CalendarEvent>("Calendar");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Category Master")]
		public Microsoft.SharePoint.Linq.EntityList<CategoryMasterItem> CategoryMaster {
			get {
				return this.GetList<CategoryMasterItem>("Category Master");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Comments History")]
		public Microsoft.SharePoint.Linq.EntityList<CommentsHistoryItem> CommentsHistory {
			get {
				return this.GetList<CommentsHistoryItem>("Comments History");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Competencies")]
		public Microsoft.SharePoint.Linq.EntityList<CompetenciesItem> Competencies {
			get {
				return this.GetList<CompetenciesItem>("Competencies");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Competency Descriptions")]
		public Microsoft.SharePoint.Linq.EntityList<CompetencyDescriptionsItem> CompetencyDescriptions {
			get {
				return this.GetList<CompetencyDescriptionsItem>("Competency Descriptions");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Competency Ratings")]
		public Microsoft.SharePoint.Linq.EntityList<CompetencyRatingsItem> CompetencyRatings {
			get {
				return this.GetList<CompetencyRatingsItem>("Competency Ratings");
			}
		}
		
		/// <summary>
		/// Use the reports list to customize the queries that appear in the Content and Structure Tool views
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Content and Structure Reports")]
		public Microsoft.SharePoint.Linq.EntityList<ContentAndStructureReportsItem> ContentAndStructureReports {
			get {
				return this.GetList<ContentAndStructureReportsItem>("Content and Structure Reports");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Countries")]
		public Microsoft.SharePoint.Linq.EntityList<CountriesItem> Countries {
			get {
				return this.GetList<CountriesItem>("Countries");
			}
		}
		
		/// <summary>
		/// This Document library has the templates to create Web Analytics custom reports for this site collection
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Customized Reports")]
		public Microsoft.SharePoint.Linq.EntityList<Document> CustomizedReports {
			get {
				return this.GetList<Document>("Customized Reports");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing feature to store documents that are used on pages in this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Documents")]
		public Microsoft.SharePoint.Linq.EntityList<Document> Documents {
			get {
				return this.GetList<Document>("Documents");
			}
		}
		
		/// <summary>
		/// After their properties are filled out, files uploaded to this library are automatically moved to the correct library or folder according to rules created by the owner of this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Drop Off Library")]
		public Microsoft.SharePoint.Linq.EntityList<DropOffLibraryDocument> DropOffLibrary {
			get {
				return this.GetList<DropOffLibraryDocument>("Drop Off Library");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Employee Groups")]
		public Microsoft.SharePoint.Linq.EntityList<EmployeeGroupsItem> EmployeeGroups {
			get {
				return this.GetList<EmployeeGroupsItem>("Employee Groups");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Employee Sub Groups")]
		public Microsoft.SharePoint.Linq.EntityList<EmployeeSubGroupsItem> EmployeeSubGroups {
			get {
				return this.GetList<EmployeeSubGroupsItem>("Employee Sub Groups");
			}
		}
		
		/// <summary>
		/// Employee Master
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Employees Master")]
		public Microsoft.SharePoint.Linq.EntityList<EmployeesMasterItem> EmployeesMaster {
			get {
				return this.GetList<EmployeesMasterItem>("Employees Master");
			}
		}
		
		/// <summary>
		/// This library contains administrator-approved form templates that were activated to this site collection.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Form Templates")]
		public Microsoft.SharePoint.Linq.EntityList<Item> FormTemplates {
			get {
				return this.GetList<Item>("Form Templates");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Goal Categories")]
		public Microsoft.SharePoint.Linq.EntityList<GoalCategoriesItem> GoalCategories {
			get {
				return this.GetList<GoalCategoriesItem>("Goal Categories");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing feature to store images that are used on pages in this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Images")]
		public Microsoft.SharePoint.Linq.EntityList<RichMediaAsset> Images {
			get {
				return this.GetList<RichMediaAsset>("Images");
			}
		}
		
		/// <summary>
		/// Use the Links list for links to Web pages that your team members will find interesting or useful.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Links")]
		public Microsoft.SharePoint.Linq.EntityList<Link> Links {
			get {
				return this.GetList<Link>("Links");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Organization Units")]
		public Microsoft.SharePoint.Linq.EntityList<OrganizationUnitsItem> OrganizationUnits {
			get {
				return this.GetList<OrganizationUnitsItem>("Organization Units");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing feature to store pages that are created in this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Pages")]
		public Microsoft.SharePoint.Linq.EntityList<Page> Pages {
			get {
				return this.GetList<Page>("Pages");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PDP")]
		public Microsoft.SharePoint.Linq.EntityList<Item> PDP {
			get {
				return this.GetList<Item>("PDP");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Performance Cycle Phases")]
		public Microsoft.SharePoint.Linq.EntityList<PerformanceCyclePhasesItem> PerformanceCyclePhases {
			get {
				return this.GetList<PerformanceCyclePhasesItem>("Performance Cycle Phases");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Performance Cycles")]
		public Microsoft.SharePoint.Linq.EntityList<PerformanceCyclesItem> PerformanceCycles {
			get {
				return this.GetList<PerformanceCyclesItem>("Performance Cycles");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Performance Ratings")]
		public Microsoft.SharePoint.Linq.EntityList<PerformanceRatingsItem> PerformanceRatings {
			get {
				return this.GetList<PerformanceRatingsItem>("Performance Ratings");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Phases")]
		public Microsoft.SharePoint.Linq.EntityList<PhasesItem> Phases {
			get {
				return this.GetList<PhasesItem>("Phases");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="PIP")]
		public Microsoft.SharePoint.Linq.EntityList<PIPItem> PIP {
			get {
				return this.GetList<PIPItem>("PIP");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Postions")]
		public Microsoft.SharePoint.Linq.EntityList<PostionsItem> Postions {
			get {
				return this.GetList<PostionsItem>("Postions");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Regions")]
		public Microsoft.SharePoint.Linq.EntityList<RegionsItem> Regions {
			get {
				return this.GetList<RegionsItem>("Regions");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Reminders")]
		public Microsoft.SharePoint.Linq.EntityList<RemindersItem> Reminders {
			get {
				return this.GetList<RemindersItem>("Reminders");
			}
		}
		
		/// <summary>
		/// Items in this list contain HTML or text content which can be inserted into web pages. If an item has automatic update selected, the content will be inserted into web pages as a read-only reference, and the content will update if the item is changed. If the item does not have automatic update selected, the content will be inserted as a copy in the web page, and the content will not update if the item is changed.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Reusable Content")]
		public Microsoft.SharePoint.Linq.EntityList<Item> ReusableContent {
			get {
				return this.GetList<Item>("Reusable Content");
			}
		}
		
		/// <summary>
		/// Share a document with the team by adding it to this document library.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Shared Documents")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SharedDocuments {
			get {
				return this.GetList<Document>("Shared Documents");
			}
		}
		
		/// <summary>
		/// Use this library to store files which are included on pages within this site, such as images on Wiki pages.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Assets")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SiteAssets {
			get {
				return this.GetList<Document>("Site Assets");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing Resources feature to store documents that are used throughout the site collection.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Collection Documents")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SiteCollectionDocuments {
			get {
				return this.GetList<Document>("Site Collection Documents");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing Resources feature to store images that are used throughout the site collection.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Collection Images")]
		public Microsoft.SharePoint.Linq.EntityList<RichMediaAsset> SiteCollectionImages {
			get {
				return this.GetList<RichMediaAsset>("Site Collection Images");
			}
		}
		
		/// <summary>
		/// Use this library to create and store pages on this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Pages")]
		public Microsoft.SharePoint.Linq.EntityList<WikiPage> SitePages {
			get {
				return this.GetList<WikiPage>("Site Pages");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="SSRS_Reports")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SSRS_Reports {
			get {
				return this.GetList<Document>("SSRS_Reports");
			}
		}
		
		/// <summary>
		/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
		public Microsoft.SharePoint.Linq.EntityList<Document> StyleLibrary {
			get {
				return this.GetList<Document>("Style Library");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Sub Areas")]
		public Microsoft.SharePoint.Linq.EntityList<SubAreasItem> SubAreas {
			get {
				return this.GetList<SubAreasItem>("Sub Areas");
			}
		}
		
		/// <summary>
		/// Use the Tasks list to keep track of work that you or your team needs to complete.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> Tasks {
			get {
				return this.GetList<Item>("Tasks");
			}
		}
		
		/// <summary>
		/// Use the Team Discussion list to hold newsgroup-style discussions on topics relevant to your team.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Team Discussion")]
		public Microsoft.SharePoint.Linq.EntityList<Item> TeamDiscussion {
			get {
				return this.GetList<Item>("Team Discussion");
			}
		}
		
		/// <summary>
		/// This system library was created by the Publishing feature to store workflow tasks that are created in this site.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntityList<Item> WorkflowTasks {
			get {
				return this.GetList<Item>("Workflow Tasks");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Announcement))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Folder))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalCompetenciesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalDevelopmentMeasuresItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalGoalsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalLockAuditItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalPhasesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalStatusItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalWorkflowHistoryItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AppraisalsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(AreasItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Event))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CategoryMasterItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CommentsHistoryItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CompetenciesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CompetencyDescriptionsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CompetencyRatingsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ContentAndStructureReportsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CountriesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EmployeeGroupsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EmployeeSubGroupsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(EmployeesMasterItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(GoalCategoriesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Link))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(OrganizationUnitsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PerformanceCyclePhasesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PerformanceCyclesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PerformanceRatingsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PhasesItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PIPItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(PostionsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(RegionsItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(RemindersItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ReusableHTML))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ReusableText))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SubAreasItem))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Task))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Message))]
	public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		protected string _title;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Item() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Create a new news item, status or other short piece of information.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Announcement", Id="0x0104")]
	public partial class Announcement : Item {
		
		private string _body;
		
		private System.Nullable<System.DateTime> _expires;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Announcement() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expires", Storage="_expires", FieldType="DateTime")]
		public System.Nullable<System.DateTime> Expires {
			get {
				return this._expires;
			}
			set {
				if ((value != this._expires)) {
					this.OnPropertyChanging("Expires", this._expires);
					this._expires = value;
					this.OnPropertyChanged("Expires");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new folder.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Folder", Id="0x0120")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Discussion))]
	public partial class Folder : Item {
		
		private string _name;
		
		private System.Nullable<int> _itemChildCountId;
		
		private string _itemChildCountItemChildCount;
		
		private System.Nullable<int> _folderChildCountId;
		
		private string _folderChildCountFolderChildCount;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Folder() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public virtual string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_itemChildCountId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> ItemChildCountId {
			get {
				return this._itemChildCountId;
			}
			set {
				if ((value != this._itemChildCountId)) {
					this.OnPropertyChanging("ItemChildCountId", this._itemChildCountId);
					this._itemChildCountId = value;
					this.OnPropertyChanged("ItemChildCountId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ItemChildCount", Storage="_itemChildCountItemChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string ItemChildCountItemChildCount {
			get {
				return this._itemChildCountItemChildCount;
			}
			set {
				if ((value != this._itemChildCountItemChildCount)) {
					this.OnPropertyChanging("ItemChildCountItemChildCount", this._itemChildCountItemChildCount);
					this._itemChildCountItemChildCount = value;
					this.OnPropertyChanged("ItemChildCountItemChildCount");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_folderChildCountId", ReadOnly=true, FieldType="Lookup", IsLookupId=true)]
		public System.Nullable<int> FolderChildCountId {
			get {
				return this._folderChildCountId;
			}
			set {
				if ((value != this._folderChildCountId)) {
					this.OnPropertyChanging("FolderChildCountId", this._folderChildCountId);
					this._folderChildCountId = value;
					this.OnPropertyChanged("FolderChildCountId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FolderChildCount", Storage="_folderChildCountFolderChildCount", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string FolderChildCountFolderChildCount {
			get {
				return this._folderChildCountFolderChildCount;
			}
			set {
				if ((value != this._folderChildCountFolderChildCount)) {
					this.OnPropertyChanging("FolderChildCountFolderChildCount", this._folderChildCountFolderChildCount);
					this._folderChildCountFolderChildCount = value;
					this.OnPropertyChanged("FolderChildCountFolderChildCount");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(CalendarEvent))]
	public partial class Event : Item {
		
		private string _location;
		
		protected System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		protected string _description;
		
		private System.Nullable<bool> _allDayEvent;
		
		private System.Nullable<bool> _recurrence;
		
		private System.Nullable<bool> _workspace;
		
		private System.Nullable<Category> _category;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Event() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Location", Storage="_location", FieldType="Text")]
		public string Location {
			get {
				return this._location;
			}
			set {
				if ((value != this._location)) {
					this.OnPropertyChanging("Location", this._location);
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EndDate", Storage="_endTime", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndTime {
			get {
				return this._endTime;
			}
			set {
				if ((value != this._endTime)) {
					this.OnPropertyChanging("EndTime", this._endTime);
					this._endTime = value;
					this.OnPropertyChanged("EndTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_description", FieldType="Note")]
		public virtual string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fAllDayEvent", Storage="_allDayEvent", FieldType="AllDayEvent")]
		public System.Nullable<bool> AllDayEvent {
			get {
				return this._allDayEvent;
			}
			set {
				if ((value != this._allDayEvent)) {
					this.OnPropertyChanging("AllDayEvent", this._allDayEvent);
					this._allDayEvent = value;
					this.OnPropertyChanged("AllDayEvent");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="fRecurrence", Storage="_recurrence", FieldType="Recurrence")]
		public System.Nullable<bool> Recurrence {
			get {
				return this._recurrence;
			}
			set {
				if ((value != this._recurrence)) {
					this.OnPropertyChanging("Recurrence", this._recurrence);
					this._recurrence = value;
					this.OnPropertyChanged("Recurrence");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WorkspaceLink", Storage="_workspace", FieldType="CrossProjectLink")]
		public System.Nullable<bool> Workspace {
			get {
				return this._workspace;
			}
			set {
				if ((value != this._workspace)) {
					this.OnPropertyChanging("Workspace", this._workspace);
					this._workspace = value;
					this.OnPropertyChanged("Workspace");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", FieldType="Choice")]
		public System.Nullable<Category> Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DropOffLibraryDocument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(RichMediaAsset))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SystemPage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WikiPage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Report))]
	public partial class Document : Item {
		
		private string _name;
		
		private string _documentModifiedBy;
		
		private string _documentCreatedBy;
		
		protected string _documentIDValue;
		
		protected string _documentID;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Document() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentModifiedBy {
			get {
				return this._documentModifiedBy;
			}
			set {
				if ((value != this._documentModifiedBy)) {
					this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
					this._documentModifiedBy = value;
					this.OnPropertyChanged("DocumentModifiedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentCreatedBy {
			get {
				return this._documentCreatedBy;
			}
			set {
				if ((value != this._documentCreatedBy)) {
					this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
					this._documentCreatedBy = value;
					this.OnPropertyChanged("DocumentCreatedBy");
				}
			}
		}
		
		/// <summary>
		/// The value of the document ID assigned to this item.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_DocId", Storage="_documentIDValue", ReadOnly=true, FieldType="Text")]
		public virtual string DocumentIDValue {
			get {
				return this._documentIDValue;
			}
			set {
				if ((value != this._documentIDValue)) {
					this.OnPropertyChanging("DocumentIDValue", this._documentIDValue);
					this._documentIDValue = value;
					this.OnPropertyChanged("DocumentIDValue");
				}
			}
		}
		
		/// <summary>
		/// Permanent link to this document.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_DocIdUrl", Storage="_documentID", ReadOnly=true, FieldType="Url")]
		public virtual string DocumentID {
			get {
				return this._documentID;
			}
			set {
				if ((value != this._documentID)) {
					this.OnPropertyChanging("DocumentID", this._documentID);
					this._documentID = value;
					this.OnPropertyChanged("DocumentID");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new link to a Web page or other resource.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Link", Id="0x0105")]
	public partial class Link : Item {
		
		private string _uRL;
		
		private string _comments;
		
		private string _uRL0;
		
		private string _uRL1;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Link() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URL", Storage="_uRL", Required=true, FieldType="Url")]
		public string URL {
			get {
				return this._uRL;
			}
			set {
				if ((value != this._uRL)) {
					this.OnPropertyChanging("URL", this._uRL);
					this._uRL = value;
					this.OnPropertyChanged("URL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLwMenu", Storage="_uRL0", ReadOnly=true, FieldType="Computed")]
		public string URL0 {
			get {
				return this._uRL0;
			}
			set {
				if ((value != this._uRL0)) {
					this.OnPropertyChanging("URL0", this._uRL0);
					this._uRL0 = value;
					this.OnPropertyChanged("URL0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="URLNoMenu", Storage="_uRL1", ReadOnly=true, FieldType="Computed")]
		public string URL1 {
			get {
				return this._uRL1;
			}
			set {
				if ((value != this._uRL1)) {
					this.OnPropertyChanging("URL1", this._uRL1);
					this._uRL1 = value;
					this.OnPropertyChanged("URL1");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Link.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Link.");
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkflowTasksTask))]
	public partial class Task : Item {
		
		private System.Nullable<double> _complete;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _startDate;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<Priority> _priority;
		
		protected System.Nullable<TaskStatus> _taskStatus;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Task() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_taskStatus", FieldType="Choice")]
		public virtual System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new message.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Message", Id="0x0107")]
	public partial class Message : Item {
		
		private string _discussionSubject;
		
		private string _version0;
		
		private string _body;
		
		private string _reply;
		
		private string _post;
		
		private string _threading;
		
		private string _postedBy;
		
		private string _eMailSender;
		
		private System.Nullable<int> _modifiedById;
		
		private string _modifiedByNameWithPicture;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Message() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_discussionSubject", ReadOnly=true, FieldType="Computed")]
		public string DiscussionSubject {
			get {
				return this._discussionSubject;
			}
			set {
				if ((value != this._discussionSubject)) {
					this.OnPropertyChanging("DiscussionSubject", this._discussionSubject);
					this._discussionSubject = value;
					this.OnPropertyChanged("DiscussionSubject");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_version0", ReadOnly=true, FieldType="Text")]
		public string Version0 {
			get {
				return this._version0;
			}
			set {
				if ((value != this._version0)) {
					this.OnPropertyChanging("Version0", this._version0);
					this._version0 = value;
					this.OnPropertyChanged("Version0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_reply", ReadOnly=true, FieldType="Computed")]
		public string Reply {
			get {
				return this._reply;
			}
			set {
				if ((value != this._reply)) {
					this.OnPropertyChanging("Reply", this._reply);
					this._reply = value;
					this.OnPropertyChanged("Reply");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_post", ReadOnly=true, FieldType="Computed")]
		public string Post {
			get {
				return this._post;
			}
			set {
				if ((value != this._post)) {
					this.OnPropertyChanging("Post", this._post);
					this._post = value;
					this.OnPropertyChanged("Post");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_threading", ReadOnly=true, FieldType="Computed")]
		public string Threading {
			get {
				return this._threading;
			}
			set {
				if ((value != this._threading)) {
					this.OnPropertyChanging("Threading", this._threading);
					this._threading = value;
					this.OnPropertyChanged("Threading");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_postedBy", ReadOnly=true, FieldType="Computed")]
		public string PostedBy {
			get {
				return this._postedBy;
			}
			set {
				if ((value != this._postedBy)) {
					this.OnPropertyChanging("PostedBy", this._postedBy);
					this._postedBy = value;
					this.OnPropertyChanged("PostedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_eMailSender", FieldType="Note")]
		public string EMailSender {
			get {
				return this._eMailSender;
			}
			set {
				if ((value != this._eMailSender)) {
					this.OnPropertyChanging("EMailSender", this._eMailSender);
					this._eMailSender = value;
					this.OnPropertyChanged("EMailSender");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Message.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Message.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedById", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ModifiedById {
			get {
				return this._modifiedById;
			}
			set {
				if ((value != this._modifiedById)) {
					this.OnPropertyChanging("ModifiedById", this._modifiedById);
					this._modifiedById = value;
					this.OnPropertyChanged("ModifiedById");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedByNameWithPicture", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ModifiedByNameWithPicture {
			get {
				return this._modifiedByNameWithPicture;
			}
			set {
				if ((value != this._modifiedByNameWithPicture)) {
					this.OnPropertyChanging("ModifiedByNameWithPicture", this._modifiedByNameWithPicture);
					this._modifiedByNameWithPicture = value;
					this.OnPropertyChanged("ModifiedByNameWithPicture");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new wiki page.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wiki Page", Id="0x010108")]
	public partial class WikiPage : Document {
		
		private string _wikiContent;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WikiPage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_wikiContent", FieldType="Note")]
		public string WikiContent {
			get {
				return this._wikiContent;
			}
			set {
				if ((value != this._wikiContent)) {
					this.OnPropertyChanging("WikiContent", this._wikiContent);
					this._wikiContent = value;
					this.OnPropertyChanged("WikiContent");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
			}
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(TasksSummaryTask))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WorkflowTasksSummaryTask))]
	public partial class SummaryTask : Folder {
		
		private System.Nullable<double> _complete;
		
		private string _body;
		
		private System.Nullable<System.DateTime> _startDate;
		
		protected System.Nullable<System.DateTime> _dueDate;
		
		private System.Nullable<Priority> _priority;
		
		protected System.Nullable<TaskStatus> _taskStatus;
		
		private System.Nullable<int> _assignedToId;
		
		private string _assignedTo;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SummaryTask() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PercentComplete", Storage="_complete", FieldType="Number")]
		public System.Nullable<double> Complete {
			get {
				return this._complete;
			}
			set {
				if ((value != this._complete)) {
					this.OnPropertyChanging("Complete", this._complete);
					this._complete = value;
					this.OnPropertyChanged("Complete");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="StartDate", Storage="_startDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskDueDate", Storage="_dueDate", FieldType="DateTime")]
		public virtual System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Priority", Storage="_priority", FieldType="Choice")]
		public System.Nullable<Priority> Priority {
			get {
				return this._priority;
			}
			set {
				if ((value != this._priority)) {
					this.OnPropertyChanging("Priority", this._priority);
					this._priority = value;
					this.OnPropertyChanged("Priority");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="TaskStatus", Storage="_taskStatus", FieldType="Choice")]
		public virtual System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedToId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> AssignedToId {
			get {
				return this._assignedToId;
			}
			set {
				if ((value != this._assignedToId)) {
					this.OnPropertyChanging("AssignedToId", this._assignedToId);
					this._assignedToId = value;
					this.OnPropertyChanged("AssignedToId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AssignedTo", Storage="_assignedTo", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string AssignedTo {
			get {
				return this._assignedTo;
			}
			set {
				if ((value != this._assignedTo)) {
					this.OnPropertyChanging("AssignedTo", this._assignedTo);
					this._assignedTo = value;
					this.OnPropertyChanged("AssignedTo");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new discussion topic.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Discussion", Id="0x012002")]
	public partial class Discussion : Folder {
		
		private string _discussionSubject;
		
		private string _version0;
		
		private string _body;
		
		private string _reply;
		
		private string _post;
		
		private string _threading;
		
		private string _postedBy;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
		private string _eMailSender;
		
		private System.Nullable<int> _modifiedById;
		
		private string _modifiedByNameWithPicture;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Discussion() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public override string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionTitle", Storage="_discussionSubject", ReadOnly=true, FieldType="Computed")]
		public string DiscussionSubject {
			get {
				return this._discussionSubject;
			}
			set {
				if ((value != this._discussionSubject)) {
					this.OnPropertyChanging("DiscussionSubject", this._discussionSubject);
					this._discussionSubject = value;
					this.OnPropertyChanged("DiscussionSubject");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_UIVersionString", Storage="_version0", ReadOnly=true, FieldType="Text")]
		public string Version0 {
			get {
				return this._version0;
			}
			set {
				if ((value != this._version0)) {
					this.OnPropertyChanging("Version0", this._version0);
					this._version0 = value;
					this.OnPropertyChanged("Version0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Body", Storage="_body", FieldType="Note")]
		public string Body {
			get {
				return this._body;
			}
			set {
				if ((value != this._body)) {
					this.OnPropertyChanging("Body", this._body);
					this._body = value;
					this.OnPropertyChanged("Body");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReplyNoGif", Storage="_reply", ReadOnly=true, FieldType="Computed")]
		public string Reply {
			get {
				return this._reply;
			}
			set {
				if ((value != this._reply)) {
					this.OnPropertyChanging("Reply", this._reply);
					this._reply = value;
					this.OnPropertyChanged("Reply");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BodyAndMore", Storage="_post", ReadOnly=true, FieldType="Computed")]
		public string Post {
			get {
				return this._post;
			}
			set {
				if ((value != this._post)) {
					this.OnPropertyChanging("Post", this._post);
					this._post = value;
					this.OnPropertyChanged("Post");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Threading", Storage="_threading", ReadOnly=true, FieldType="Computed")]
		public string Threading {
			get {
				return this._threading;
			}
			set {
				if ((value != this._threading)) {
					this.OnPropertyChanging("Threading", this._threading);
					this._threading = value;
					this.OnPropertyChanged("Threading");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PersonViewMinimal", Storage="_postedBy", ReadOnly=true, FieldType="Computed")]
		public string PostedBy {
			get {
				return this._postedBy;
			}
			set {
				if ((value != this._postedBy)) {
					this.OnPropertyChanging("PostedBy", this._postedBy);
					this._postedBy = value;
					this.OnPropertyChanged("PostedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DiscussionLastUpdated", Storage="_lastUpdated", ReadOnly=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated {
			get {
				return this._lastUpdated;
			}
			set {
				if ((value != this._lastUpdated)) {
					this.OnPropertyChanging("LastUpdated", this._lastUpdated);
					this._lastUpdated = value;
					this.OnPropertyChanged("LastUpdated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmailSender", Storage="_eMailSender", FieldType="Note")]
		public string EMailSender {
			get {
				return this._eMailSender;
			}
			set {
				if ((value != this._eMailSender)) {
					this.OnPropertyChanging("EMailSender", this._eMailSender);
					this._eMailSender = value;
					this.OnPropertyChanged("EMailSender");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Name {
			get {
				throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Discussion.");
			}
			set {
				throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Discussion.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedById", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ModifiedById {
			get {
				return this._modifiedById;
			}
			set {
				if ((value != this._modifiedById)) {
					this.OnPropertyChanging("ModifiedById", this._modifiedById);
					this._modifiedById = value;
					this.OnPropertyChanged("ModifiedById");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MyEditor", Storage="_modifiedByNameWithPicture", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ModifiedByNameWithPicture {
			get {
				return this._modifiedByNameWithPicture;
			}
			set {
				if ((value != this._modifiedByNameWithPicture)) {
					this.OnPropertyChanging("ModifiedByNameWithPicture", this._modifiedByNameWithPicture);
					this._modifiedByNameWithPicture = value;
					this.OnPropertyChanged("ModifiedByNameWithPicture");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Competencies")]
	public partial class AppraisalCompetenciesItem : Item {
		
		private string _appraiseeLatestComments;
		
		private string _appraiserLatestComments;
		
		private string _reviewerLatestComments;
		
		private Microsoft.SharePoint.Linq.EntityRef<CompetenciesItem> _competency;
		
		private Microsoft.SharePoint.Linq.EntityRef<CompetencyRatingsItem> _expectedResult;
		
		private Microsoft.SharePoint.Linq.EntityRef<CompetencyRatingsItem> _rating;
		
		private Microsoft.SharePoint.Linq.EntityRef<AppraisalPhasesItem> _appraisalPhase;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalCompetenciesItem() {
			this._competency = new Microsoft.SharePoint.Linq.EntityRef<CompetenciesItem>();
			this._competency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetenciesItem>>(this.OnCompetencySync);
			this._competency.OnChanged += new System.EventHandler(this.OnCompetencyChanged);
			this._competency.OnChanging += new System.EventHandler(this.OnCompetencyChanging);
			this._expectedResult = new Microsoft.SharePoint.Linq.EntityRef<CompetencyRatingsItem>();
			this._expectedResult.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetencyRatingsItem>>(this.OnExpectedResultSync);
			this._expectedResult.OnChanged += new System.EventHandler(this.OnExpectedResultChanged);
			this._expectedResult.OnChanging += new System.EventHandler(this.OnExpectedResultChanging);
			this._rating = new Microsoft.SharePoint.Linq.EntityRef<CompetencyRatingsItem>();
			this._rating.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetencyRatingsItem>>(this.OnRatingSync);
			this._rating.OnChanged += new System.EventHandler(this.OnRatingChanged);
			this._rating.OnChanging += new System.EventHandler(this.OnRatingChanging);
			this._appraisalPhase = new Microsoft.SharePoint.Linq.EntityRef<AppraisalPhasesItem>();
			this._appraisalPhase.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem>>(this.OnAppraisalPhaseSync);
			this._appraisalPhase.OnChanged += new System.EventHandler(this.OnAppraisalPhaseChanged);
			this._appraisalPhase.OnChanging += new System.EventHandler(this.OnAppraisalPhaseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisee_x0020_Latest_x0020_Com", Storage="_appraiseeLatestComments", FieldType="Note")]
		public string AppraiseeLatestComments {
			get {
				return this._appraiseeLatestComments;
			}
			set {
				if ((value != this._appraiseeLatestComments)) {
					this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
					this._appraiseeLatestComments = value;
					this.OnPropertyChanged("AppraiseeLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraiser_x0020_Latest_x0020_Com", Storage="_appraiserLatestComments", FieldType="Note")]
		public string AppraiserLatestComments {
			get {
				return this._appraiserLatestComments;
			}
			set {
				if ((value != this._appraiserLatestComments)) {
					this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
					this._appraiserLatestComments = value;
					this.OnPropertyChanged("AppraiserLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reviewer_x0020_Latest_x0020_Comm", Storage="_reviewerLatestComments", FieldType="Note")]
		public string ReviewerLatestComments {
			get {
				return this._reviewerLatestComments;
			}
			set {
				if ((value != this._reviewerLatestComments)) {
					this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
					this._reviewerLatestComments = value;
					this.OnPropertyChanged("ReviewerLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Competency", Storage="_competency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Competencies")]
		public CompetenciesItem Competency {
			get {
				return this._competency.GetEntity();
			}
			set {
				this._competency.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Expected_x0020_Result", Storage="_expectedResult", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Competency Ratings")]
		public CompetencyRatingsItem ExpectedResult {
			get {
				return this._expectedResult.GetEntity();
			}
			set {
				this._expectedResult.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Rating", Storage="_rating", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Competency Ratings")]
		public CompetencyRatingsItem Rating {
			get {
				return this._rating.GetEntity();
			}
			set {
				this._rating.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhase", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Appraisal Phases")]
		public AppraisalPhasesItem AppraisalPhase {
			get {
				return this._appraisalPhase.GetEntity();
			}
			set {
				this._appraisalPhase.SetEntity(value);
			}
		}
		
		private void OnCompetencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Competency", this._competency.Clone());
		}
		
		private void OnCompetencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Competency");
		}
		
		private void OnCompetencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetenciesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalCompetenciesItem.Add(this);
			}
			else {
				e.Item.AppraisalCompetenciesItem.Remove(this);
			}
		}
		
		private void OnExpectedResultChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ExpectedResult", this._expectedResult.Clone());
		}
		
		private void OnExpectedResultChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ExpectedResult");
		}
		
		private void OnExpectedResultSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetencyRatingsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalCompetenciesItem.Add(this);
			}
			else {
				e.Item.AppraisalCompetenciesItem.Remove(this);
			}
		}
		
		private void OnRatingChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Rating", this._rating.Clone());
		}
		
		private void OnRatingChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Rating");
		}
		
		private void OnRatingSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetencyRatingsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalCompetenciesItem0.Add(this);
			}
			else {
				e.Item.AppraisalCompetenciesItem0.Remove(this);
			}
		}
		
		private void OnAppraisalPhaseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase.Clone());
		}
		
		private void OnAppraisalPhaseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalPhase");
		}
		
		private void OnAppraisalPhaseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalCompetenciesItem.Add(this);
			}
			else {
				e.Item.AppraisalCompetenciesItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Development Measures")]
	public partial class AppraisalDevelopmentMeasuresItem : Item {
		
		private System.Nullable<System.DateTime> _when;
		
		private string _what;
		
		private string _nextSteps;
		
		private string _h1AppraiseeComments;
		
		private string _h1AppraiserComments;
		
		private string _h2AppraiseeComments;
		
		private string _h2AppraiserComments;
		
		private Microsoft.SharePoint.Linq.EntityRef<AppraisalsItem> _appraisal;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalDevelopmentMeasuresItem() {
			this._appraisal = new Microsoft.SharePoint.Linq.EntityRef<AppraisalsItem>();
			this._appraisal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem>>(this.OnAppraisalSync);
			this._appraisal.OnChanged += new System.EventHandler(this.OnAppraisalChanged);
			this._appraisal.OnChanging += new System.EventHandler(this.OnAppraisalChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="When", Storage="_when", FieldType="DateTime")]
		public System.Nullable<System.DateTime> When {
			get {
				return this._when;
			}
			set {
				if ((value != this._when)) {
					this.OnPropertyChanging("When", this._when);
					this._when = value;
					this.OnPropertyChanged("When");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="What", Storage="_what", FieldType="Note")]
		public string What {
			get {
				return this._what;
			}
			set {
				if ((value != this._what)) {
					this.OnPropertyChanging("What", this._what);
					this._what = value;
					this.OnPropertyChanged("What");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Next_x0020_Steps", Storage="_nextSteps", FieldType="Note")]
		public string NextSteps {
			get {
				return this._nextSteps;
			}
			set {
				if ((value != this._nextSteps)) {
					this.OnPropertyChanging("NextSteps", this._nextSteps);
					this._nextSteps = value;
					this.OnPropertyChanged("NextSteps");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1_x0020_Appraisee_x0020_Comment", Storage="_h1AppraiseeComments", FieldType="Note")]
		public string H1AppraiseeComments {
			get {
				return this._h1AppraiseeComments;
			}
			set {
				if ((value != this._h1AppraiseeComments)) {
					this.OnPropertyChanging("H1AppraiseeComments", this._h1AppraiseeComments);
					this._h1AppraiseeComments = value;
					this.OnPropertyChanged("H1AppraiseeComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1_x0020_Appraiser_x0020_Comment", Storage="_h1AppraiserComments", FieldType="Note")]
		public string H1AppraiserComments {
			get {
				return this._h1AppraiserComments;
			}
			set {
				if ((value != this._h1AppraiserComments)) {
					this.OnPropertyChanging("H1AppraiserComments", this._h1AppraiserComments);
					this._h1AppraiserComments = value;
					this.OnPropertyChanged("H1AppraiserComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H2_x0020_Appraisee_x0020_Comment", Storage="_h2AppraiseeComments", FieldType="Note")]
		public string H2AppraiseeComments {
			get {
				return this._h2AppraiseeComments;
			}
			set {
				if ((value != this._h2AppraiseeComments)) {
					this.OnPropertyChanging("H2AppraiseeComments", this._h2AppraiseeComments);
					this._h2AppraiseeComments = value;
					this.OnPropertyChanged("H2AppraiseeComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H2_x0020_Appraiser_x0020_Comment", Storage="_h2AppraiserComments", FieldType="Note")]
		public string H2AppraiserComments {
			get {
				return this._h2AppraiserComments;
			}
			set {
				if ((value != this._h2AppraiserComments)) {
					this.OnPropertyChanging("H2AppraiserComments", this._h2AppraiserComments);
					this._h2AppraiserComments = value;
					this.OnPropertyChanged("H2AppraiserComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal", Storage="_appraisal", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Appraisals")]
		public AppraisalsItem Appraisal {
			get {
				return this._appraisal.GetEntity();
			}
			set {
				this._appraisal.SetEntity(value);
			}
		}
		
		private void OnAppraisalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Appraisal", this._appraisal.Clone());
		}
		
		private void OnAppraisalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Appraisal");
		}
		
		private void OnAppraisalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalDevelopmentMeasuresItem.Add(this);
			}
			else {
				e.Item.AppraisalDevelopmentMeasuresItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Goals")]
	public partial class AppraisalGoalsItem : Item {
		
		private string _goal;
		
		private string _goalDescription;
		
		private string _appraiseeLatestComments;
		
		private System.Nullable<double> _weightage;
		
		private System.Nullable<System.DateTime> _dueDate;
		
		private string _appraiserLatestComments;
		
		private string _reviewerLatestComments;
		
		private System.Nullable<double> _evaluation;
		
		private System.Nullable<double> _score;
		
		private Microsoft.SharePoint.Linq.EntityRef<AppraisalPhasesItem> _appraisalPhase;
		
		private Microsoft.SharePoint.Linq.EntityRef<GoalCategoriesItem> _goalCategory;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalGoalsItem() {
			this._appraisalPhase = new Microsoft.SharePoint.Linq.EntityRef<AppraisalPhasesItem>();
			this._appraisalPhase.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem>>(this.OnAppraisalPhaseSync);
			this._appraisalPhase.OnChanged += new System.EventHandler(this.OnAppraisalPhaseChanged);
			this._appraisalPhase.OnChanging += new System.EventHandler(this.OnAppraisalPhaseChanging);
			this._goalCategory = new Microsoft.SharePoint.Linq.EntityRef<GoalCategoriesItem>();
			this._goalCategory.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<GoalCategoriesItem>>(this.OnGoalCategorySync);
			this._goalCategory.OnChanged += new System.EventHandler(this.OnGoalCategoryChanged);
			this._goalCategory.OnChanging += new System.EventHandler(this.OnGoalCategoryChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Goal", Storage="_goal", Required=true, FieldType="Text")]
		public string Goal {
			get {
				return this._goal;
			}
			set {
				if ((value != this._goal)) {
					this.OnPropertyChanging("Goal", this._goal);
					this._goal = value;
					this.OnPropertyChanged("Goal");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Goal_x0020_Description", Storage="_goalDescription", FieldType="Note")]
		public string GoalDescription {
			get {
				return this._goalDescription;
			}
			set {
				if ((value != this._goalDescription)) {
					this.OnPropertyChanging("GoalDescription", this._goalDescription);
					this._goalDescription = value;
					this.OnPropertyChanged("GoalDescription");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisee_x0020_Comments", Storage="_appraiseeLatestComments", FieldType="Note")]
		public string AppraiseeLatestComments {
			get {
				return this._appraiseeLatestComments;
			}
			set {
				if ((value != this._appraiseeLatestComments)) {
					this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
					this._appraiseeLatestComments = value;
					this.OnPropertyChanged("AppraiseeLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Weightage", Storage="_weightage", FieldType="Number")]
		public System.Nullable<double> Weightage {
			get {
				return this._weightage;
			}
			set {
				if ((value != this._weightage)) {
					this.OnPropertyChanging("Weightage", this._weightage);
					this._weightage = value;
					this.OnPropertyChanged("Weightage");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Due_x0020_Date", Storage="_dueDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraiser_x0020_Comments", Storage="_appraiserLatestComments", FieldType="Note")]
		public string AppraiserLatestComments {
			get {
				return this._appraiserLatestComments;
			}
			set {
				if ((value != this._appraiserLatestComments)) {
					this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
					this._appraiserLatestComments = value;
					this.OnPropertyChanged("AppraiserLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reviewer_x0020_Comments", Storage="_reviewerLatestComments", FieldType="Note")]
		public string ReviewerLatestComments {
			get {
				return this._reviewerLatestComments;
			}
			set {
				if ((value != this._reviewerLatestComments)) {
					this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
					this._reviewerLatestComments = value;
					this.OnPropertyChanged("ReviewerLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Evaluation", Storage="_evaluation", FieldType="Number")]
		public System.Nullable<double> Evaluation {
			get {
				return this._evaluation;
			}
			set {
				if ((value != this._evaluation)) {
					this.OnPropertyChanging("Evaluation", this._evaluation);
					this._evaluation = value;
					this.OnPropertyChanged("Evaluation");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Score", Storage="_score", ReadOnly=true, IsCalculated=true, FieldType="Number")]
		public System.Nullable<double> Score {
			get {
				return this._score;
			}
			set {
				if ((value != this._score)) {
					this.OnPropertyChanging("Score", this._score);
					this._score = value;
					this.OnPropertyChanged("Score");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhase", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Appraisal Phases")]
		public AppraisalPhasesItem AppraisalPhase {
			get {
				return this._appraisalPhase.GetEntity();
			}
			set {
				this._appraisalPhase.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Goal_x0020_Category", Storage="_goalCategory", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Goal Categories")]
		public GoalCategoriesItem GoalCategory {
			get {
				return this._goalCategory.GetEntity();
			}
			set {
				this._goalCategory.SetEntity(value);
			}
		}
		
		private void OnAppraisalPhaseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase.Clone());
		}
		
		private void OnAppraisalPhaseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalPhase");
		}
		
		private void OnAppraisalPhaseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalGoalsItem.Add(this);
			}
			else {
				e.Item.AppraisalGoalsItem.Remove(this);
			}
		}
		
		private void OnGoalCategoryChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("GoalCategory", this._goalCategory.Clone());
		}
		
		private void OnGoalCategoryChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("GoalCategory");
		}
		
		private void OnGoalCategorySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<GoalCategoriesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalGoalsItem.Add(this);
			}
			else {
				e.Item.AppraisalGoalsItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Lock Audit")]
	public partial class AppraisalLockAuditItem : Item {
		
		private System.Nullable<bool> _locked;
		
		private System.Nullable<System.DateTime> _actionDate;
		
		private string _comments;
		
		private Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclesItem> _appraisalCycle;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeesMasterItem> _actionBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalLockAuditItem() {
			this._appraisalCycle = new Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclesItem>();
			this._appraisalCycle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclesItem>>(this.OnAppraisalCycleSync);
			this._appraisalCycle.OnChanged += new System.EventHandler(this.OnAppraisalCycleChanged);
			this._appraisalCycle.OnChanging += new System.EventHandler(this.OnAppraisalCycleChanging);
			this._actionBy = new Microsoft.SharePoint.Linq.EntityRef<EmployeesMasterItem>();
			this._actionBy.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnActionBySync);
			this._actionBy.OnChanged += new System.EventHandler(this.OnActionByChanged);
			this._actionBy.OnChanging += new System.EventHandler(this.OnActionByChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Locked", Storage="_locked", FieldType="Boolean")]
		public System.Nullable<bool> Locked {
			get {
				return this._locked;
			}
			set {
				if ((value != this._locked)) {
					this.OnPropertyChanging("Locked", this._locked);
					this._locked = value;
					this.OnPropertyChanged("Locked");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Action_x0020_Date", Storage="_actionDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate {
			get {
				return this._actionDate;
			}
			set {
				if ((value != this._actionDate)) {
					this.OnPropertyChanging("ActionDate", this._actionDate);
					this._actionDate = value;
					this.OnPropertyChanged("ActionDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Cycle", Storage="_appraisalCycle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Performance Cycles")]
		public PerformanceCyclesItem AppraisalCycle {
			get {
				return this._appraisalCycle.GetEntity();
			}
			set {
				this._appraisalCycle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Action_x0020_By", Storage="_actionBy", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employees Master")]
		public EmployeesMasterItem ActionBy {
			get {
				return this._actionBy.GetEntity();
			}
			set {
				this._actionBy.SetEntity(value);
			}
		}
		
		private void OnAppraisalCycleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalCycle", this._appraisalCycle.Clone());
		}
		
		private void OnAppraisalCycleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalCycle");
		}
		
		private void OnAppraisalCycleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalLockAuditItem.Add(this);
			}
			else {
				e.Item.AppraisalLockAuditItem.Remove(this);
			}
		}
		
		private void OnActionByChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("ActionBy", this._actionBy.Clone());
		}
		
		private void OnActionByChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("ActionBy");
		}
		
		private void OnActionBySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalLockAuditItem.Add(this);
			}
			else {
				e.Item.AppraisalLockAuditItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Phases")]
	public partial class AppraisalPhasesItem : Item {
		
		private System.Nullable<double> _score;
		
		private System.Nullable<double> _signedOffOnBehalf;
		
		private string _signOffOnBehalfComments;
		
		private System.Nullable<bool> _hRReview;
		
		private string _hRReviewLatestComments;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem> _appraisalCompetenciesItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalGoalsItem> _appraisalGoalsItem;
		
		private Microsoft.SharePoint.Linq.EntityRef<AppraisalsItem> _appraisal;
		
		private Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclePhasesItem> _appraisalPhase;
		
		private Microsoft.SharePoint.Linq.EntitySet<PIPItem> _pIPItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalPhasesItem() {
			this._appraisalCompetenciesItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem>();
			this._appraisalCompetenciesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalCompetenciesItem>>(this.OnAppraisalCompetenciesItemSync);
			this._appraisalCompetenciesItem.OnChanged += new System.EventHandler(this.OnAppraisalCompetenciesItemChanged);
			this._appraisalCompetenciesItem.OnChanging += new System.EventHandler(this.OnAppraisalCompetenciesItemChanging);
			this._appraisalGoalsItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalGoalsItem>();
			this._appraisalGoalsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalGoalsItem>>(this.OnAppraisalGoalsItemSync);
			this._appraisalGoalsItem.OnChanged += new System.EventHandler(this.OnAppraisalGoalsItemChanged);
			this._appraisalGoalsItem.OnChanging += new System.EventHandler(this.OnAppraisalGoalsItemChanging);
			this._appraisal = new Microsoft.SharePoint.Linq.EntityRef<AppraisalsItem>();
			this._appraisal.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem>>(this.OnAppraisalSync);
			this._appraisal.OnChanged += new System.EventHandler(this.OnAppraisalChanged);
			this._appraisal.OnChanging += new System.EventHandler(this.OnAppraisalChanging);
			this._appraisalPhase = new Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclePhasesItem>();
			this._appraisalPhase.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem>>(this.OnAppraisalPhaseSync);
			this._appraisalPhase.OnChanged += new System.EventHandler(this.OnAppraisalPhaseChanged);
			this._appraisalPhase.OnChanging += new System.EventHandler(this.OnAppraisalPhaseChanging);
			this._pIPItem = new Microsoft.SharePoint.Linq.EntitySet<PIPItem>();
			this._pIPItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PIPItem>>(this.OnPIPItemSync);
			this._pIPItem.OnChanged += new System.EventHandler(this.OnPIPItemChanged);
			this._pIPItem.OnChanging += new System.EventHandler(this.OnPIPItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Score", Storage="_score", FieldType="Number")]
		public System.Nullable<double> Score {
			get {
				return this._score;
			}
			set {
				if ((value != this._score)) {
					this.OnPropertyChanging("Score", this._score);
					this._score = value;
					this.OnPropertyChanged("Score");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Signed_x0020_off_x0020_on_x0020_", Storage="_signedOffOnBehalf", FieldType="Number")]
		public System.Nullable<double> SignedOffOnBehalf {
			get {
				return this._signedOffOnBehalf;
			}
			set {
				if ((value != this._signedOffOnBehalf)) {
					this.OnPropertyChanging("SignedOffOnBehalf", this._signedOffOnBehalf);
					this._signedOffOnBehalf = value;
					this.OnPropertyChanged("SignedOffOnBehalf");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Sign_x0020_off_x0020_comments", Storage="_signOffOnBehalfComments", FieldType="Note")]
		public string SignOffOnBehalfComments {
			get {
				return this._signOffOnBehalfComments;
			}
			set {
				if ((value != this._signOffOnBehalfComments)) {
					this.OnPropertyChanging("SignOffOnBehalfComments", this._signOffOnBehalfComments);
					this._signOffOnBehalfComments = value;
					this.OnPropertyChanged("SignOffOnBehalfComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HR_x0020_Review", Storage="_hRReview", FieldType="Boolean")]
		public System.Nullable<bool> HRReview {
			get {
				return this._hRReview;
			}
			set {
				if ((value != this._hRReview)) {
					this.OnPropertyChanging("HRReview", this._hRReview);
					this._hRReview = value;
					this.OnPropertyChanged("HRReview");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HR_x0020_Review_x0020_Latest_x00", Storage="_hRReviewLatestComments", FieldType="Note")]
		public string HRReviewLatestComments {
			get {
				return this._hRReviewLatestComments;
			}
			set {
				if ((value != this._hRReviewLatestComments)) {
					this.OnPropertyChanging("HRReviewLatestComments", this._hRReviewLatestComments);
					this._hRReviewLatestComments = value;
					this.OnPropertyChanged("HRReviewLatestComments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalCompetenciesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Competencies")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem> AppraisalCompetenciesItem {
			get {
				return this._appraisalCompetenciesItem;
			}
			set {
				this._appraisalCompetenciesItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalGoalsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Goals")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalGoalsItem> AppraisalGoalsItem {
			get {
				return this._appraisalGoalsItem;
			}
			set {
				this._appraisalGoalsItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal", Storage="_appraisal", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Appraisals")]
		public AppraisalsItem Appraisal {
			get {
				return this._appraisal.GetEntity();
			}
			set {
				this._appraisal.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhase", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Performance Cycle Phases")]
		public PerformanceCyclePhasesItem AppraisalPhase {
			get {
				return this._appraisalPhase.GetEntity();
			}
			set {
				this._appraisalPhase.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Phase", Storage="_pIPItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="PIP")]
		public Microsoft.SharePoint.Linq.EntitySet<PIPItem> PIPItem {
			get {
				return this._pIPItem;
			}
			set {
				this._pIPItem.Assign(value);
			}
		}
		
		private void OnAppraisalCompetenciesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalCompetenciesItem", this._appraisalCompetenciesItem.Clone());
		}
		
		private void OnAppraisalCompetenciesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalCompetenciesItem");
		}
		
		private void OnAppraisalCompetenciesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalCompetenciesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalPhase = this;
			}
			else {
				e.Item.AppraisalPhase = null;
			}
		}
		
		private void OnAppraisalGoalsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalGoalsItem", this._appraisalGoalsItem.Clone());
		}
		
		private void OnAppraisalGoalsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalGoalsItem");
		}
		
		private void OnAppraisalGoalsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalGoalsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalPhase = this;
			}
			else {
				e.Item.AppraisalPhase = null;
			}
		}
		
		private void OnAppraisalChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Appraisal", this._appraisal.Clone());
		}
		
		private void OnAppraisalChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Appraisal");
		}
		
		private void OnAppraisalSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalPhasesItem.Add(this);
			}
			else {
				e.Item.AppraisalPhasesItem.Remove(this);
			}
		}
		
		private void OnAppraisalPhaseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase.Clone());
		}
		
		private void OnAppraisalPhaseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalPhase");
		}
		
		private void OnAppraisalPhaseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalPhasesItem.Add(this);
			}
			else {
				e.Item.AppraisalPhasesItem.Remove(this);
			}
		}
		
		private void OnPIPItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PIPItem", this._pIPItem.Clone());
		}
		
		private void OnPIPItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PIPItem");
		}
		
		private void OnPIPItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PIPItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalPhase = this;
			}
			else {
				e.Item.AppraisalPhase = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Status")]
	public partial class AppraisalStatusItem : Item {
		
		private string _statusText;
		
		private string _description;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem> _appraisalsItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<RemindersItem> _remindersItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalStatusItem() {
			this._appraisalsItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem>();
			this._appraisalsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem>>(this.OnAppraisalsItemSync);
			this._appraisalsItem.OnChanged += new System.EventHandler(this.OnAppraisalsItemChanged);
			this._appraisalsItem.OnChanging += new System.EventHandler(this.OnAppraisalsItemChanging);
			this._remindersItem = new Microsoft.SharePoint.Linq.EntitySet<RemindersItem>();
			this._remindersItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RemindersItem>>(this.OnRemindersItemSync);
			this._remindersItem.OnChanged += new System.EventHandler(this.OnRemindersItemChanged);
			this._remindersItem.OnChanging += new System.EventHandler(this.OnRemindersItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status_x0020_Text", Storage="_statusText", Required=true, FieldType="Text")]
		public string StatusText {
			get {
				return this._statusText;
			}
			set {
				if ((value != this._statusText)) {
					this.OnPropertyChanging("StatusText", this._statusText);
					this._statusText = value;
					this.OnPropertyChanged("StatusText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", Required=true, FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Aprraisal_x0020_Status", Storage="_appraisalsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisals")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem> AppraisalsItem {
			get {
				return this._appraisalsItem;
			}
			set {
				this._appraisalsItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workflow_x0020_State", Storage="_remindersItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Reminders")]
		public Microsoft.SharePoint.Linq.EntitySet<RemindersItem> RemindersItem {
			get {
				return this._remindersItem;
			}
			set {
				this._remindersItem.Assign(value);
			}
		}
		
		private void OnAppraisalsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalsItem", this._appraisalsItem.Clone());
		}
		
		private void OnAppraisalsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalsItem");
		}
		
		private void OnAppraisalsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalStatus = this;
			}
			else {
				e.Item.AppraisalStatus = null;
			}
		}
		
		private void OnRemindersItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("RemindersItem", this._remindersItem.Clone());
		}
		
		private void OnRemindersItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("RemindersItem");
		}
		
		private void OnRemindersItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RemindersItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.WorkflowState = this;
			}
			else {
				e.Item.WorkflowState = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisal Workflow History")]
	public partial class AppraisalWorkflowHistoryItem : Item {
		
		private System.Nullable<double> _appraisal;
		
		private string _fromStatus;
		
		private string _toStatus;
		
		private string _comment;
		
		private System.Nullable<double> _actor;
		
		private System.Nullable<System.DateTime> _actionDate;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalWorkflowHistoryItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Appraisal", Storage="_appraisal", Required=true, FieldType="Number")]
		public System.Nullable<double> Appraisal {
			get {
				return this._appraisal;
			}
			set {
				if ((value != this._appraisal)) {
					this.OnPropertyChanging("Appraisal", this._appraisal);
					this._appraisal = value;
					this.OnPropertyChanged("Appraisal");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="From_x0020_Status", Storage="_fromStatus", Required=true, FieldType="Text")]
		public string FromStatus {
			get {
				return this._fromStatus;
			}
			set {
				if ((value != this._fromStatus)) {
					this.OnPropertyChanging("FromStatus", this._fromStatus);
					this._fromStatus = value;
					this.OnPropertyChanged("FromStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="To_x0020_Status", Storage="_toStatus", Required=true, FieldType="Text")]
		public string ToStatus {
			get {
				return this._toStatus;
			}
			set {
				if ((value != this._toStatus)) {
					this.OnPropertyChanging("ToStatus", this._toStatus);
					this._toStatus = value;
					this.OnPropertyChanged("ToStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_comment", FieldType="Note")]
		public string Comment {
			get {
				return this._comment;
			}
			set {
				if ((value != this._comment)) {
					this.OnPropertyChanging("Comment", this._comment);
					this._comment = value;
					this.OnPropertyChanged("Comment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Actor", Storage="_actor", Required=true, FieldType="Number")]
		public System.Nullable<double> Actor {
			get {
				return this._actor;
			}
			set {
				if ((value != this._actor)) {
					this.OnPropertyChanging("Actor", this._actor);
					this._actor = value;
					this.OnPropertyChanged("Actor");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Action_x0020_Date", Storage="_actionDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate {
			get {
				return this._actionDate;
			}
			set {
				if ((value != this._actionDate)) {
					this.OnPropertyChanging("ActionDate", this._actionDate);
					this._actionDate = value;
					this.OnPropertyChanged("ActionDate");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Appraisals")]
	public partial class AppraisalsItem : Item {
		
		private System.Nullable<double> _finalScore;
		
		private System.Nullable<double> _finalRating;
		
		private System.Nullable<bool> _deactivated;
		
		private System.Nullable<System.DateTime> _h1GoalSettingStartDate;
		
		private System.Nullable<System.DateTime> _h1AppraisalEvaluationStartDate;
		
		private System.Nullable<System.DateTime> _h2AppraisalEvaluationStartDate;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalDevelopmentMeasuresItem> _appraisalDevelopmentMeasuresItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalPhasesItem> _appraisalPhasesItem;
		
		private Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclesItem> _performanceCycle;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeesMasterItem> _employeeCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<AppraisalStatusItem> _appraisalStatus;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AppraisalsItem() {
			this._appraisalDevelopmentMeasuresItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalDevelopmentMeasuresItem>();
			this._appraisalDevelopmentMeasuresItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalDevelopmentMeasuresItem>>(this.OnAppraisalDevelopmentMeasuresItemSync);
			this._appraisalDevelopmentMeasuresItem.OnChanged += new System.EventHandler(this.OnAppraisalDevelopmentMeasuresItemChanged);
			this._appraisalDevelopmentMeasuresItem.OnChanging += new System.EventHandler(this.OnAppraisalDevelopmentMeasuresItemChanging);
			this._appraisalPhasesItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalPhasesItem>();
			this._appraisalPhasesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem>>(this.OnAppraisalPhasesItemSync);
			this._appraisalPhasesItem.OnChanged += new System.EventHandler(this.OnAppraisalPhasesItemChanged);
			this._appraisalPhasesItem.OnChanging += new System.EventHandler(this.OnAppraisalPhasesItemChanging);
			this._performanceCycle = new Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclesItem>();
			this._performanceCycle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclesItem>>(this.OnPerformanceCycleSync);
			this._performanceCycle.OnChanged += new System.EventHandler(this.OnPerformanceCycleChanged);
			this._performanceCycle.OnChanging += new System.EventHandler(this.OnPerformanceCycleChanging);
			this._employeeCode = new Microsoft.SharePoint.Linq.EntityRef<EmployeesMasterItem>();
			this._employeeCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeeCodeSync);
			this._employeeCode.OnChanged += new System.EventHandler(this.OnEmployeeCodeChanged);
			this._employeeCode.OnChanging += new System.EventHandler(this.OnEmployeeCodeChanging);
			this._appraisalStatus = new Microsoft.SharePoint.Linq.EntityRef<AppraisalStatusItem>();
			this._appraisalStatus.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalStatusItem>>(this.OnAppraisalStatusSync);
			this._appraisalStatus.OnChanged += new System.EventHandler(this.OnAppraisalStatusChanged);
			this._appraisalStatus.OnChanging += new System.EventHandler(this.OnAppraisalStatusChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Final_x0020_Score", Storage="_finalScore", FieldType="Number")]
		public System.Nullable<double> FinalScore {
			get {
				return this._finalScore;
			}
			set {
				if ((value != this._finalScore)) {
					this.OnPropertyChanging("FinalScore", this._finalScore);
					this._finalScore = value;
					this.OnPropertyChanged("FinalScore");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Final_x0020_Rating", Storage="_finalRating", FieldType="Number")]
		public System.Nullable<double> FinalRating {
			get {
				return this._finalRating;
			}
			set {
				if ((value != this._finalRating)) {
					this.OnPropertyChanging("FinalRating", this._finalRating);
					this._finalRating = value;
					this.OnPropertyChanged("FinalRating");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Deactivated", Storage="_deactivated", FieldType="Boolean")]
		public System.Nullable<bool> Deactivated {
			get {
				return this._deactivated;
			}
			set {
				if ((value != this._deactivated)) {
					this.OnPropertyChanging("Deactivated", this._deactivated);
					this._deactivated = value;
					this.OnPropertyChanged("Deactivated");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1_x0020_Goal_x0020_Setting_x002", Storage="_h1GoalSettingStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H1GoalSettingStartDate {
			get {
				return this._h1GoalSettingStartDate;
			}
			set {
				if ((value != this._h1GoalSettingStartDate)) {
					this.OnPropertyChanging("H1GoalSettingStartDate", this._h1GoalSettingStartDate);
					this._h1GoalSettingStartDate = value;
					this.OnPropertyChanged("H1GoalSettingStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H1_x0020_Appraisal_x0020_Evaluat", Storage="_h1AppraisalEvaluationStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H1AppraisalEvaluationStartDate {
			get {
				return this._h1AppraisalEvaluationStartDate;
			}
			set {
				if ((value != this._h1AppraisalEvaluationStartDate)) {
					this.OnPropertyChanging("H1AppraisalEvaluationStartDate", this._h1AppraisalEvaluationStartDate);
					this._h1AppraisalEvaluationStartDate = value;
					this.OnPropertyChanged("H1AppraisalEvaluationStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="H2_x0020_Appraisal_x0020_Evaluat", Storage="_h2AppraisalEvaluationStartDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> H2AppraisalEvaluationStartDate {
			get {
				return this._h2AppraisalEvaluationStartDate;
			}
			set {
				if ((value != this._h2AppraisalEvaluationStartDate)) {
					this.OnPropertyChanging("H2AppraisalEvaluationStartDate", this._h2AppraisalEvaluationStartDate);
					this._h2AppraisalEvaluationStartDate = value;
					this.OnPropertyChanged("H2AppraisalEvaluationStartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal", Storage="_appraisalDevelopmentMeasuresItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Development Measures")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalDevelopmentMeasuresItem> AppraisalDevelopmentMeasuresItem {
			get {
				return this._appraisalDevelopmentMeasuresItem;
			}
			set {
				this._appraisalDevelopmentMeasuresItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal", Storage="_appraisalPhasesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Phases")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalPhasesItem> AppraisalPhasesItem {
			get {
				return this._appraisalPhasesItem;
			}
			set {
				this._appraisalPhasesItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Performance_x0020_Cycle", Storage="_performanceCycle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Performance Cycles")]
		public PerformanceCyclesItem PerformanceCycle {
			get {
				return this._performanceCycle.GetEntity();
			}
			set {
				this._performanceCycle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Employee_x0020_Code", Storage="_employeeCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employees Master")]
		public EmployeesMasterItem EmployeeCode {
			get {
				return this._employeeCode.GetEntity();
			}
			set {
				this._employeeCode.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Aprraisal_x0020_Status", Storage="_appraisalStatus", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Appraisal Status")]
		public AppraisalStatusItem AppraisalStatus {
			get {
				return this._appraisalStatus.GetEntity();
			}
			set {
				this._appraisalStatus.SetEntity(value);
			}
		}
		
		private void OnAppraisalDevelopmentMeasuresItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalDevelopmentMeasuresItem", this._appraisalDevelopmentMeasuresItem.Clone());
		}
		
		private void OnAppraisalDevelopmentMeasuresItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalDevelopmentMeasuresItem");
		}
		
		private void OnAppraisalDevelopmentMeasuresItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalDevelopmentMeasuresItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Appraisal = this;
			}
			else {
				e.Item.Appraisal = null;
			}
		}
		
		private void OnAppraisalPhasesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalPhasesItem", this._appraisalPhasesItem.Clone());
		}
		
		private void OnAppraisalPhasesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalPhasesItem");
		}
		
		private void OnAppraisalPhasesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Appraisal = this;
			}
			else {
				e.Item.Appraisal = null;
			}
		}
		
		private void OnPerformanceCycleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PerformanceCycle", this._performanceCycle.Clone());
		}
		
		private void OnPerformanceCycleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PerformanceCycle");
		}
		
		private void OnPerformanceCycleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalsItem.Add(this);
			}
			else {
				e.Item.AppraisalsItem.Remove(this);
			}
		}
		
		private void OnEmployeeCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeCode", this._employeeCode.Clone());
		}
		
		private void OnEmployeeCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeCode");
		}
		
		private void OnEmployeeCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalsItem.Add(this);
			}
			else {
				e.Item.AppraisalsItem.Remove(this);
			}
		}
		
		private void OnAppraisalStatusChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalStatus", this._appraisalStatus.Clone());
		}
		
		private void OnAppraisalStatusChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalStatus");
		}
		
		private void OnAppraisalStatusSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalStatusItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalsItem.Add(this);
			}
			else {
				e.Item.AppraisalsItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Areas")]
	public partial class AreasItem : Item {
		
		private string _areaCode;
		
		private string _areaText;
		
		private string _companyCode;
		
		private string _region;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<SubAreasItem> _subAreasItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public AreasItem() {
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this._subAreasItem = new Microsoft.SharePoint.Linq.EntitySet<SubAreasItem>();
			this._subAreasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem>>(this.OnSubAreasItemSync);
			this._subAreasItem.OnChanged += new System.EventHandler(this.OnSubAreasItemChanged);
			this._subAreasItem.OnChanging += new System.EventHandler(this.OnSubAreasItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Area_x0020_Code", Storage="_areaCode", Required=true, FieldType="Text")]
		public string AreaCode {
			get {
				return this._areaCode;
			}
			set {
				if ((value != this._areaCode)) {
					this.OnPropertyChanging("AreaCode", this._areaCode);
					this._areaCode = value;
					this.OnPropertyChanged("AreaCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Area_x0020_Text", Storage="_areaText", Required=true, FieldType="Text")]
		public string AreaText {
			get {
				return this._areaText;
			}
			set {
				if ((value != this._areaText)) {
					this.OnPropertyChanging("AreaText", this._areaText);
					this._areaText = value;
					this.OnPropertyChanged("AreaText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyCode", Storage="_companyCode", Required=true, FieldType="Text")]
		public string CompanyCode {
			get {
				return this._companyCode;
			}
			set {
				if ((value != this._companyCode)) {
					this.OnPropertyChanging("CompanyCode", this._companyCode);
					this._companyCode = value;
					this.OnPropertyChanged("CompanyCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Region", Storage="_region", Required=true, FieldType="Text")]
		public string Region {
			get {
				return this._region;
			}
			set {
				if ((value != this._region)) {
					this.OnPropertyChanging("Region", this._region);
					this._region = value;
					this.OnPropertyChanged("Region");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Area", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Area_x0020_Code", Storage="_subAreasItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Sub Areas")]
		public Microsoft.SharePoint.Linq.EntitySet<SubAreasItem> SubAreasItem {
			get {
				return this._subAreasItem;
			}
			set {
				this._subAreasItem.Assign(value);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Area = this;
			}
			else {
				e.Item.Area = null;
			}
		}
		
		private void OnSubAreasItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SubAreasItem", this._subAreasItem.Clone());
		}
		
		private void OnSubAreasItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SubAreasItem");
		}
		
		private void OnSubAreasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AreaCode = this;
			}
			else {
				e.Item.AreaCode = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Category Master")]
	public partial class CategoryMasterItem : Item {
		
		private string _category;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CategoryMasterItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", Required=true, FieldType="Text")]
		public string Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Item.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Item.");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Comments History")]
	public partial class CommentsHistoryItem : Item {
		
		private System.Nullable<double> _commentFor;
		
		private System.Nullable<double> _referenceId;
		
		private string _comment;
		
		private System.Nullable<double> _commentedBy;
		
		private System.Nullable<System.DateTime> _commentedDate;
		
		private System.Nullable<double> _actor;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CommentsHistoryItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment_x0020_For", Storage="_commentFor", Required=true, FieldType="Number")]
		public System.Nullable<double> CommentFor {
			get {
				return this._commentFor;
			}
			set {
				if ((value != this._commentFor)) {
					this.OnPropertyChanging("CommentFor", this._commentFor);
					this._commentFor = value;
					this.OnPropertyChanged("CommentFor");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reference_x0020_Id", Storage="_referenceId", Required=true, FieldType="Number")]
		public System.Nullable<double> ReferenceId {
			get {
				return this._referenceId;
			}
			set {
				if ((value != this._referenceId)) {
					this.OnPropertyChanging("ReferenceId", this._referenceId);
					this._referenceId = value;
					this.OnPropertyChanged("ReferenceId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_comment", Required=true, FieldType="Note")]
		public string Comment {
			get {
				return this._comment;
			}
			set {
				if ((value != this._comment)) {
					this.OnPropertyChanging("Comment", this._comment);
					this._comment = value;
					this.OnPropertyChanged("Comment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Commented_x0020_By", Storage="_commentedBy", Required=true, FieldType="Number")]
		public System.Nullable<double> CommentedBy {
			get {
				return this._commentedBy;
			}
			set {
				if ((value != this._commentedBy)) {
					this.OnPropertyChanging("CommentedBy", this._commentedBy);
					this._commentedBy = value;
					this.OnPropertyChanged("CommentedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Commented_x0020_Date", Storage="_commentedDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> CommentedDate {
			get {
				return this._commentedDate;
			}
			set {
				if ((value != this._commentedDate)) {
					this.OnPropertyChanging("CommentedDate", this._commentedDate);
					this._commentedDate = value;
					this.OnPropertyChanged("CommentedDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Actor", Storage="_actor", Required=true, FieldType="Number")]
		public System.Nullable<double> Actor {
			get {
				return this._actor;
			}
			set {
				if ((value != this._actor)) {
					this.OnPropertyChanging("Actor", this._actor);
					this._actor = value;
					this.OnPropertyChanged("Actor");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Competencies")]
	public partial class CompetenciesItem : Item {
		
		private string _competency;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem> _appraisalCompetenciesItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<CompetencyDescriptionsItem> _competencyDescriptionsItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CompetenciesItem() {
			this._appraisalCompetenciesItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem>();
			this._appraisalCompetenciesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalCompetenciesItem>>(this.OnAppraisalCompetenciesItemSync);
			this._appraisalCompetenciesItem.OnChanged += new System.EventHandler(this.OnAppraisalCompetenciesItemChanged);
			this._appraisalCompetenciesItem.OnChanging += new System.EventHandler(this.OnAppraisalCompetenciesItemChanging);
			this._competencyDescriptionsItem = new Microsoft.SharePoint.Linq.EntitySet<CompetencyDescriptionsItem>();
			this._competencyDescriptionsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetencyDescriptionsItem>>(this.OnCompetencyDescriptionsItemSync);
			this._competencyDescriptionsItem.OnChanged += new System.EventHandler(this.OnCompetencyDescriptionsItemChanged);
			this._competencyDescriptionsItem.OnChanging += new System.EventHandler(this.OnCompetencyDescriptionsItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Competency", Storage="_competency", Required=true, FieldType="Text")]
		public string Competency {
			get {
				return this._competency;
			}
			set {
				if ((value != this._competency)) {
					this.OnPropertyChanging("Competency", this._competency);
					this._competency = value;
					this.OnPropertyChanged("Competency");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Competency", Storage="_appraisalCompetenciesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Competencies")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem> AppraisalCompetenciesItem {
			get {
				return this._appraisalCompetenciesItem;
			}
			set {
				this._appraisalCompetenciesItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Competency", Storage="_competencyDescriptionsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Competency Descriptions")]
		public Microsoft.SharePoint.Linq.EntitySet<CompetencyDescriptionsItem> CompetencyDescriptionsItem {
			get {
				return this._competencyDescriptionsItem;
			}
			set {
				this._competencyDescriptionsItem.Assign(value);
			}
		}
		
		private void OnAppraisalCompetenciesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalCompetenciesItem", this._appraisalCompetenciesItem.Clone());
		}
		
		private void OnAppraisalCompetenciesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalCompetenciesItem");
		}
		
		private void OnAppraisalCompetenciesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalCompetenciesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Competency = this;
			}
			else {
				e.Item.Competency = null;
			}
		}
		
		private void OnCompetencyDescriptionsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CompetencyDescriptionsItem", this._competencyDescriptionsItem.Clone());
		}
		
		private void OnCompetencyDescriptionsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CompetencyDescriptionsItem");
		}
		
		private void OnCompetencyDescriptionsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetencyDescriptionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Competency = this;
			}
			else {
				e.Item.Competency = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Competency Descriptions")]
	public partial class CompetencyDescriptionsItem : Item {
		
		private string _description;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeeSubGroupsItem> _empSubGroup;
		
		private Microsoft.SharePoint.Linq.EntityRef<CompetenciesItem> _competency;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CompetencyDescriptionsItem() {
			this._empSubGroup = new Microsoft.SharePoint.Linq.EntityRef<EmployeeSubGroupsItem>();
			this._empSubGroup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem>>(this.OnEmpSubGroupSync);
			this._empSubGroup.OnChanged += new System.EventHandler(this.OnEmpSubGroupChanged);
			this._empSubGroup.OnChanging += new System.EventHandler(this.OnEmpSubGroupChanging);
			this._competency = new Microsoft.SharePoint.Linq.EntityRef<CompetenciesItem>();
			this._competency.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetenciesItem>>(this.OnCompetencySync);
			this._competency.OnChanged += new System.EventHandler(this.OnCompetencyChanged);
			this._competency.OnChanging += new System.EventHandler(this.OnCompetencyChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", Required=true, FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Emp_x0020_Sub_x0020_Group", Storage="_empSubGroup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employee Sub Groups")]
		public EmployeeSubGroupsItem EmpSubGroup {
			get {
				return this._empSubGroup.GetEntity();
			}
			set {
				this._empSubGroup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Competency", Storage="_competency", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Competencies")]
		public CompetenciesItem Competency {
			get {
				return this._competency.GetEntity();
			}
			set {
				this._competency.SetEntity(value);
			}
		}
		
		private void OnEmpSubGroupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmpSubGroup", this._empSubGroup.Clone());
		}
		
		private void OnEmpSubGroupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmpSubGroup");
		}
		
		private void OnEmpSubGroupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CompetencyDescriptionsItem.Add(this);
			}
			else {
				e.Item.CompetencyDescriptionsItem.Remove(this);
			}
		}
		
		private void OnCompetencyChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Competency", this._competency.Clone());
		}
		
		private void OnCompetencyChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Competency");
		}
		
		private void OnCompetencySync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetenciesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CompetencyDescriptionsItem.Add(this);
			}
			else {
				e.Item.CompetencyDescriptionsItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Competency Ratings")]
	public partial class CompetencyRatingsItem : Item {
		
		private string _rating;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem> _appraisalCompetenciesItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem> _appraisalCompetenciesItem0;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CompetencyRatingsItem() {
			this._appraisalCompetenciesItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem>();
			this._appraisalCompetenciesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalCompetenciesItem>>(this.OnAppraisalCompetenciesItemSync);
			this._appraisalCompetenciesItem.OnChanged += new System.EventHandler(this.OnAppraisalCompetenciesItemChanged);
			this._appraisalCompetenciesItem.OnChanging += new System.EventHandler(this.OnAppraisalCompetenciesItemChanging);
			this._appraisalCompetenciesItem0 = new Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem>();
			this._appraisalCompetenciesItem0.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalCompetenciesItem>>(this.OnAppraisalCompetenciesItem0Sync);
			this._appraisalCompetenciesItem0.OnChanged += new System.EventHandler(this.OnAppraisalCompetenciesItem0Changed);
			this._appraisalCompetenciesItem0.OnChanging += new System.EventHandler(this.OnAppraisalCompetenciesItem0Changing);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Rating", Storage="_rating", Required=true, FieldType="Text")]
		public string Rating {
			get {
				return this._rating;
			}
			set {
				if ((value != this._rating)) {
					this.OnPropertyChanging("Rating", this._rating);
					this._rating = value;
					this.OnPropertyChanged("Rating");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Expected_x0020_Result", Storage="_appraisalCompetenciesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Competencies")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem> AppraisalCompetenciesItem {
			get {
				return this._appraisalCompetenciesItem;
			}
			set {
				this._appraisalCompetenciesItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Rating", Storage="_appraisalCompetenciesItem0", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Competencies")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalCompetenciesItem> AppraisalCompetenciesItem0 {
			get {
				return this._appraisalCompetenciesItem0;
			}
			set {
				this._appraisalCompetenciesItem0.Assign(value);
			}
		}
		
		private void OnAppraisalCompetenciesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalCompetenciesItem", this._appraisalCompetenciesItem.Clone());
		}
		
		private void OnAppraisalCompetenciesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalCompetenciesItem");
		}
		
		private void OnAppraisalCompetenciesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalCompetenciesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ExpectedResult = this;
			}
			else {
				e.Item.ExpectedResult = null;
			}
		}
		
		private void OnAppraisalCompetenciesItem0Changing(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalCompetenciesItem0", this._appraisalCompetenciesItem0.Clone());
		}
		
		private void OnAppraisalCompetenciesItem0Changed(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalCompetenciesItem0");
		}
		
		private void OnAppraisalCompetenciesItem0Sync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalCompetenciesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Rating = this;
			}
			else {
				e.Item.Rating = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Content and Structure Reports")]
	public partial class ContentAndStructureReportsItem : Item {
		
		private string _resourceId;
		
		private string _resourceId0;
		
		private string _cAMLListType;
		
		private string _cAMLQuery;
		
		private string _reportDescription;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ContentAndStructureReportsItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0024_Resources_x003a_cmscore_x", Storage="_resourceId", FieldType="Text")]
		public string ResourceId {
			get {
				return this._resourceId;
			}
			set {
				if ((value != this._resourceId)) {
					this.OnPropertyChanging("ResourceId", this._resourceId);
					this._resourceId = value;
					this.OnPropertyChanged("ResourceId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0024_Resources_x003a_cmscore_x0", Storage="_resourceId0", FieldType="Text")]
		public string ResourceId0 {
			get {
				return this._resourceId0;
			}
			set {
				if ((value != this._resourceId0)) {
					this.OnPropertyChanging("ResourceId0", this._resourceId0);
					this._resourceId0 = value;
					this.OnPropertyChanged("ResourceId0");
				}
			}
		}
		
		/// <summary>
		/// Type the name of the list template for the CAML list type, or leave blank to search document library template
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0024_Resources_x003a_cmscore_x1", Storage="_cAMLListType", FieldType="Text")]
		public string CAMLListType {
			get {
				return this._cAMLListType;
			}
			set {
				if ((value != this._cAMLListType)) {
					this.OnPropertyChanging("CAMLListType", this._cAMLListType);
					this._cAMLListType = value;
					this.OnPropertyChanged("CAMLListType");
				}
			}
		}
		
		/// <summary>
		/// Type the CAML markup for the report query
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_x0024_Resources_x003a_cmscore_x2", Storage="_cAMLQuery", Required=true, FieldType="Text")]
		public string CAMLQuery {
			get {
				return this._cAMLQuery;
			}
			set {
				if ((value != this._cAMLQuery)) {
					this.OnPropertyChanging("CAMLQuery", this._cAMLQuery);
					this._cAMLQuery = value;
					this.OnPropertyChanged("CAMLQuery");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Report_x0020_Description", Storage="_reportDescription", FieldType="Note")]
		public string ReportDescription {
			get {
				return this._reportDescription;
			}
			set {
				if ((value != this._reportDescription)) {
					this.OnPropertyChanging("ReportDescription", this._reportDescription);
					this._reportDescription = value;
					this.OnPropertyChanged("ReportDescription");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Countries")]
	public partial class CountriesItem : Item {
		
		private System.Nullable<double> _companyCode;
		
		private string _companyName;
		
		private Microsoft.SharePoint.Linq.EntityRef<RegionsItem> _region;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CountriesItem() {
			this._region = new Microsoft.SharePoint.Linq.EntityRef<RegionsItem>();
			this._region.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem>>(this.OnRegionSync);
			this._region.OnChanged += new System.EventHandler(this.OnRegionChanged);
			this._region.OnChanging += new System.EventHandler(this.OnRegionChanging);
			this.OnCreated();
		}
		
		/// <summary>
		/// Company Code
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Company_x0020_Code", Storage="_companyCode", Required=true, FieldType="Number")]
		public System.Nullable<double> CompanyCode {
			get {
				return this._companyCode;
			}
			set {
				if ((value != this._companyCode)) {
					this.OnPropertyChanging("CompanyCode", this._companyCode);
					this._companyCode = value;
					this.OnPropertyChanged("CompanyCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CompanyName", Storage="_companyName", Required=true, FieldType="Text")]
		public string CompanyName {
			get {
				return this._companyName;
			}
			set {
				if ((value != this._companyName)) {
					this.OnPropertyChanging("CompanyName", this._companyName);
					this._companyName = value;
					this.OnPropertyChanged("CompanyName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Region", Storage="_region", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Regions")]
		public RegionsItem Region {
			get {
				return this._region.GetEntity();
			}
			set {
				this._region.SetEntity(value);
			}
		}
		
		private void OnRegionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Region", this._region.Clone());
		}
		
		private void OnRegionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Region");
		}
		
		private void OnRegionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.CountriesItem.Add(this);
			}
			else {
				e.Item.CountriesItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Employee Groups")]
	public partial class EmployeeGroupsItem : Item {
		
		private string _empGroupCode;
		
		private string _empGroupText;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem> _employeeSubGroupsItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EmployeeGroupsItem() {
			this._employeeSubGroupsItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem>();
			this._employeeSubGroupsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem>>(this.OnEmployeeSubGroupsItemSync);
			this._employeeSubGroupsItem.OnChanged += new System.EventHandler(this.OnEmployeeSubGroupsItemChanged);
			this._employeeSubGroupsItem.OnChanging += new System.EventHandler(this.OnEmployeeSubGroupsItemChanging);
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Emp_x0020_Group_x0020_Code", Storage="_empGroupCode", Required=true, FieldType="Text")]
		public string EmpGroupCode {
			get {
				return this._empGroupCode;
			}
			set {
				if ((value != this._empGroupCode)) {
					this.OnPropertyChanging("EmpGroupCode", this._empGroupCode);
					this._empGroupCode = value;
					this.OnPropertyChanged("EmpGroupCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Emp_x0020_Group_x0020_Text", Storage="_empGroupText", Required=true, FieldType="Text")]
		public string EmpGroupText {
			get {
				return this._empGroupText;
			}
			set {
				if ((value != this._empGroupText)) {
					this.OnPropertyChanging("EmpGroupText", this._empGroupText);
					this._empGroupText = value;
					this.OnPropertyChanged("EmpGroupText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Emp_x0020_Group_x0020_Code", Storage="_employeeSubGroupsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employee Sub Groups")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem> EmployeeSubGroupsItem {
			get {
				return this._employeeSubGroupsItem;
			}
			set {
				this._employeeSubGroupsItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Employee_x0020_Group", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnEmployeeSubGroupsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeSubGroupsItem", this._employeeSubGroupsItem.Clone());
		}
		
		private void OnEmployeeSubGroupsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeSubGroupsItem");
		}
		
		private void OnEmployeeSubGroupsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmpGroupCode = this;
			}
			else {
				e.Item.EmpGroupCode = null;
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeeGroup = this;
			}
			else {
				e.Item.EmployeeGroup = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Employee Sub Groups")]
	public partial class EmployeeSubGroupsItem : Item {
		
		private string _empSubGroupCode;
		
		private string _empSubGroupText;
		
		private Microsoft.SharePoint.Linq.EntitySet<CompetencyDescriptionsItem> _competencyDescriptionsItem;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem> _empGroupCode;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EmployeeSubGroupsItem() {
			this._competencyDescriptionsItem = new Microsoft.SharePoint.Linq.EntitySet<CompetencyDescriptionsItem>();
			this._competencyDescriptionsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetencyDescriptionsItem>>(this.OnCompetencyDescriptionsItemSync);
			this._competencyDescriptionsItem.OnChanged += new System.EventHandler(this.OnCompetencyDescriptionsItemChanged);
			this._competencyDescriptionsItem.OnChanging += new System.EventHandler(this.OnCompetencyDescriptionsItemChanging);
			this._empGroupCode = new Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem>();
			this._empGroupCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem>>(this.OnEmpGroupCodeSync);
			this._empGroupCode.OnChanged += new System.EventHandler(this.OnEmpGroupCodeChanged);
			this._empGroupCode.OnChanging += new System.EventHandler(this.OnEmpGroupCodeChanging);
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Emp_x0020_Sub_x0020_Group_x0020_", Storage="_empSubGroupCode", Required=true, FieldType="Text")]
		public string EmpSubGroupCode {
			get {
				return this._empSubGroupCode;
			}
			set {
				if ((value != this._empSubGroupCode)) {
					this.OnPropertyChanging("EmpSubGroupCode", this._empSubGroupCode);
					this._empSubGroupCode = value;
					this.OnPropertyChanged("EmpSubGroupCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Emp_x0020_Sub_x0020_Group_x0020_0", Storage="_empSubGroupText", Required=true, FieldType="Text")]
		public string EmpSubGroupText {
			get {
				return this._empSubGroupText;
			}
			set {
				if ((value != this._empSubGroupText)) {
					this.OnPropertyChanging("EmpSubGroupText", this._empSubGroupText);
					this._empSubGroupText = value;
					this.OnPropertyChanged("EmpSubGroupText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Emp_x0020_Sub_x0020_Group", Storage="_competencyDescriptionsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Competency Descriptions")]
		public Microsoft.SharePoint.Linq.EntitySet<CompetencyDescriptionsItem> CompetencyDescriptionsItem {
			get {
				return this._competencyDescriptionsItem;
			}
			set {
				this._competencyDescriptionsItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Emp_x0020_Group_x0020_Code", Storage="_empGroupCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employee Groups")]
		public EmployeeGroupsItem EmpGroupCode {
			get {
				return this._empGroupCode.GetEntity();
			}
			set {
				this._empGroupCode.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Employee_x0020_Sub_x0020_Group", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnCompetencyDescriptionsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CompetencyDescriptionsItem", this._competencyDescriptionsItem.Clone());
		}
		
		private void OnCompetencyDescriptionsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CompetencyDescriptionsItem");
		}
		
		private void OnCompetencyDescriptionsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompetencyDescriptionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmpSubGroup = this;
			}
			else {
				e.Item.EmpSubGroup = null;
			}
		}
		
		private void OnEmpGroupCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmpGroupCode", this._empGroupCode.Clone());
		}
		
		private void OnEmpGroupCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmpGroupCode");
		}
		
		private void OnEmpGroupCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeeSubGroupsItem.Add(this);
			}
			else {
				e.Item.EmployeeSubGroupsItem.Remove(this);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeeSubGroup = this;
			}
			else {
				e.Item.EmployeeSubGroup = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Employees Master")]
	public partial class EmployeesMasterItem : Item {
		
		private System.Nullable<double> _employeeCode;
		
		private string _employeeName;
		
		private System.Nullable<System.DateTime> _hireDate;
		
		private System.Nullable<double> _reportingManagerEmpCode;
		
		private System.Nullable<double> _departmentHeadEmpCode;
		
		private System.Nullable<double> _hRBusinessPartnerEmpCode;
		
		private System.Nullable<System.DateTime> _confirmationDate;
		
		private System.Nullable<System.DateTime> _confirmationDueDate;
		
		private string _status;
		
		private System.Nullable<double> _oldEmpCode;
		
		private System.Nullable<double> _countryCode;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalLockAuditItem> _appraisalLockAuditItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem> _appraisalsItem;
		
		private Microsoft.SharePoint.Linq.EntityRef<OrganizationUnitsItem> _oUCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<PostionsItem> _positionCode;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem> _employeeGroup;
		
		private Microsoft.SharePoint.Linq.EntityRef<EmployeeSubGroupsItem> _employeeSubGroup;
		
		private Microsoft.SharePoint.Linq.EntityRef<RegionsItem> _region;
		
		private Microsoft.SharePoint.Linq.EntityRef<AreasItem> _area;
		
		private Microsoft.SharePoint.Linq.EntityRef<SubAreasItem> _subArea;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public EmployeesMasterItem() {
			this._appraisalLockAuditItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalLockAuditItem>();
			this._appraisalLockAuditItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalLockAuditItem>>(this.OnAppraisalLockAuditItemSync);
			this._appraisalLockAuditItem.OnChanged += new System.EventHandler(this.OnAppraisalLockAuditItemChanged);
			this._appraisalLockAuditItem.OnChanging += new System.EventHandler(this.OnAppraisalLockAuditItemChanging);
			this._appraisalsItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem>();
			this._appraisalsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem>>(this.OnAppraisalsItemSync);
			this._appraisalsItem.OnChanged += new System.EventHandler(this.OnAppraisalsItemChanged);
			this._appraisalsItem.OnChanging += new System.EventHandler(this.OnAppraisalsItemChanging);
			this._oUCode = new Microsoft.SharePoint.Linq.EntityRef<OrganizationUnitsItem>();
			this._oUCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<OrganizationUnitsItem>>(this.OnOUCodeSync);
			this._oUCode.OnChanged += new System.EventHandler(this.OnOUCodeChanged);
			this._oUCode.OnChanging += new System.EventHandler(this.OnOUCodeChanging);
			this._positionCode = new Microsoft.SharePoint.Linq.EntityRef<PostionsItem>();
			this._positionCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PostionsItem>>(this.OnPositionCodeSync);
			this._positionCode.OnChanged += new System.EventHandler(this.OnPositionCodeChanged);
			this._positionCode.OnChanging += new System.EventHandler(this.OnPositionCodeChanging);
			this._employeeGroup = new Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem>();
			this._employeeGroup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem>>(this.OnEmployeeGroupSync);
			this._employeeGroup.OnChanged += new System.EventHandler(this.OnEmployeeGroupChanged);
			this._employeeGroup.OnChanging += new System.EventHandler(this.OnEmployeeGroupChanging);
			this._employeeSubGroup = new Microsoft.SharePoint.Linq.EntityRef<EmployeeSubGroupsItem>();
			this._employeeSubGroup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem>>(this.OnEmployeeSubGroupSync);
			this._employeeSubGroup.OnChanged += new System.EventHandler(this.OnEmployeeSubGroupChanged);
			this._employeeSubGroup.OnChanging += new System.EventHandler(this.OnEmployeeSubGroupChanging);
			this._region = new Microsoft.SharePoint.Linq.EntityRef<RegionsItem>();
			this._region.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem>>(this.OnRegionSync);
			this._region.OnChanged += new System.EventHandler(this.OnRegionChanged);
			this._region.OnChanging += new System.EventHandler(this.OnRegionChanging);
			this._area = new Microsoft.SharePoint.Linq.EntityRef<AreasItem>();
			this._area.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreaSync);
			this._area.OnChanged += new System.EventHandler(this.OnAreaChanged);
			this._area.OnChanging += new System.EventHandler(this.OnAreaChanging);
			this._subArea = new Microsoft.SharePoint.Linq.EntityRef<SubAreasItem>();
			this._subArea.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem>>(this.OnSubAreaSync);
			this._subArea.OnChanged += new System.EventHandler(this.OnSubAreaChanged);
			this._subArea.OnChanging += new System.EventHandler(this.OnSubAreaChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Employee_x0020_Code", Storage="_employeeCode", Required=true, FieldType="Number")]
		public System.Nullable<double> EmployeeCode {
			get {
				return this._employeeCode;
			}
			set {
				if ((value != this._employeeCode)) {
					this.OnPropertyChanging("EmployeeCode", this._employeeCode);
					this._employeeCode = value;
					this.OnPropertyChanged("EmployeeCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EmployeeName", Storage="_employeeName", FieldType="Text")]
		public string EmployeeName {
			get {
				return this._employeeName;
			}
			set {
				if ((value != this._employeeName)) {
					this.OnPropertyChanging("EmployeeName", this._employeeName);
					this._employeeName = value;
					this.OnPropertyChanged("EmployeeName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Hire_x0020_Date", Storage="_hireDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> HireDate {
			get {
				return this._hireDate;
			}
			set {
				if ((value != this._hireDate)) {
					this.OnPropertyChanging("HireDate", this._hireDate);
					this._hireDate = value;
					this.OnPropertyChanged("HireDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reporting_x0020_Manager_x0020_Em", Storage="_reportingManagerEmpCode", FieldType="Number")]
		public System.Nullable<double> ReportingManagerEmpCode {
			get {
				return this._reportingManagerEmpCode;
			}
			set {
				if ((value != this._reportingManagerEmpCode)) {
					this.OnPropertyChanging("ReportingManagerEmpCode", this._reportingManagerEmpCode);
					this._reportingManagerEmpCode = value;
					this.OnPropertyChanged("ReportingManagerEmpCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Department_x0020_Head_x0020_Emp_", Storage="_departmentHeadEmpCode", FieldType="Number")]
		public System.Nullable<double> DepartmentHeadEmpCode {
			get {
				return this._departmentHeadEmpCode;
			}
			set {
				if ((value != this._departmentHeadEmpCode)) {
					this.OnPropertyChanging("DepartmentHeadEmpCode", this._departmentHeadEmpCode);
					this._departmentHeadEmpCode = value;
					this.OnPropertyChanged("DepartmentHeadEmpCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="HR_x0020_Business_x0020_Partner_", Storage="_hRBusinessPartnerEmpCode", FieldType="Number")]
		public System.Nullable<double> HRBusinessPartnerEmpCode {
			get {
				return this._hRBusinessPartnerEmpCode;
			}
			set {
				if ((value != this._hRBusinessPartnerEmpCode)) {
					this.OnPropertyChanging("HRBusinessPartnerEmpCode", this._hRBusinessPartnerEmpCode);
					this._hRBusinessPartnerEmpCode = value;
					this.OnPropertyChanged("HRBusinessPartnerEmpCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Confirmation_x0020_Date", Storage="_confirmationDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmationDate {
			get {
				return this._confirmationDate;
			}
			set {
				if ((value != this._confirmationDate)) {
					this.OnPropertyChanging("ConfirmationDate", this._confirmationDate);
					this._confirmationDate = value;
					this.OnPropertyChanged("ConfirmationDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Confirmation_x0020_Due_x0020_Dat", Storage="_confirmationDueDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ConfirmationDueDate {
			get {
				return this._confirmationDueDate;
			}
			set {
				if ((value != this._confirmationDueDate)) {
					this.OnPropertyChanging("ConfirmationDueDate", this._confirmationDueDate);
					this._confirmationDueDate = value;
					this.OnPropertyChanged("ConfirmationDueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_status", Required=true, FieldType="Text")]
		public string Status {
			get {
				return this._status;
			}
			set {
				if ((value != this._status)) {
					this.OnPropertyChanging("Status", this._status);
					this._status = value;
					this.OnPropertyChanged("Status");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Old_x0020_Emp_x0020_Code", Storage="_oldEmpCode", FieldType="Number")]
		public System.Nullable<double> OldEmpCode {
			get {
				return this._oldEmpCode;
			}
			set {
				if ((value != this._oldEmpCode)) {
					this.OnPropertyChanging("OldEmpCode", this._oldEmpCode);
					this._oldEmpCode = value;
					this.OnPropertyChanged("OldEmpCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="CountryCode", Storage="_countryCode", FieldType="Number")]
		public System.Nullable<double> CountryCode {
			get {
				return this._countryCode;
			}
			set {
				if ((value != this._countryCode)) {
					this.OnPropertyChanging("CountryCode", this._countryCode);
					this._countryCode = value;
					this.OnPropertyChanged("CountryCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Action_x0020_By", Storage="_appraisalLockAuditItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Lock Audit")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalLockAuditItem> AppraisalLockAuditItem {
			get {
				return this._appraisalLockAuditItem;
			}
			set {
				this._appraisalLockAuditItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Employee_x0020_Code", Storage="_appraisalsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisals")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem> AppraisalsItem {
			get {
				return this._appraisalsItem;
			}
			set {
				this._appraisalsItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OU_x0020_Code", Storage="_oUCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Organization Units")]
		public OrganizationUnitsItem OUCode {
			get {
				return this._oUCode.GetEntity();
			}
			set {
				this._oUCode.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Position_x0020_Code", Storage="_positionCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Postions")]
		public PostionsItem PositionCode {
			get {
				return this._positionCode.GetEntity();
			}
			set {
				this._positionCode.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Employee_x0020_Group", Storage="_employeeGroup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employee Groups")]
		public EmployeeGroupsItem EmployeeGroup {
			get {
				return this._employeeGroup.GetEntity();
			}
			set {
				this._employeeGroup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Employee_x0020_Sub_x0020_Group", Storage="_employeeSubGroup", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Employee Sub Groups")]
		public EmployeeSubGroupsItem EmployeeSubGroup {
			get {
				return this._employeeSubGroup.GetEntity();
			}
			set {
				this._employeeSubGroup.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Region", Storage="_region", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Regions")]
		public RegionsItem Region {
			get {
				return this._region.GetEntity();
			}
			set {
				this._region.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Area", Storage="_area", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Areas")]
		public AreasItem Area {
			get {
				return this._area.GetEntity();
			}
			set {
				this._area.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Sub_x0020_Area", Storage="_subArea", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Sub Areas")]
		public SubAreasItem SubArea {
			get {
				return this._subArea.GetEntity();
			}
			set {
				this._subArea.SetEntity(value);
			}
		}
		
		private void OnAppraisalLockAuditItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalLockAuditItem", this._appraisalLockAuditItem.Clone());
		}
		
		private void OnAppraisalLockAuditItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalLockAuditItem");
		}
		
		private void OnAppraisalLockAuditItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalLockAuditItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.ActionBy = this;
			}
			else {
				e.Item.ActionBy = null;
			}
		}
		
		private void OnAppraisalsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalsItem", this._appraisalsItem.Clone());
		}
		
		private void OnAppraisalsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalsItem");
		}
		
		private void OnAppraisalsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeeCode = this;
			}
			else {
				e.Item.EmployeeCode = null;
			}
		}
		
		private void OnOUCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("OUCode", this._oUCode.Clone());
		}
		
		private void OnOUCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("OUCode");
		}
		
		private void OnOUCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<OrganizationUnitsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnPositionCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PositionCode", this._positionCode.Clone());
		}
		
		private void OnPositionCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PositionCode");
		}
		
		private void OnPositionCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PostionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnEmployeeGroupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeGroup", this._employeeGroup.Clone());
		}
		
		private void OnEmployeeGroupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeGroup");
		}
		
		private void OnEmployeeGroupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnEmployeeSubGroupChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeeSubGroup", this._employeeSubGroup.Clone());
		}
		
		private void OnEmployeeSubGroupChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeeSubGroup");
		}
		
		private void OnEmployeeSubGroupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnRegionChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Region", this._region.Clone());
		}
		
		private void OnRegionChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Region");
		}
		
		private void OnRegionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnAreaChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Area", this._area.Clone());
		}
		
		private void OnAreaChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Area");
		}
		
		private void OnAreaSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
		
		private void OnSubAreaChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SubArea", this._subArea.Clone());
		}
		
		private void OnSubAreaChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SubArea");
		}
		
		private void OnSubAreaSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.EmployeesMasterItem.Add(this);
			}
			else {
				e.Item.EmployeesMasterItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Goal Categories")]
	public partial class GoalCategoriesItem : Item {
		
		private string _category;
		
		private System.Nullable<bool> _mandatory;
		
		private string _description;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalGoalsItem> _appraisalGoalsItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public GoalCategoriesItem() {
			this._appraisalGoalsItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalGoalsItem>();
			this._appraisalGoalsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalGoalsItem>>(this.OnAppraisalGoalsItemSync);
			this._appraisalGoalsItem.OnChanged += new System.EventHandler(this.OnAppraisalGoalsItemChanged);
			this._appraisalGoalsItem.OnChanging += new System.EventHandler(this.OnAppraisalGoalsItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Category", Storage="_category", Required=true, FieldType="Text")]
		public string Category {
			get {
				return this._category;
			}
			set {
				if ((value != this._category)) {
					this.OnPropertyChanging("Category", this._category);
					this._category = value;
					this.OnPropertyChanged("Category");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Mandatory", Storage="_mandatory", FieldType="Boolean")]
		public System.Nullable<bool> Mandatory {
			get {
				return this._mandatory;
			}
			set {
				if ((value != this._mandatory)) {
					this.OnPropertyChanging("Mandatory", this._mandatory);
					this._mandatory = value;
					this.OnPropertyChanged("Mandatory");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Goal_x0020_Category", Storage="_appraisalGoalsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Goals")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalGoalsItem> AppraisalGoalsItem {
			get {
				return this._appraisalGoalsItem;
			}
			set {
				this._appraisalGoalsItem.Assign(value);
			}
		}
		
		private void OnAppraisalGoalsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalGoalsItem", this._appraisalGoalsItem.Clone());
		}
		
		private void OnAppraisalGoalsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalGoalsItem");
		}
		
		private void OnAppraisalGoalsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalGoalsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.GoalCategory = this;
			}
			else {
				e.Item.GoalCategory = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Organization Units")]
	public partial class OrganizationUnitsItem : Item {
		
		private System.Nullable<double> _oUCode;
		
		private string _oUShortText;
		
		private string _oULongText;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public OrganizationUnitsItem() {
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OU_x0020_Code", Storage="_oUCode", Required=true, FieldType="Number")]
		public System.Nullable<double> OUCode {
			get {
				return this._oUCode;
			}
			set {
				if ((value != this._oUCode)) {
					this.OnPropertyChanging("OUCode", this._oUCode);
					this._oUCode = value;
					this.OnPropertyChanged("OUCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OU_x0020_Short_x0020_Text", Storage="_oUShortText", Required=true, FieldType="Text")]
		public string OUShortText {
			get {
				return this._oUShortText;
			}
			set {
				if ((value != this._oUShortText)) {
					this.OnPropertyChanging("OUShortText", this._oUShortText);
					this._oUShortText = value;
					this.OnPropertyChanged("OUShortText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="OU_x0020_Long_x0020_Text", Storage="_oULongText", Required=true, FieldType="Text")]
		public string OULongText {
			get {
				return this._oULongText;
			}
			set {
				if ((value != this._oULongText)) {
					this.OnPropertyChanging("OULongText", this._oULongText);
					this._oULongText = value;
					this.OnPropertyChanged("OULongText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="OU_x0020_Code", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.OUCode = this;
			}
			else {
				e.Item.OUCode = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Performance Cycle Phases")]
	public partial class PerformanceCyclePhasesItem : Item {
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalPhasesItem> _appraisalPhasesItem;
		
		private Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclesItem> _performanceCycle;
		
		private Microsoft.SharePoint.Linq.EntityRef<PhasesItem> _phase;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PerformanceCyclePhasesItem() {
			this._appraisalPhasesItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalPhasesItem>();
			this._appraisalPhasesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem>>(this.OnAppraisalPhasesItemSync);
			this._appraisalPhasesItem.OnChanged += new System.EventHandler(this.OnAppraisalPhasesItemChanged);
			this._appraisalPhasesItem.OnChanging += new System.EventHandler(this.OnAppraisalPhasesItemChanging);
			this._performanceCycle = new Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclesItem>();
			this._performanceCycle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclesItem>>(this.OnPerformanceCycleSync);
			this._performanceCycle.OnChanged += new System.EventHandler(this.OnPerformanceCycleChanged);
			this._performanceCycle.OnChanging += new System.EventHandler(this.OnPerformanceCycleChanging);
			this._phase = new Microsoft.SharePoint.Linq.EntityRef<PhasesItem>();
			this._phase.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PhasesItem>>(this.OnPhaseSync);
			this._phase.OnChanged += new System.EventHandler(this.OnPhaseChanged);
			this._phase.OnChanging += new System.EventHandler(this.OnPhaseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Start_x0020_Date", Storage="_startDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="End_x0020_Date", Storage="_endDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndDate {
			get {
				return this._endDate;
			}
			set {
				if ((value != this._endDate)) {
					this.OnPropertyChanging("EndDate", this._endDate);
					this._endDate = value;
					this.OnPropertyChanged("EndDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhasesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Phases")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalPhasesItem> AppraisalPhasesItem {
			get {
				return this._appraisalPhasesItem;
			}
			set {
				this._appraisalPhasesItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Performance_x0020_Cycle", Storage="_performanceCycle", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Performance Cycles")]
		public PerformanceCyclesItem PerformanceCycle {
			get {
				return this._performanceCycle.GetEntity();
			}
			set {
				this._performanceCycle.SetEntity(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Phase", Storage="_phase", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Phases")]
		public PhasesItem Phase {
			get {
				return this._phase.GetEntity();
			}
			set {
				this._phase.SetEntity(value);
			}
		}
		
		private void OnAppraisalPhasesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalPhasesItem", this._appraisalPhasesItem.Clone());
		}
		
		private void OnAppraisalPhasesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalPhasesItem");
		}
		
		private void OnAppraisalPhasesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalPhase = this;
			}
			else {
				e.Item.AppraisalPhase = null;
			}
		}
		
		private void OnPerformanceCycleChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PerformanceCycle", this._performanceCycle.Clone());
		}
		
		private void OnPerformanceCycleChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PerformanceCycle");
		}
		
		private void OnPerformanceCycleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PerformanceCyclePhasesItem.Add(this);
			}
			else {
				e.Item.PerformanceCyclePhasesItem.Remove(this);
			}
		}
		
		private void OnPhaseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Phase", this._phase.Clone());
		}
		
		private void OnPhaseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Phase");
		}
		
		private void OnPhaseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PerformanceCyclePhasesItem.Add(this);
			}
			else {
				e.Item.PerformanceCyclePhasesItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Performance Cycles")]
	public partial class PerformanceCyclesItem : Item {
		
		private System.Nullable<double> _performanceCycle;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private System.Nullable<bool> _locked;
		
		private System.Nullable<bool> _current;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalLockAuditItem> _appraisalLockAuditItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem> _appraisalsItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem> _performanceCyclePhasesItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PerformanceCyclesItem() {
			this._appraisalLockAuditItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalLockAuditItem>();
			this._appraisalLockAuditItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalLockAuditItem>>(this.OnAppraisalLockAuditItemSync);
			this._appraisalLockAuditItem.OnChanged += new System.EventHandler(this.OnAppraisalLockAuditItemChanged);
			this._appraisalLockAuditItem.OnChanging += new System.EventHandler(this.OnAppraisalLockAuditItemChanging);
			this._appraisalsItem = new Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem>();
			this._appraisalsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem>>(this.OnAppraisalsItemSync);
			this._appraisalsItem.OnChanged += new System.EventHandler(this.OnAppraisalsItemChanged);
			this._appraisalsItem.OnChanging += new System.EventHandler(this.OnAppraisalsItemChanging);
			this._performanceCyclePhasesItem = new Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem>();
			this._performanceCyclePhasesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem>>(this.OnPerformanceCyclePhasesItemSync);
			this._performanceCyclePhasesItem.OnChanged += new System.EventHandler(this.OnPerformanceCyclePhasesItemChanged);
			this._performanceCyclePhasesItem.OnChanging += new System.EventHandler(this.OnPerformanceCyclePhasesItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Performance_x0020_Cycle", Storage="_performanceCycle", Required=true, FieldType="Number")]
		public System.Nullable<double> PerformanceCycle {
			get {
				return this._performanceCycle;
			}
			set {
				if ((value != this._performanceCycle)) {
					this.OnPropertyChanging("PerformanceCycle", this._performanceCycle);
					this._performanceCycle = value;
					this.OnPropertyChanged("PerformanceCycle");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Text")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Start_x0020_Date", Storage="_startDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> StartDate {
			get {
				return this._startDate;
			}
			set {
				if ((value != this._startDate)) {
					this.OnPropertyChanging("StartDate", this._startDate);
					this._startDate = value;
					this.OnPropertyChanged("StartDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="End_x0020_Date", Storage="_endDate", Required=true, FieldType="DateTime")]
		public System.Nullable<System.DateTime> EndDate {
			get {
				return this._endDate;
			}
			set {
				if ((value != this._endDate)) {
					this.OnPropertyChanging("EndDate", this._endDate);
					this._endDate = value;
					this.OnPropertyChanged("EndDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Locked", Storage="_locked", FieldType="Boolean")]
		public System.Nullable<bool> Locked {
			get {
				return this._locked;
			}
			set {
				if ((value != this._locked)) {
					this.OnPropertyChanging("Locked", this._locked);
					this._locked = value;
					this.OnPropertyChanged("Locked");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Current", Storage="_current", FieldType="Boolean")]
		public System.Nullable<bool> Current {
			get {
				return this._current;
			}
			set {
				if ((value != this._current)) {
					this.OnPropertyChanging("Current", this._current);
					this._current = value;
					this.OnPropertyChanged("Current");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Cycle", Storage="_appraisalLockAuditItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisal Lock Audit")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalLockAuditItem> AppraisalLockAuditItem {
			get {
				return this._appraisalLockAuditItem;
			}
			set {
				this._appraisalLockAuditItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Performance_x0020_Cycle", Storage="_appraisalsItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Appraisals")]
		public Microsoft.SharePoint.Linq.EntitySet<AppraisalsItem> AppraisalsItem {
			get {
				return this._appraisalsItem;
			}
			set {
				this._appraisalsItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Performance_x0020_Cycle", Storage="_performanceCyclePhasesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Performance Cycle Phases")]
		public Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem> PerformanceCyclePhasesItem {
			get {
				return this._performanceCyclePhasesItem;
			}
			set {
				this._performanceCyclePhasesItem.Assign(value);
			}
		}
		
		private void OnAppraisalLockAuditItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalLockAuditItem", this._appraisalLockAuditItem.Clone());
		}
		
		private void OnAppraisalLockAuditItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalLockAuditItem");
		}
		
		private void OnAppraisalLockAuditItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalLockAuditItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.AppraisalCycle = this;
			}
			else {
				e.Item.AppraisalCycle = null;
			}
		}
		
		private void OnAppraisalsItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalsItem", this._appraisalsItem.Clone());
		}
		
		private void OnAppraisalsItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalsItem");
		}
		
		private void OnAppraisalsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalsItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PerformanceCycle = this;
			}
			else {
				e.Item.PerformanceCycle = null;
			}
		}
		
		private void OnPerformanceCyclePhasesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PerformanceCyclePhasesItem", this._performanceCyclePhasesItem.Clone());
		}
		
		private void OnPerformanceCyclePhasesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PerformanceCyclePhasesItem");
		}
		
		private void OnPerformanceCyclePhasesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PerformanceCycle = this;
			}
			else {
				e.Item.PerformanceCycle = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Performance Ratings")]
	public partial class PerformanceRatingsItem : Item {
		
		private System.Nullable<double> _rating;
		
		private System.Nullable<double> _lowerValue;
		
		private System.Nullable<double> _upperValue;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PerformanceRatingsItem() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Rating", Storage="_rating", Required=true, FieldType="Number")]
		public System.Nullable<double> Rating {
			get {
				return this._rating;
			}
			set {
				if ((value != this._rating)) {
					this.OnPropertyChanging("Rating", this._rating);
					this._rating = value;
					this.OnPropertyChanged("Rating");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Lower_x0020_Value", Storage="_lowerValue", Required=true, FieldType="Number")]
		public System.Nullable<double> LowerValue {
			get {
				return this._lowerValue;
			}
			set {
				if ((value != this._lowerValue)) {
					this.OnPropertyChanging("LowerValue", this._lowerValue);
					this._lowerValue = value;
					this.OnPropertyChanged("LowerValue");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Upper_x0020_Value", Storage="_upperValue", Required=true, FieldType="Number")]
		public System.Nullable<double> UpperValue {
			get {
				return this._upperValue;
			}
			set {
				if ((value != this._upperValue)) {
					this.OnPropertyChanging("UpperValue", this._upperValue);
					this._upperValue = value;
					this.OnPropertyChanged("UpperValue");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Phases")]
	public partial class PhasesItem : Item {
		
		private string _phase;
		
		private string _description;
		
		private Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem> _performanceCyclePhasesItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PhasesItem() {
			this._performanceCyclePhasesItem = new Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem>();
			this._performanceCyclePhasesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem>>(this.OnPerformanceCyclePhasesItemSync);
			this._performanceCyclePhasesItem.OnChanged += new System.EventHandler(this.OnPerformanceCyclePhasesItemChanged);
			this._performanceCyclePhasesItem.OnChanging += new System.EventHandler(this.OnPerformanceCyclePhasesItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Phase", Storage="_phase", Required=true, FieldType="Text")]
		public string Phase {
			get {
				return this._phase;
			}
			set {
				if ((value != this._phase)) {
					this.OnPropertyChanging("Phase", this._phase);
					this._phase = value;
					this.OnPropertyChanged("Phase");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Text")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Phase", Storage="_performanceCyclePhasesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Performance Cycle Phases")]
		public Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem> PerformanceCyclePhasesItem {
			get {
				return this._performanceCyclePhasesItem;
			}
			set {
				this._performanceCyclePhasesItem.Assign(value);
			}
		}
		
		private void OnPerformanceCyclePhasesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("PerformanceCyclePhasesItem", this._performanceCyclePhasesItem.Clone());
		}
		
		private void OnPerformanceCyclePhasesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("PerformanceCyclePhasesItem");
		}
		
		private void OnPerformanceCyclePhasesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Phase = this;
			}
			else {
				e.Item.Phase = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="PIP")]
	public partial class PIPItem : Item {
		
		private string _performanceIssue;
		
		private string _expectedAchievement;
		
		private string _timeFrame;
		
		private string _midTermActualResults;
		
		private string _midTermAppraisersAssesment;
		
		private string _finalActualResults;
		
		private string _finalAppraisersAssesment;
		
		private Microsoft.SharePoint.Linq.EntityRef<AppraisalPhasesItem> _appraisalPhase;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PIPItem() {
			this._appraisalPhase = new Microsoft.SharePoint.Linq.EntityRef<AppraisalPhasesItem>();
			this._appraisalPhase.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem>>(this.OnAppraisalPhaseSync);
			this._appraisalPhase.OnChanged += new System.EventHandler(this.OnAppraisalPhaseChanged);
			this._appraisalPhase.OnChanging += new System.EventHandler(this.OnAppraisalPhaseChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Performance_x0020_Issue", Storage="_performanceIssue", Required=true, FieldType="Text")]
		public string PerformanceIssue {
			get {
				return this._performanceIssue;
			}
			set {
				if ((value != this._performanceIssue)) {
					this.OnPropertyChanging("PerformanceIssue", this._performanceIssue);
					this._performanceIssue = value;
					this.OnPropertyChanged("PerformanceIssue");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Expected_x0020_Achievement", Storage="_expectedAchievement", FieldType="Note")]
		public string ExpectedAchievement {
			get {
				return this._expectedAchievement;
			}
			set {
				if ((value != this._expectedAchievement)) {
					this.OnPropertyChanging("ExpectedAchievement", this._expectedAchievement);
					this._expectedAchievement = value;
					this.OnPropertyChanged("ExpectedAchievement");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="time_x0020_Frame", Storage="_timeFrame", FieldType="Text")]
		public string TimeFrame {
			get {
				return this._timeFrame;
			}
			set {
				if ((value != this._timeFrame)) {
					this.OnPropertyChanging("TimeFrame", this._timeFrame);
					this._timeFrame = value;
					this.OnPropertyChanged("TimeFrame");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Mid_x0020_Term_x0020_Actual_x002", Storage="_midTermActualResults", FieldType="Note")]
		public string MidTermActualResults {
			get {
				return this._midTermActualResults;
			}
			set {
				if ((value != this._midTermActualResults)) {
					this.OnPropertyChanging("MidTermActualResults", this._midTermActualResults);
					this._midTermActualResults = value;
					this.OnPropertyChanged("MidTermActualResults");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Mid_x0020_Term_x0020_Appraisers_", Storage="_midTermAppraisersAssesment", FieldType="Note")]
		public string MidTermAppraisersAssesment {
			get {
				return this._midTermAppraisersAssesment;
			}
			set {
				if ((value != this._midTermAppraisersAssesment)) {
					this.OnPropertyChanging("MidTermAppraisersAssesment", this._midTermAppraisersAssesment);
					this._midTermAppraisersAssesment = value;
					this.OnPropertyChanged("MidTermAppraisersAssesment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Final_x0020_Actual_x0020_Results", Storage="_finalActualResults", FieldType="Note")]
		public string FinalActualResults {
			get {
				return this._finalActualResults;
			}
			set {
				if ((value != this._finalActualResults)) {
					this.OnPropertyChanging("FinalActualResults", this._finalActualResults);
					this._finalActualResults = value;
					this.OnPropertyChanged("FinalActualResults");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Final_x0020_Appraisers_x0020_Ass", Storage="_finalAppraisersAssesment", FieldType="Note")]
		public string FinalAppraisersAssesment {
			get {
				return this._finalAppraisersAssesment;
			}
			set {
				if ((value != this._finalAppraisersAssesment)) {
					this.OnPropertyChanging("FinalAppraisersAssesment", this._finalAppraisersAssesment);
					this._finalAppraisersAssesment = value;
					this.OnPropertyChanged("FinalAppraisersAssesment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Appraisal_x0020_Phase", Storage="_appraisalPhase", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Appraisal Phases")]
		public AppraisalPhasesItem AppraisalPhase {
			get {
				return this._appraisalPhase.GetEntity();
			}
			set {
				this._appraisalPhase.SetEntity(value);
			}
		}
		
		private void OnAppraisalPhaseChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase.Clone());
		}
		
		private void OnAppraisalPhaseChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AppraisalPhase");
		}
		
		private void OnAppraisalPhaseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalPhasesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PIPItem.Add(this);
			}
			else {
				e.Item.PIPItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Postions")]
	public partial class PostionsItem : Item {
		
		private System.Nullable<double> _positionCode;
		
		private string _positionShortText;
		
		private string _positionLongText;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public PostionsItem() {
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Postion_x0020_Code", Storage="_positionCode", Required=true, FieldType="Number")]
		public System.Nullable<double> PositionCode {
			get {
				return this._positionCode;
			}
			set {
				if ((value != this._positionCode)) {
					this.OnPropertyChanging("PositionCode", this._positionCode);
					this._positionCode = value;
					this.OnPropertyChanged("PositionCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Position_x0020_Short_x0020_Text", Storage="_positionShortText", Required=true, FieldType="Text")]
		public string PositionShortText {
			get {
				return this._positionShortText;
			}
			set {
				if ((value != this._positionShortText)) {
					this.OnPropertyChanging("PositionShortText", this._positionShortText);
					this._positionShortText = value;
					this.OnPropertyChanged("PositionShortText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Postion_x0020_Long_x0020_Text", Storage="_positionLongText", Required=true, FieldType="Text")]
		public string PositionLongText {
			get {
				return this._positionLongText;
			}
			set {
				if ((value != this._positionLongText)) {
					this.OnPropertyChanging("PositionLongText", this._positionLongText);
					this._positionLongText = value;
					this.OnPropertyChanged("PositionLongText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Position_x0020_Code", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.PositionCode = this;
			}
			else {
				e.Item.PositionCode = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Regions")]
	public partial class RegionsItem : Item {
		
		private string _region;
		
		private System.Nullable<double> _regionHREmpCode;
		
		private Microsoft.SharePoint.Linq.EntitySet<CountriesItem> _countriesItem;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public RegionsItem() {
			this._countriesItem = new Microsoft.SharePoint.Linq.EntitySet<CountriesItem>();
			this._countriesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountriesItem>>(this.OnCountriesItemSync);
			this._countriesItem.OnChanged += new System.EventHandler(this.OnCountriesItemChanged);
			this._countriesItem.OnChanging += new System.EventHandler(this.OnCountriesItemChanging);
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Region", Storage="_region", Required=true, FieldType="Text")]
		public string Region {
			get {
				return this._region;
			}
			set {
				if ((value != this._region)) {
					this.OnPropertyChanging("Region", this._region);
					this._region = value;
					this.OnPropertyChanged("Region");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Region_x0020_HR_x0020_Emp_x0020_", Storage="_regionHREmpCode", FieldType="Number")]
		public System.Nullable<double> RegionHREmpCode {
			get {
				return this._regionHREmpCode;
			}
			set {
				if ((value != this._regionHREmpCode)) {
					this.OnPropertyChanging("RegionHREmpCode", this._regionHREmpCode);
					this._regionHREmpCode = value;
					this.OnPropertyChanged("RegionHREmpCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Region", Storage="_countriesItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Countries")]
		public Microsoft.SharePoint.Linq.EntitySet<CountriesItem> CountriesItem {
			get {
				return this._countriesItem;
			}
			set {
				this._countriesItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Region", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		private void OnCountriesItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("CountriesItem", this._countriesItem.Clone());
		}
		
		private void OnCountriesItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("CountriesItem");
		}
		
		private void OnCountriesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CountriesItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Region = this;
			}
			else {
				e.Item.Region = null;
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.Region = this;
			}
			else {
				e.Item.Region = null;
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Reminders")]
	public partial class RemindersItem : Item {
		
		private System.Nullable<bool> _reminderRequired;
		
		private System.Nullable<bool> _recurring;
		
		private System.Nullable<double> _reminderDuration;
		
		private Microsoft.SharePoint.Linq.EntityRef<AppraisalStatusItem> _workflowState;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public RemindersItem() {
			this._workflowState = new Microsoft.SharePoint.Linq.EntityRef<AppraisalStatusItem>();
			this._workflowState.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalStatusItem>>(this.OnWorkflowStateSync);
			this._workflowState.OnChanged += new System.EventHandler(this.OnWorkflowStateChanged);
			this._workflowState.OnChanging += new System.EventHandler(this.OnWorkflowStateChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reminder_x0020_Required", Storage="_reminderRequired", FieldType="Boolean")]
		public System.Nullable<bool> ReminderRequired {
			get {
				return this._reminderRequired;
			}
			set {
				if ((value != this._reminderRequired)) {
					this.OnPropertyChanging("ReminderRequired", this._reminderRequired);
					this._reminderRequired = value;
					this.OnPropertyChanged("ReminderRequired");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Recurring", Storage="_recurring", FieldType="Boolean")]
		public System.Nullable<bool> Recurring {
			get {
				return this._recurring;
			}
			set {
				if ((value != this._recurring)) {
					this.OnPropertyChanging("Recurring", this._recurring);
					this._recurring = value;
					this.OnPropertyChanged("Recurring");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Reminder_x0020_Duration", Storage="_reminderDuration", FieldType="Number")]
		public System.Nullable<double> ReminderDuration {
			get {
				return this._reminderDuration;
			}
			set {
				if ((value != this._reminderDuration)) {
					this.OnPropertyChanging("ReminderDuration", this._reminderDuration);
					this._reminderDuration = value;
					this.OnPropertyChanged("ReminderDuration");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Workflow_x0020_State", Storage="_workflowState", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Appraisal Status")]
		public AppraisalStatusItem WorkflowState {
			get {
				return this._workflowState.GetEntity();
			}
			set {
				this._workflowState.SetEntity(value);
			}
		}
		
		private void OnWorkflowStateChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("WorkflowState", this._workflowState.Clone());
		}
		
		private void OnWorkflowStateChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("WorkflowState");
		}
		
		private void OnWorkflowStateSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AppraisalStatusItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.RemindersItem.Add(this);
			}
			else {
				e.Item.RemindersItem.Remove(this);
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Reusable HTML", Id="0x01002CF74A4DAE39480396EEA7A4BA2BE5FB")]
	public partial class ReusableHTML : Item {
		
		private string _title0;
		
		private string _comments;
		
		private System.Nullable<bool> _automaticUpdate;
		
		private System.Nullable<bool> _showInDropDownMenu;
		
		private System.Nullable<ContentCategory> _contentCategory;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ReusableHTML() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_title0", ReadOnly=true, Required=true, FieldType="Computed")]
		public string Title0 {
			get {
				return this._title0;
			}
			set {
				if ((value != this._title0)) {
					this.OnPropertyChanging("Title0", this._title0);
					this._title0 = value;
					this.OnPropertyChanged("Title0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		/// <summary>
		/// If this option is selected, the content of this list item will be inserted into web pages as a read-only reference. New versions of this item will automatically appear in the web pages. If the option is not selected, the content of this list item will be inserted into web pages as a copy that page authors can then modify. New versions of this item will not appear in the web pages. Any change to this setting will not affect existing web pages that are using this item.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AutomaticUpdate", Storage="_automaticUpdate", FieldType="Boolean")]
		public System.Nullable<bool> AutomaticUpdate {
			get {
				return this._automaticUpdate;
			}
			set {
				if ((value != this._automaticUpdate)) {
					this.OnPropertyChanging("AutomaticUpdate", this._automaticUpdate);
					this._automaticUpdate = value;
					this.OnPropertyChanged("AutomaticUpdate");
				}
			}
		}
		
		/// <summary>
		/// Select this option if you want this reusable content item to appear in a drop-down menu available during page editing. This will offer authors a quick way to add this item to a page.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShowInRibbon", Storage="_showInDropDownMenu", FieldType="Boolean")]
		public System.Nullable<bool> ShowInDropDownMenu {
			get {
				return this._showInDropDownMenu;
			}
			set {
				if ((value != this._showInDropDownMenu)) {
					this.OnPropertyChanging("ShowInDropDownMenu", this._showInDropDownMenu);
					this._showInDropDownMenu = value;
					this.OnPropertyChanged("ShowInDropDownMenu");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContentCategory", Storage="_contentCategory", FieldType="Choice")]
		public System.Nullable<ContentCategory> ContentCategory {
			get {
				return this._contentCategory;
			}
			set {
				if ((value != this._contentCategory)) {
					this.OnPropertyChanging("ContentCategory", this._contentCategory);
					this._contentCategory = value;
					this.OnPropertyChanged("ContentCategory");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Reusable Text", Id="0x01004D5A79BAFA4A4576B79C56FF3D0D662D")]
	public partial class ReusableText : Item {
		
		private string _title0;
		
		private string _comments;
		
		private System.Nullable<bool> _automaticUpdate;
		
		private System.Nullable<bool> _showInDropDownMenu;
		
		private string _reusableText0;
		
		private System.Nullable<ContentCategory> _contentCategory;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ReusableText() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_title0", ReadOnly=true, FieldType="Computed")]
		public string Title0 {
			get {
				return this._title0;
			}
			set {
				if ((value != this._title0)) {
					this.OnPropertyChanging("Title0", this._title0);
					this._title0 = value;
					this.OnPropertyChanged("Title0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		/// <summary>
		/// If this option is selected, the content of this list item will be inserted into web pages as a read-only reference. New versions of this item will automatically appear in the web pages. If the option is not selected, the content of this list item will be inserted into web pages as a copy that page authors can then modify. New versions of this item will not appear in the web pages. Any change to this setting will not affect existing web pages that are using this item.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AutomaticUpdate", Storage="_automaticUpdate", FieldType="Boolean")]
		public System.Nullable<bool> AutomaticUpdate {
			get {
				return this._automaticUpdate;
			}
			set {
				if ((value != this._automaticUpdate)) {
					this.OnPropertyChanging("AutomaticUpdate", this._automaticUpdate);
					this._automaticUpdate = value;
					this.OnPropertyChanged("AutomaticUpdate");
				}
			}
		}
		
		/// <summary>
		/// Select this option if you want this reusable content item to appear in a drop-down menu available during page editing. This will offer authors a quick way to add this item to a page.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ShowInRibbon", Storage="_showInDropDownMenu", FieldType="Boolean")]
		public System.Nullable<bool> ShowInDropDownMenu {
			get {
				return this._showInDropDownMenu;
			}
			set {
				if ((value != this._showInDropDownMenu)) {
					this.OnPropertyChanging("ShowInDropDownMenu", this._showInDropDownMenu);
					this._showInDropDownMenu = value;
					this.OnPropertyChanged("ShowInDropDownMenu");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReusableText", Storage="_reusableText0", FieldType="Note")]
		public string ReusableText0 {
			get {
				return this._reusableText0;
			}
			set {
				if ((value != this._reusableText0)) {
					this.OnPropertyChanging("ReusableText0", this._reusableText0);
					this._reusableText0 = value;
					this.OnPropertyChanged("ReusableText0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ContentCategory", Storage="_contentCategory", FieldType="Choice")]
		public System.Nullable<ContentCategory> ContentCategory {
			get {
				return this._contentCategory;
			}
			set {
				if ((value != this._contentCategory)) {
					this.OnPropertyChanging("ContentCategory", this._contentCategory);
					this._contentCategory = value;
					this.OnPropertyChanged("ContentCategory");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="Sub Areas")]
	public partial class SubAreasItem : Item {
		
		private string _subAreaCode;
		
		private string _subAreaText;
		
		private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;
		
		private Microsoft.SharePoint.Linq.EntityRef<AreasItem> _areaCode;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SubAreasItem() {
			this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
			this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
			this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
			this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
			this._areaCode = new Microsoft.SharePoint.Linq.EntityRef<AreasItem>();
			this._areaCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreaCodeSync);
			this._areaCode.OnChanged += new System.EventHandler(this.OnAreaCodeChanged);
			this._areaCode.OnChanging += new System.EventHandler(this.OnAreaCodeChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Sub_x0020_Area_x0020_Code", Storage="_subAreaCode", Required=true, FieldType="Text")]
		public string SubAreaCode {
			get {
				return this._subAreaCode;
			}
			set {
				if ((value != this._subAreaCode)) {
					this.OnPropertyChanging("SubAreaCode", this._subAreaCode);
					this._subAreaCode = value;
					this.OnPropertyChanged("SubAreaCode");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Sub_x0020_Area_x0020_Text", Storage="_subAreaText", Required=true, FieldType="Text")]
		public string SubAreaText {
			get {
				return this._subAreaText;
			}
			set {
				if ((value != this._subAreaText)) {
					this.OnPropertyChanging("SubAreaText", this._subAreaText);
					this._subAreaText = value;
					this.OnPropertyChanged("SubAreaText");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Sub_x0020_Area", Storage="_employeesMasterItem", ReadOnly=true, MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Backward, List="Employees Master")]
		public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem {
			get {
				return this._employeesMasterItem;
			}
			set {
				this._employeesMasterItem.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Area_x0020_Code", Storage="_areaCode", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Single, List="Areas")]
		public AreasItem AreaCode {
			get {
				return this._areaCode.GetEntity();
			}
			set {
				this._areaCode.SetEntity(value);
			}
		}
		
		private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
		}
		
		private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("EmployeesMasterItem");
		}
		
		private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SubArea = this;
			}
			else {
				e.Item.SubArea = null;
			}
		}
		
		private void OnAreaCodeChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("AreaCode", this._areaCode.Clone());
		}
		
		private void OnAreaCodeChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("AreaCode");
		}
		
		private void OnAreaCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e) {
			if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State)) {
				e.Item.SubAreasItem.Add(this);
			}
			else {
				e.Item.SubAreasItem.Remove(this);
			}
		}
	}
	
	/// <summary>
	/// Create a new meeting, deadline or other event.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Event", Id="0x0102", List="Calendar")]
	public partial class CalendarEvent : Event {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public CalendarEvent() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="EventDate", Storage="_startTime", Required=true, FieldType="DateTime")]
		public override System.Nullable<System.DateTime> StartTime {
			get {
				return this._startTime;
			}
			set {
				if ((value != this._startTime)) {
					this.OnPropertyChanging("StartTime", this._startTime);
					this._startTime = value;
					this.OnPropertyChanged("StartTime");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", FieldType="Note")]
		public override string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101", List="Drop Off Library")]
	public partial class DropOffLibraryDocument : Document {
		
		private string _originalProperties;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DropOffLibraryDocument() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_vti_RoutingExistingProperties", Storage="_originalProperties", FieldType="Note")]
		public string OriginalProperties {
			get {
				return this._originalProperties;
			}
			set {
				if ((value != this._originalProperties)) {
					this.OnPropertyChanging("OriginalProperties", this._originalProperties);
					this._originalProperties = value;
					this.OnPropertyChanged("OriginalProperties");
				}
			}
		}
	}
	
	/// <summary>
	/// Upload an asset.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Rich Media Asset", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Image))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Audio))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Video))]
	public partial class RichMediaAsset : Document {
		
		private string _preview;
		
		private string _keywords;
		
		private string _thumbnailPreview;
		
		private System.Nullable<int> _pictureWidth;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public RichMediaAsset() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PreviewOnForm", Storage="_preview", FieldType="Computed")]
		public string Preview {
			get {
				return this._preview;
			}
			set {
				if ((value != this._preview)) {
					this.OnPropertyChanging("Preview", this._preview);
					this._preview = value;
					this.OnPropertyChanged("Preview");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Keywords", Storage="_keywords", FieldType="Note")]
		public string Keywords {
			get {
				return this._keywords;
			}
			set {
				if ((value != this._keywords)) {
					this.OnPropertyChanging("Keywords", this._keywords);
					this._keywords = value;
					this.OnPropertyChanged("Keywords");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ThumbnailOnForm", Storage="_thumbnailPreview", FieldType="Computed")]
		public string ThumbnailPreview {
			get {
				return this._thumbnailPreview;
			}
			set {
				if ((value != this._thumbnailPreview)) {
					this.OnPropertyChanging("ThumbnailPreview", this._thumbnailPreview);
					this._thumbnailPreview = value;
					this.OnPropertyChanged("ThumbnailPreview");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageWidth", Storage="_pictureWidth", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> PictureWidth {
			get {
				return this._pictureWidth;
			}
			set {
				if ((value != this._pictureWidth)) {
					this.OnPropertyChanging("PictureWidth", this._pictureWidth);
					this._pictureWidth = value;
					this.OnPropertyChanged("PictureWidth");
				}
			}
		}
	}
	
	/// <summary>
	/// System Page is a system content type template created by the Publishing Resources feature, and it cannot be modified. To add columns to the Pages library, update the Page content type template.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="System Page", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Page))]
	public partial class SystemPage : Document {
		
		private string _comments;
		
		private string _contactEMailAddress;
		
		private string _contactName;
		
		private string _contactPicture;
		
		private string _pageLayout;
		
		private System.Nullable<int> _contactId;
		
		private string _contact;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SystemPage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactEmail", Storage="_contactEMailAddress", FieldType="Text")]
		public string ContactEMailAddress {
			get {
				return this._contactEMailAddress;
			}
			set {
				if ((value != this._contactEMailAddress)) {
					this.OnPropertyChanging("ContactEMailAddress", this._contactEMailAddress);
					this._contactEMailAddress = value;
					this.OnPropertyChanged("ContactEMailAddress");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactName", Storage="_contactName", FieldType="Text")]
		public string ContactName {
			get {
				return this._contactName;
			}
			set {
				if ((value != this._contactName)) {
					this.OnPropertyChanging("ContactName", this._contactName);
					this._contactName = value;
					this.OnPropertyChanged("ContactName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContactPicture", Storage="_contactPicture", FieldType="Url")]
		public string ContactPicture {
			get {
				return this._contactPicture;
			}
			set {
				if ((value != this._contactPicture)) {
					this.OnPropertyChanging("ContactPicture", this._contactPicture);
					this._contactPicture = value;
					this.OnPropertyChanged("ContactPicture");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingPageLayout", Storage="_pageLayout", ReadOnly=true, FieldType="Url")]
		public string PageLayout {
			get {
				return this._pageLayout;
			}
			set {
				if ((value != this._pageLayout)) {
					this.OnPropertyChanging("PageLayout", this._pageLayout);
					this._pageLayout = value;
					this.OnPropertyChanged("PageLayout");
				}
			}
		}
		
		/// <summary>
		/// The value of the document ID assigned to this item.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string DocumentIDValue {
			get {
				throw new System.InvalidOperationException("Field _dlc_DocId was removed from content type System Page.");
			}
			set {
				throw new System.InvalidOperationException("Field _dlc_DocId was removed from content type System Page.");
			}
		}
		
		/// <summary>
		/// Permanent link to this document.
		/// </summary>
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string DocumentID {
			get {
				throw new System.InvalidOperationException("Field _dlc_DocIdUrl was removed from content type System Page.");
			}
			set {
				throw new System.InvalidOperationException("Field _dlc_DocIdUrl was removed from content type System Page.");
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContact", Storage="_contactId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ContactId {
			get {
				return this._contactId;
			}
			set {
				if ((value != this._contactId)) {
					this.OnPropertyChanging("ContactId", this._contactId);
					this._contactId = value;
					this.OnPropertyChanged("ContactId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PublishingContact", Storage="_contact", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Contact {
			get {
				return this._contact;
			}
			set {
				if ((value != this._contact)) {
					this.OnPropertyChanging("Contact", this._contact);
					this._contact = value;
					this.OnPropertyChanged("Contact");
				}
			}
		}
	}
	
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Report", Id="0x01010058DDEB47312E4967BFC1576B96E8C3D4")]
	public partial class Report : Document {
		
		private string _reportDescription;
		
		private System.Nullable<double> _parentID;
		
		private System.Nullable<ReportCategory> _reportCategory;
		
		private System.Nullable<ReportStatus> _reportStatus;
		
		private System.Nullable<int> _ownerId;
		
		private string _owner;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Report() {
			this.OnCreated();
		}
		
		/// <summary>
		/// A description of the contents of the report
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportDescription", Storage="_reportDescription", FieldType="Note")]
		public string ReportDescription {
			get {
				return this._reportDescription;
			}
			set {
				if ((value != this._reportDescription)) {
					this.OnPropertyChanging("ReportDescription", this._reportDescription);
					this._reportDescription = value;
					this.OnPropertyChanged("ReportDescription");
				}
			}
		}
		
		/// <summary>
		/// The Parent Id of this report
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ParentId", Storage="_parentID", FieldType="Number")]
		public System.Nullable<double> ParentID {
			get {
				return this._parentID;
			}
			set {
				if ((value != this._parentID)) {
					this.OnPropertyChanging("ParentID", this._parentID);
					this._parentID = value;
					this.OnPropertyChanged("ParentID");
				}
			}
		}
		
		/// <summary>
		/// Category of the report
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportCategory", Storage="_reportCategory", FieldType="Choice")]
		public System.Nullable<ReportCategory> ReportCategory {
			get {
				return this._reportCategory;
			}
			set {
				if ((value != this._reportCategory)) {
					this.OnPropertyChanging("ReportCategory", this._reportCategory);
					this._reportCategory = value;
					this.OnPropertyChanged("ReportCategory");
				}
			}
		}
		
		/// <summary>
		/// Status of the report
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportStatus", Storage="_reportStatus", FieldType="Choice")]
		public System.Nullable<ReportStatus> ReportStatus {
			get {
				return this._reportStatus;
			}
			set {
				if ((value != this._reportStatus)) {
					this.OnPropertyChanging("ReportStatus", this._reportStatus);
					this._reportStatus = value;
					this.OnPropertyChanged("ReportStatus");
				}
			}
		}
		
		/// <summary>
		/// Owner of this document
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportOwner", Storage="_ownerId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> OwnerId {
			get {
				return this._ownerId;
			}
			set {
				if ((value != this._ownerId)) {
					this.OnPropertyChanging("OwnerId", this._ownerId);
					this._ownerId = value;
					this.OnPropertyChanged("OwnerId");
				}
			}
		}
		
		/// <summary>
		/// Owner of this document
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReportOwner", Storage="_owner", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string Owner {
			get {
				return this._owner;
			}
			set {
				if ((value != this._owner)) {
					this.OnPropertyChanging("Owner", this._owner);
					this._owner = value;
					this.OnPropertyChanged("Owner");
				}
			}
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Tasks")]
	public partial class TasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Track a work item that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Task", Id="0x0108", List="Workflow Tasks")]
	public partial class WorkflowTasksTask : Task {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkflowTasksTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Tasks")]
	public partial class TasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public TasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Group and describe related tasks that you or your team needs to complete.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Summary Task", Id="0x012004", List="Workflow Tasks")]
	public partial class WorkflowTasksSummaryTask : SummaryTask {
		
		private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WorkflowTasksSummaryTask() {
			this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
			this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
			this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
			this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DueDate", Storage="_dueDate", FieldType="DateTime")]
		public override System.Nullable<System.DateTime> DueDate {
			get {
				return this._dueDate;
			}
			set {
				if ((value != this._dueDate)) {
					this.OnPropertyChanging("DueDate", this._dueDate);
					this._dueDate = value;
					this.OnPropertyChanged("DueDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Status", Storage="_taskStatus", FieldType="Choice")]
		public override System.Nullable<TaskStatus> TaskStatus {
			get {
				return this._taskStatus;
			}
			set {
				if ((value != this._taskStatus)) {
					this.OnPropertyChanging("TaskStatus", this._taskStatus);
					this._taskStatus = value;
					this.OnPropertyChanged("TaskStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.AssociationAttribute(Name="Predecessors", Storage="_predecessors", MultivalueType=Microsoft.SharePoint.Linq.AssociationType.Multi, List="Workflow Tasks")]
		public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors {
			get {
				return this._predecessors;
			}
			set {
				this._predecessors.Assign(value);
			}
		}
		
		private void OnPredecessorsChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
		}
		
		private void OnPredecessorsChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("Predecessors");
		}
		
		private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e) {
		}
	}
	
	/// <summary>
	/// Upload an image.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Image", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B00AADE34325A8B49CDA8BB4DB53328F214")]
	public partial class Image : RichMediaAsset {
		
		private string _pictureSize;
		
		private System.Nullable<int> _pictureHeight;
		
		private string _comments;
		
		private string _author;
		
		private System.Nullable<System.DateTime> _datePictureTaken;
		
		private string _copyright;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Image() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageSize", Storage="_pictureSize", FieldType="Computed")]
		public string PictureSize {
			get {
				return this._pictureSize;
			}
			set {
				if ((value != this._pictureSize)) {
					this.OnPropertyChanging("PictureSize", this._pictureSize);
					this._pictureSize = value;
					this.OnPropertyChanged("PictureSize");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageHeight", Storage="_pictureHeight", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> PictureHeight {
			get {
				return this._pictureHeight;
			}
			set {
				if ((value != this._pictureHeight)) {
					this.OnPropertyChanging("PictureHeight", this._pictureHeight);
					this._pictureHeight = value;
					this.OnPropertyChanged("PictureHeight");
				}
			}
		}
		
		/// <summary>
		/// A summary of this resource
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		/// <summary>
		/// The primary author
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_author", FieldType="Text")]
		public string Author {
			get {
				return this._author;
			}
			set {
				if ((value != this._author)) {
					this.OnPropertyChanging("Author", this._author);
					this._author = value;
					this.OnPropertyChanged("Author");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ImageCreateDate", Storage="_datePictureTaken", FieldType="DateTime")]
		public System.Nullable<System.DateTime> DatePictureTaken {
			get {
				return this._datePictureTaken;
			}
			set {
				if ((value != this._datePictureTaken)) {
					this.OnPropertyChanging("DatePictureTaken", this._datePictureTaken);
					this._datePictureTaken = value;
					this.OnPropertyChanged("DatePictureTaken");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_copyright", FieldType="Text")]
		public string Copyright {
			get {
				return this._copyright;
			}
			set {
				if ((value != this._copyright)) {
					this.OnPropertyChanging("Copyright", this._copyright);
					this._copyright = value;
					this.OnPropertyChanged("Copyright");
				}
			}
		}
	}
	
	/// <summary>
	/// Upload an audio file.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Audio", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B006973ACD696DC4858A76371B2FB2F439A")]
	public partial class Audio : RichMediaAsset {
		
		private string _author;
		
		private string _comments;
		
		private string _previewImageURL;
		
		private string _copyright;
		
		private System.Nullable<int> _lengthSeconds;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Audio() {
			this.OnCreated();
		}
		
		/// <summary>
		/// The primary author
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_author", FieldType="Text")]
		public string Author {
			get {
				return this._author;
			}
			set {
				if ((value != this._author)) {
					this.OnPropertyChanging("Author", this._author);
					this._author = value;
					this.OnPropertyChanged("Author");
				}
			}
		}
		
		/// <summary>
		/// A summary of this resource
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_previewImageURL", FieldType="Url")]
		public string PreviewImageURL {
			get {
				return this._previewImageURL;
			}
			set {
				if ((value != this._previewImageURL)) {
					this.OnPropertyChanging("PreviewImageURL", this._previewImageURL);
					this._previewImageURL = value;
					this.OnPropertyChanged("PreviewImageURL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_copyright", FieldType="Text")]
		public string Copyright {
			get {
				return this._copyright;
			}
			set {
				if ((value != this._copyright)) {
					this.OnPropertyChanging("Copyright", this._copyright);
					this._copyright = value;
					this.OnPropertyChanged("Copyright");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLengthInSeconds", Storage="_lengthSeconds", FieldType="Integer")]
		public System.Nullable<int> LengthSeconds {
			get {
				return this._lengthSeconds;
			}
			set {
				if ((value != this._lengthSeconds)) {
					this.OnPropertyChanging("LengthSeconds", this._lengthSeconds);
					this._lengthSeconds = value;
					this.OnPropertyChanged("LengthSeconds");
				}
			}
		}
	}
	
	/// <summary>
	/// Upload a video file.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Video", Id="0x0101009148F5A04DDD49CBA7127AADA5FB792B00291D173ECE694D56B19D111489C4369D")]
	public partial class Video : RichMediaAsset {
		
		private string _author;
		
		private string _comments;
		
		private string _previewImageURL;
		
		private string _copyright;
		
		private System.Nullable<int> _lengthSeconds;
		
		private System.Nullable<int> _frameWidth;
		
		private System.Nullable<int> _frameHeight;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Video() {
			this.OnCreated();
		}
		
		/// <summary>
		/// The primary author
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Author", Storage="_author", FieldType="Text")]
		public string Author {
			get {
				return this._author;
			}
			set {
				if ((value != this._author)) {
					this.OnPropertyChanging("Author", this._author);
					this._author = value;
					this.OnPropertyChanged("Author");
				}
			}
		}
		
		/// <summary>
		/// A summary of this resource
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_Comments", Storage="_comments", FieldType="Note")]
		public string Comments {
			get {
				return this._comments;
			}
			set {
				if ((value != this._comments)) {
					this.OnPropertyChanging("Comments", this._comments);
					this._comments = value;
					this.OnPropertyChanged("Comments");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="AlternateThumbnailUrl", Storage="_previewImageURL", FieldType="Url")]
		public string PreviewImageURL {
			get {
				return this._previewImageURL;
			}
			set {
				if ((value != this._previewImageURL)) {
					this.OnPropertyChanging("PreviewImageURL", this._previewImageURL);
					this._previewImageURL = value;
					this.OnPropertyChanged("PreviewImageURL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="wic_System_Copyright", Storage="_copyright", FieldType="Text")]
		public string Copyright {
			get {
				return this._copyright;
			}
			set {
				if ((value != this._copyright)) {
					this.OnPropertyChanging("Copyright", this._copyright);
					this._copyright = value;
					this.OnPropertyChanged("Copyright");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="MediaLengthInSeconds", Storage="_lengthSeconds", FieldType="Integer")]
		public System.Nullable<int> LengthSeconds {
			get {
				return this._lengthSeconds;
			}
			set {
				if ((value != this._lengthSeconds)) {
					this.OnPropertyChanging("LengthSeconds", this._lengthSeconds);
					this._lengthSeconds = value;
					this.OnPropertyChanged("LengthSeconds");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoWidthInPixels", Storage="_frameWidth", FieldType="Integer")]
		public System.Nullable<int> FrameWidth {
			get {
				return this._frameWidth;
			}
			set {
				if ((value != this._frameWidth)) {
					this.OnPropertyChanging("FrameWidth", this._frameWidth);
					this._frameWidth = value;
					this.OnPropertyChanged("FrameWidth");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="VideoHeightInPixels", Storage="_frameHeight", FieldType="Integer")]
		public System.Nullable<int> FrameHeight {
			get {
				return this._frameHeight;
			}
			set {
				if ((value != this._frameHeight)) {
					this.OnPropertyChanging("FrameHeight", this._frameHeight);
					this._frameHeight = value;
					this.OnPropertyChanged("FrameHeight");
				}
			}
		}
	}
	
	/// <summary>
	/// Page is a system content type template created by the Publishing Resources feature. The column templates from Page will be added to all Pages libraries created by the Publishing feature.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Page", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF39")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(ArticlePage))]
	public partial class Page : SystemPage {
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Page() {
			this.OnCreated();
		}
		
		/// <summary>
		/// The value of the document ID assigned to this item.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_DocId", Storage="_documentIDValue", ReadOnly=true, FieldType="Text")]
		public override string DocumentIDValue {
			get {
				return this._documentIDValue;
			}
			set {
				if ((value != this._documentIDValue)) {
					this.OnPropertyChanging("DocumentIDValue", this._documentIDValue);
					this._documentIDValue = value;
					this.OnPropertyChanged("DocumentIDValue");
				}
			}
		}
		
		/// <summary>
		/// Permanent link to this document.
		/// </summary>
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="_dlc_DocIdUrl", Storage="_documentID", ReadOnly=true, FieldType="Url")]
		public override string DocumentID {
			get {
				return this._documentID;
			}
			set {
				if ((value != this._documentID)) {
					this.OnPropertyChanging("DocumentID", this._documentID);
					this._documentID = value;
					this.OnPropertyChanged("DocumentID");
				}
			}
		}
	}
	
	/// <summary>
	/// Article Page is a system content type template created by the Publishing Resources feature. It is the associated content type template for the default page layouts used to create article pages in sites that have the Publishing feature enabled.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Article Page", Id="0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF390024245" +
		"7EFB8B24247815D688C526CD44D")]
	public partial class ArticlePage : Page {
		
		private string _byline;
		
		private System.Nullable<System.DateTime> _articleDate;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public ArticlePage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArticleByLine", Storage="_byline", FieldType="Text")]
		public string Byline {
			get {
				return this._byline;
			}
			set {
				if ((value != this._byline)) {
					this.OnPropertyChanging("Byline", this._byline);
					this._byline = value;
					this.OnPropertyChanged("Byline");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ArticleStartDate", Storage="_articleDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ArticleDate {
			get {
				return this._articleDate;
			}
			set {
				if ((value != this._articleDate)) {
					this.OnPropertyChanging("ArticleDate", this._articleDate);
					this._articleDate = value;
					this.OnPropertyChanged("ArticleDate");
				}
			}
		}
	}
	
	public enum Category : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) Category1")]
		_1Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Category2")]
		_2Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Category3")]
		_3Category3 = 8,
	}
	
	public enum Priority : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(1) High")]
		_1High = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(2) Normal")]
		_2Normal = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="(3) Low")]
		_3Low = 8,
	}
	
	public enum TaskStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Not Started")]
		NotStarted = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="In Progress")]
		InProgress = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Completed")]
		Completed = 8,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Deferred")]
		Deferred = 16,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Waiting on someone else")]
		WaitingOnSomeoneElse = 32,
	}
	
	public enum ContentCategory : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="None")]
		None0 = 2,
	}
	
	public enum ReportCategory : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Category 1")]
		Category1 = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Category 2")]
		Category2 = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Category 3")]
		Category3 = 8,
	}
	
	public enum ReportStatus : int {
		
		None = 0,
		
		Invalid = 1,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Final")]
		Final = 2,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Preliminary")]
		Preliminary = 4,
		
		[Microsoft.SharePoint.Linq.ChoiceAttribute(Value="Period To Date")]
		PeriodToDate = 8,
	}
}
