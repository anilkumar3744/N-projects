//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VFS.PMS.EventReceiver.EmployeeDataReciever
{
    using System;


    public partial class VFSPMSEntitiesDataContext : Microsoft.SharePoint.Linq.DataContext
    {

        #region Extensibility Method Definitions
        partial void OnCreated();
        #endregion

        public VFSPMSEntitiesDataContext(string requestUrl) :
            base(requestUrl)
        {
            this.OnCreated();
        }

        /// <summary>
        /// Use this list to track upcoming events, status updates or other team news.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Announcements")]
        public Microsoft.SharePoint.Linq.EntityList<Announcement> Announcements
        {
            get
            {
                return this.GetList<Announcement>("Announcements");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Competencies")]
        public Microsoft.SharePoint.Linq.EntityList<AppraisalCompetenciesItem> AppraisalCompetencies
        {
            get
            {
                return this.GetList<AppraisalCompetenciesItem>("Appraisal Competencies");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Competencies Draft")]
        public Microsoft.SharePoint.Linq.EntityList<Item> AppraisalCompetenciesDraft
        {
            get
            {
                return this.GetList<Item>("Appraisal Competencies Draft");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Development Measures")]
        public Microsoft.SharePoint.Linq.EntityList<AppraisalDevelopmentMeasuresItem> AppraisalDevelopmentMeasures
        {
            get
            {
                return this.GetList<AppraisalDevelopmentMeasuresItem>("Appraisal Development Measures");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Development Measures Draft")]
        public Microsoft.SharePoint.Linq.EntityList<Item> AppraisalDevelopmentMeasuresDraft
        {
            get
            {
                return this.GetList<Item>("Appraisal Development Measures Draft");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Goals")]
        public Microsoft.SharePoint.Linq.EntityList<AppraisalGoalsItem> AppraisalGoals
        {
            get
            {
                return this.GetList<AppraisalGoalsItem>("Appraisal Goals");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Goals Draft")]
        public Microsoft.SharePoint.Linq.EntityList<Item> AppraisalGoalsDraft
        {
            get
            {
                return this.GetList<Item>("Appraisal Goals Draft");
            }
        }

        /// <summary>
        /// Appraisal Lock Audit
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Lock Audit")]
        public Microsoft.SharePoint.Linq.EntityList<AppraisalLockAuditItem> AppraisalLockAudit
        {
            get
            {
                return this.GetList<AppraisalLockAuditItem>("Appraisal Lock Audit");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Phases")]
        public Microsoft.SharePoint.Linq.EntityList<AppraisalPhasesItem> AppraisalPhases
        {
            get
            {
                return this.GetList<AppraisalPhasesItem>("Appraisal Phases");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Status")]
        public Microsoft.SharePoint.Linq.EntityList<AppraisalStatusItem> AppraisalStatus
        {
            get
            {
                return this.GetList<AppraisalStatusItem>("Appraisal Status");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisal Workflow History")]
        public Microsoft.SharePoint.Linq.EntityList<AppraisalWorkflowHistoryItem> AppraisalWorkflowHistory
        {
            get
            {
                return this.GetList<AppraisalWorkflowHistoryItem>("Appraisal Workflow History");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Appraisals")]
        public Microsoft.SharePoint.Linq.EntityList<AppraisalsItem> Appraisals
        {
            get
            {
                return this.GetList<AppraisalsItem>("Appraisals");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Areas")]
        public Microsoft.SharePoint.Linq.EntityList<AreasItem> Areas
        {
            get
            {
                return this.GetList<AreasItem>("Areas");
            }
        }

        /// <summary>
        /// Use the Calendar list to keep informed of upcoming meetings, deadlines, and other important events.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Calendar")]
        public Microsoft.SharePoint.Linq.EntityList<CalendarEvent> Calendar
        {
            get
            {
                return this.GetList<CalendarEvent>("Calendar");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Comments History")]
        public Microsoft.SharePoint.Linq.EntityList<CommentsHistoryItem> CommentsHistory
        {
            get
            {
                return this.GetList<CommentsHistoryItem>("Comments History");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Companies")]
        public Microsoft.SharePoint.Linq.EntityList<CompaniesItem> Companies
        {
            get
            {
                return this.GetList<CompaniesItem>("Companies");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Competencies")]
        public Microsoft.SharePoint.Linq.EntityList<Item> Competencies
        {
            get
            {
                return this.GetList<Item>("Competencies");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Competency Descriptions")]
        public Microsoft.SharePoint.Linq.EntityList<Item> CompetencyDescriptions
        {
            get
            {
                return this.GetList<Item>("Competency Descriptions");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Competency Ratings")]
        public Microsoft.SharePoint.Linq.EntityList<CompetencyRatingsItem> CompetencyRatings
        {
            get
            {
                return this.GetList<CompetencyRatingsItem>("Competency Ratings");
            }
        }

        /// <summary>
        /// Use the reports list to customize the queries that appear in the Content and Structure Tool views
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Content and Structure Reports")]
        public Microsoft.SharePoint.Linq.EntityList<ContentAndStructureReportsItem> ContentAndStructureReports
        {
            get
            {
                return this.GetList<ContentAndStructureReportsItem>("Content and Structure Reports");
            }
        }

        /// <summary>
        /// This Document library has the templates to create Web Analytics custom reports for this site collection
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Customized Reports")]
        public Microsoft.SharePoint.Linq.EntityList<Document> CustomizedReports
        {
            get
            {
                return this.GetList<Document>("Customized Reports");
            }
        }

        /// <summary>
        /// This system library was created by the Publishing feature to store documents that are used on pages in this site.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Documents")]
        public Microsoft.SharePoint.Linq.EntityList<Document> Documents
        {
            get
            {
                return this.GetList<Document>("Documents");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Employee Groups")]
        public Microsoft.SharePoint.Linq.EntityList<EmployeeGroupsItem> EmployeeGroups
        {
            get
            {
                return this.GetList<EmployeeGroupsItem>("Employee Groups");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Employee Sub Groups")]
        public Microsoft.SharePoint.Linq.EntityList<EmployeeSubGroupsItem> EmployeeSubGroups
        {
            get
            {
                return this.GetList<EmployeeSubGroupsItem>("Employee Sub Groups");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntityList<EmployeesMasterItem> EmployeesMaster
        {
            get
            {
                return this.GetList<EmployeesMasterItem>("Employees Master");
            }
        }

        /// <summary>
        /// This library contains administrator-approved form templates that were activated to this site collection.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Form Templates")]
        public Microsoft.SharePoint.Linq.EntityList<Item> FormTemplates
        {
            get
            {
                return this.GetList<Item>("Form Templates");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Goal Categories")]
        public Microsoft.SharePoint.Linq.EntityList<Item> GoalCategories
        {
            get
            {
                return this.GetList<Item>("Goal Categories");
            }
        }

        /// <summary>
        /// This system library was created by the Publishing feature to store images that are used on pages in this site.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Images")]
        public Microsoft.SharePoint.Linq.EntityList<RichMediaAsset> Images
        {
            get
            {
                return this.GetList<RichMediaAsset>("Images");
            }
        }

        /// <summary>
        /// Use the Links list for links to Web pages that your team members will find interesting or useful.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Links")]
        public Microsoft.SharePoint.Linq.EntityList<Link> Links
        {
            get
            {
                return this.GetList<Link>("Links");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Organization Units")]
        public Microsoft.SharePoint.Linq.EntityList<OrganizationUnitsItem> OrganizationUnits
        {
            get
            {
                return this.GetList<OrganizationUnitsItem>("Organization Units");
            }
        }

        /// <summary>
        /// This system library was created by the Publishing feature to store pages that are created in this site.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Pages")]
        public Microsoft.SharePoint.Linq.EntityList<Document> Pages
        {
            get
            {
                return this.GetList<Document>("Pages");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Performance Cycle Activity")]
        public Microsoft.SharePoint.Linq.EntityList<PerformanceCycleActivityItem> PerformanceCycleActivity
        {
            get
            {
                return this.GetList<PerformanceCycleActivityItem>("Performance Cycle Activity");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Performance Cycle Phases")]
        public Microsoft.SharePoint.Linq.EntityList<PerformanceCyclePhasesItem> PerformanceCyclePhases
        {
            get
            {
                return this.GetList<PerformanceCyclePhasesItem>("Performance Cycle Phases");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Performance Cycles")]
        public Microsoft.SharePoint.Linq.EntityList<PerformanceCyclesItem> PerformanceCycles
        {
            get
            {
                return this.GetList<PerformanceCyclesItem>("Performance Cycles");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Performance Ratings")]
        public Microsoft.SharePoint.Linq.EntityList<Item> PerformanceRatings
        {
            get
            {
                return this.GetList<Item>("Performance Ratings");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Phases")]
        public Microsoft.SharePoint.Linq.EntityList<PhasesItem> Phases
        {
            get
            {
                return this.GetList<PhasesItem>("Phases");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "PIP")]
        public Microsoft.SharePoint.Linq.EntityList<Item> PIP
        {
            get
            {
                return this.GetList<Item>("PIP");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "PIP Draft")]
        public Microsoft.SharePoint.Linq.EntityList<Item> PIPDraft
        {
            get
            {
                return this.GetList<Item>("PIP Draft");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "PMS Data File Locations")]
        public Microsoft.SharePoint.Linq.EntityList<PMSDataFileLocationsItem> PMSDataFileLocations
        {
            get
            {
                return this.GetList<PMSDataFileLocationsItem>("PMS Data File Locations");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Positions")]
        public Microsoft.SharePoint.Linq.EntityList<PositionsItem> Positions
        {
            get
            {
                return this.GetList<PositionsItem>("Positions");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Regions")]
        public Microsoft.SharePoint.Linq.EntityList<RegionsItem> Regions
        {
            get
            {
                return this.GetList<RegionsItem>("Regions");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Reminders")]
        public Microsoft.SharePoint.Linq.EntityList<Item> Reminders
        {
            get
            {
                return this.GetList<Item>("Reminders");
            }
        }

        /// <summary>
        /// Items in this list contain HTML or text content which can be inserted into web pages. If an item has automatic update selected, the content will be inserted into web pages as a read-only reference, and the content will update if the item is changed. If the item does not have automatic update selected, the content will be inserted as a copy in the web page, and the content will not update if the item is changed.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Reusable Content")]
        public Microsoft.SharePoint.Linq.EntityList<Item> ReusableContent
        {
            get
            {
                return this.GetList<Item>("Reusable Content");
            }
        }

        /// <summary>
        /// Share a document with the team by adding it to this document library.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Shared Documents")]
        public Microsoft.SharePoint.Linq.EntityList<SharedDocumentsDocument> SharedDocuments
        {
            get
            {
                return this.GetList<SharedDocumentsDocument>("Shared Documents");
            }
        }

        /// <summary>
        /// Use this library to store files which are included on pages within this site, such as images on Wiki pages.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Site Assets")]
        public Microsoft.SharePoint.Linq.EntityList<SiteAssetsDocument> SiteAssets
        {
            get
            {
                return this.GetList<SiteAssetsDocument>("Site Assets");
            }
        }

        /// <summary>
        /// This system library was created by the Publishing Resources feature to store documents that are used throughout the site collection.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Site Collection Documents")]
        public Microsoft.SharePoint.Linq.EntityList<Document> SiteCollectionDocuments
        {
            get
            {
                return this.GetList<Document>("Site Collection Documents");
            }
        }

        /// <summary>
        /// This system library was created by the Publishing Resources feature to store images that are used throughout the site collection.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Site Collection Images")]
        public Microsoft.SharePoint.Linq.EntityList<RichMediaAsset> SiteCollectionImages
        {
            get
            {
                return this.GetList<RichMediaAsset>("Site Collection Images");
            }
        }

        /// <summary>
        /// Use this library to create and store pages on this site.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Site Pages")]
        public Microsoft.SharePoint.Linq.EntityList<SitePagesWikiPage> SitePages
        {
            get
            {
                return this.GetList<SitePagesWikiPage>("Site Pages");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Sub-Areas")]
        public Microsoft.SharePoint.Linq.EntityList<SubAreasItem> SubAreas
        {
            get
            {
                return this.GetList<SubAreasItem>("Sub-Areas");
            }
        }

        /// <summary>
        /// Use the Tasks list to keep track of work that you or your team needs to complete.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Tasks")]
        public Microsoft.SharePoint.Linq.EntityList<Item> Tasks
        {
            get
            {
                return this.GetList<Item>("Tasks");
            }
        }

        /// <summary>
        /// Use the Team Discussion list to hold newsgroup-style discussions on topics relevant to your team.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Team Discussion")]
        public Microsoft.SharePoint.Linq.EntityList<Item> TeamDiscussion
        {
            get
            {
                return this.GetList<Item>("Team Discussion");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "TMT Actions")]
        public Microsoft.SharePoint.Linq.EntityList<Item> TMTActions
        {
            get
            {
                return this.GetList<Item>("TMT Actions");
            }
        }

        [Microsoft.SharePoint.Linq.ListAttribute(Name = "VFSAppraisalTasks")]
        public Microsoft.SharePoint.Linq.EntityList<Item> VFSAppraisalTasks
        {
            get
            {
                return this.GetList<Item>("VFSAppraisalTasks");
            }
        }

        /// <summary>
        /// This system library was created by the Publishing feature to store workflow tasks that are created in this site.
        /// </summary>
        [Microsoft.SharePoint.Linq.ListAttribute(Name = "Workflow Tasks")]
        public Microsoft.SharePoint.Linq.EntityList<Item> WorkflowTasks
        {
            get
            {
                return this.GetList<Item>("Workflow Tasks");
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Announcement))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Folder))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalCompetenciesItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalCompetenciesDraftItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFS_AppraisalCompetenciesCType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalDevelopmentMeasuresItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalDevelopmentMeasuresDraftItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFS_PDPContentTypePDPContenttype))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalGoalsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalGoalsDraftItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalGoalsDraftVFS_AppraisalGoalsCType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalLockAuditItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalPhasesItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalStatusItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalWorkflowHistoryItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AreasItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Event))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(CommentsHistoryItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(CompaniesItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFS_MasterCompetencies1CType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(CompetenciesItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(CompetencyDescriptionsVFS_MasterCompetenciesDescCType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(CompetencyDescriptionsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(CompetencyRatingsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(ContentAndStructureReportsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Document))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(EmployeeGroupsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(EmployeeSubGroupsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(EmployeesMasterItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(GoalCategoriesVFS_MasterCategoryCType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(GoalCategoriesItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Link))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(OrganizationUnitsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PerformanceCycleActivityItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PerformanceCyclePhasesItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PerformanceCyclesItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFS_PerformanceMatrixCType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PerformanceRatingsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PhasesItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFS_PIP_ContentTypeVFS_PIP_ContentType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PMSDataFileLocationsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PositionsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(RegionsItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFS_RemaindersContentTypeVFS_REmainderCType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(ReusableContentReusableHTML))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(ReusableContentReusableText))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(SubAreasItem))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Task))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Message))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFS_TMTActionsCType))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(TMTActionsItem))]
    public partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging
    {

        private System.Nullable<int> _id;

        private System.Nullable<int> _version;

        private string _path;

        private Microsoft.SharePoint.Linq.EntityState _entityState;

        private System.Collections.Generic.IDictionary<string, object> _originalValues;

        protected string _title;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState
        {
            get
            {
                return this._entityState;
            }
            set
            {
                if ((value != this._entityState))
                {
                    this._entityState = value;
                }
            }
        }

        System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues
        {
            get
            {
                if ((null == this._originalValues))
                {
                    this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
                }
                return this._originalValues;
            }
        }

        public Item()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ID", Storage = "_id", ReadOnly = true, FieldType = "Counter")]
        public System.Nullable<int> Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((value != this._id))
                {
                    this.OnPropertyChanging("Id", this._id);
                    this._id = value;
                    this.OnPropertyChanged("Id");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "owshiddenversion", Storage = "_version", ReadOnly = true, FieldType = "Integer")]
        public System.Nullable<int> Version
        {
            get
            {
                return this._version;
            }
            set
            {
                if ((value != this._version))
                {
                    this.OnPropertyChanging("Version", this._version);
                    this._version = value;
                    this.OnPropertyChanged("Version");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "FileDirRef", Storage = "_path", ReadOnly = true, FieldType = "Lookup", IsLookupValue = true)]
        public string Path
        {
            get
            {
                return this._path;
            }
            set
            {
                if ((value != this._path))
                {
                    this.OnPropertyChanging("Path", this._path);
                    this._path = value;
                    this.OnPropertyChanged("Path");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Title", Storage = "_title", Required = true, FieldType = "Text")]
        public virtual string Title
        {
            get
            {
                return this._title;
            }
            set
            {
                if ((value != this._title))
                {
                    this.OnPropertyChanging("Title", this._title);
                    this._title = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;

        protected virtual void OnPropertyChanged(string propertyName)
        {
            if ((null != this.PropertyChanged))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        protected virtual void OnPropertyChanging(string propertyName, object value)
        {
            if ((null == this._originalValues))
            {
                this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
            }
            if ((false == this._originalValues.ContainsKey(propertyName)))
            {
                this._originalValues.Add(propertyName, value);
            }
            if ((null != this.PropertyChanging))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }
    }

    /// <summary>
    /// Create a new news item, status or other short piece of information.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Announcement", Id = "0x0104")]
    public partial class Announcement : Item
    {

        private string _body;

        private System.Nullable<System.DateTime> _expires;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Announcement()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Body", Storage = "_body", FieldType = "Note")]
        public string Body
        {
            get
            {
                return this._body;
            }
            set
            {
                if ((value != this._body))
                {
                    this.OnPropertyChanging("Body", this._body);
                    this._body = value;
                    this.OnPropertyChanged("Body");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Expires", Storage = "_expires", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> Expires
        {
            get
            {
                return this._expires;
            }
            set
            {
                if ((value != this._expires))
                {
                    this.OnPropertyChanging("Expires", this._expires);
                    this._expires = value;
                    this.OnPropertyChanged("Expires");
                }
            }
        }
    }

    /// <summary>
    /// Create a new folder.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Folder", Id = "0x0120")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(GoalCategoriesFolder))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(SummaryTask))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Discussion))]
    public partial class Folder : Item
    {

        private string _name;

        private System.Nullable<int> _itemChildCountId;

        private string _itemChildCountItemChildCount;

        private System.Nullable<int> _folderChildCountId;

        private string _folderChildCountFolderChildCount;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Folder()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "FileLeafRef", Storage = "_name", Required = true, FieldType = "File")]
        public virtual string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((value != this._name))
                {
                    this.OnPropertyChanging("Name", this._name);
                    this._name = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
        public override string Title
        {
            get
            {
                throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
            }
            set
            {
                throw new System.InvalidOperationException("Field Title was removed from content type Folder.");
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ItemChildCount", Storage = "_itemChildCountId", ReadOnly = true, FieldType = "Lookup", IsLookupId = true)]
        public System.Nullable<int> ItemChildCountId
        {
            get
            {
                return this._itemChildCountId;
            }
            set
            {
                if ((value != this._itemChildCountId))
                {
                    this.OnPropertyChanging("ItemChildCountId", this._itemChildCountId);
                    this._itemChildCountId = value;
                    this.OnPropertyChanged("ItemChildCountId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ItemChildCount", Storage = "_itemChildCountItemChildCount", ReadOnly = true, FieldType = "Lookup", IsLookupValue = true)]
        public string ItemChildCountItemChildCount
        {
            get
            {
                return this._itemChildCountItemChildCount;
            }
            set
            {
                if ((value != this._itemChildCountItemChildCount))
                {
                    this.OnPropertyChanging("ItemChildCountItemChildCount", this._itemChildCountItemChildCount);
                    this._itemChildCountItemChildCount = value;
                    this.OnPropertyChanged("ItemChildCountItemChildCount");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "FolderChildCount", Storage = "_folderChildCountId", ReadOnly = true, FieldType = "Lookup", IsLookupId = true)]
        public System.Nullable<int> FolderChildCountId
        {
            get
            {
                return this._folderChildCountId;
            }
            set
            {
                if ((value != this._folderChildCountId))
                {
                    this.OnPropertyChanging("FolderChildCountId", this._folderChildCountId);
                    this._folderChildCountId = value;
                    this.OnPropertyChanged("FolderChildCountId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "FolderChildCount", Storage = "_folderChildCountFolderChildCount", ReadOnly = true, FieldType = "Lookup", IsLookupValue = true)]
        public string FolderChildCountFolderChildCount
        {
            get
            {
                return this._folderChildCountFolderChildCount;
            }
            set
            {
                if ((value != this._folderChildCountFolderChildCount))
                {
                    this.OnPropertyChanging("FolderChildCountFolderChildCount", this._folderChildCountFolderChildCount);
                    this._folderChildCountFolderChildCount = value;
                    this.OnPropertyChanged("FolderChildCountFolderChildCount");
                }
            }
        }
    }

    /// <summary>
    /// Create a new meeting, deadline or other event.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Event", Id = "0x0102")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(CalendarEvent))]
    public partial class Event : Item
    {

        private string _location;

        protected System.Nullable<System.DateTime> _startTime;

        private System.Nullable<System.DateTime> _endTime;

        protected string _description;

        private System.Nullable<bool> _allDayEvent;

        private System.Nullable<bool> _recurrence;

        private System.Nullable<bool> _workspace;

        private System.Nullable<Category> _category;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Event()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Location", Storage = "_location", FieldType = "Text")]
        public string Location
        {
            get
            {
                return this._location;
            }
            set
            {
                if ((value != this._location))
                {
                    this.OnPropertyChanging("Location", this._location);
                    this._location = value;
                    this.OnPropertyChanged("Location");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "StartDate", Storage = "_startTime", Required = true, FieldType = "DateTime")]
        public virtual System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return this._startTime;
            }
            set
            {
                if ((value != this._startTime))
                {
                    this.OnPropertyChanging("StartTime", this._startTime);
                    this._startTime = value;
                    this.OnPropertyChanged("StartTime");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EndDate", Storage = "_endTime", Required = true, FieldType = "DateTime")]
        public System.Nullable<System.DateTime> EndTime
        {
            get
            {
                return this._endTime;
            }
            set
            {
                if ((value != this._endTime))
                {
                    this.OnPropertyChanging("EndTime", this._endTime);
                    this._endTime = value;
                    this.OnPropertyChanged("EndTime");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comments", Storage = "_description", FieldType = "Note")]
        public virtual string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "fAllDayEvent", Storage = "_allDayEvent", FieldType = "AllDayEvent")]
        public System.Nullable<bool> AllDayEvent
        {
            get
            {
                return this._allDayEvent;
            }
            set
            {
                if ((value != this._allDayEvent))
                {
                    this.OnPropertyChanging("AllDayEvent", this._allDayEvent);
                    this._allDayEvent = value;
                    this.OnPropertyChanged("AllDayEvent");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "fRecurrence", Storage = "_recurrence", FieldType = "Recurrence")]
        public System.Nullable<bool> Recurrence
        {
            get
            {
                return this._recurrence;
            }
            set
            {
                if ((value != this._recurrence))
                {
                    this.OnPropertyChanging("Recurrence", this._recurrence);
                    this._recurrence = value;
                    this.OnPropertyChanged("Recurrence");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "WorkspaceLink", Storage = "_workspace", FieldType = "CrossProjectLink")]
        public System.Nullable<bool> Workspace
        {
            get
            {
                return this._workspace;
            }
            set
            {
                if ((value != this._workspace))
                {
                    this.OnPropertyChanging("Workspace", this._workspace);
                    this._workspace = value;
                    this.OnPropertyChanged("Workspace");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Category", Storage = "_category", FieldType = "Choice")]
        public System.Nullable<Category> Category
        {
            get
            {
                return this._category;
            }
            set
            {
                if ((value != this._category))
                {
                    this.OnPropertyChanging("Category", this._category);
                    this._category = value;
                    this.OnPropertyChanged("Category");
                }
            }
        }
    }

    /// <summary>
    /// Create a new document.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Document", Id = "0x0101")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(RichMediaAsset))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PagesPage))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PagesArticlePage))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PagesWelcomePage))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(SharedDocumentsDocument))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(SiteAssetsDocument))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(WikiPage))]
    public partial class Document : Item
    {

        private string _name;

        private string _documentModifiedBy;

        private string _documentCreatedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Document()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "FileLeafRef", Storage = "_name", Required = true, FieldType = "File")]
        public string Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if ((value != this._name))
                {
                    this.OnPropertyChanging("Name", this._name);
                    this._name = value;
                    this.OnPropertyChanged("Name");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Modified_x0020_By", Storage = "_documentModifiedBy", ReadOnly = true, FieldType = "Text")]
        public string DocumentModifiedBy
        {
            get
            {
                return this._documentModifiedBy;
            }
            set
            {
                if ((value != this._documentModifiedBy))
                {
                    this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
                    this._documentModifiedBy = value;
                    this.OnPropertyChanged("DocumentModifiedBy");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Created_x0020_By", Storage = "_documentCreatedBy", ReadOnly = true, FieldType = "Text")]
        public string DocumentCreatedBy
        {
            get
            {
                return this._documentCreatedBy;
            }
            set
            {
                if ((value != this._documentCreatedBy))
                {
                    this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
                    this._documentCreatedBy = value;
                    this.OnPropertyChanged("DocumentCreatedBy");
                }
            }
        }
    }

    /// <summary>
    /// Create a new link to a Web page or other resource.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Link", Id = "0x0105")]
    public partial class Link : Item
    {

        private string _uRL;

        private string _comments;

        private string _uRL0;

        private string _uRL1;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Link()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "URL", Storage = "_uRL", Required = true, FieldType = "Url")]
        public string URL
        {
            get
            {
                return this._uRL;
            }
            set
            {
                if ((value != this._uRL))
                {
                    this.OnPropertyChanging("URL", this._uRL);
                    this._uRL = value;
                    this.OnPropertyChanged("URL");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "URLwMenu", Storage = "_uRL0", ReadOnly = true, FieldType = "Computed")]
        public string URL0
        {
            get
            {
                return this._uRL0;
            }
            set
            {
                if ((value != this._uRL0))
                {
                    this.OnPropertyChanging("URL0", this._uRL0);
                    this._uRL0 = value;
                    this.OnPropertyChanged("URL0");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "URLNoMenu", Storage = "_uRL1", ReadOnly = true, FieldType = "Computed")]
        public string URL1
        {
            get
            {
                return this._uRL1;
            }
            set
            {
                if ((value != this._uRL1))
                {
                    this.OnPropertyChanging("URL1", this._uRL1);
                    this._uRL1 = value;
                    this.OnPropertyChanged("URL1");
                }
            }
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
        public override string Title
        {
            get
            {
                throw new System.InvalidOperationException("Field Title was removed from content type Link.");
            }
            set
            {
                throw new System.InvalidOperationException("Field Title was removed from content type Link.");
            }
        }
    }

    /// <summary>
    /// Track a work item that you or your team needs to complete.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Task", Id = "0x0108")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(TasksTask))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFSAppraisalTasksTask))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(WorkflowTasksTask))]
    public partial class Task : Item
    {

        private System.Nullable<double> _complete;

        private string _body;

        private System.Nullable<System.DateTime> _startDate;

        protected System.Nullable<System.DateTime> _dueDate;

        private System.Nullable<Priority> _priority;

        protected System.Nullable<TaskStatus> _taskStatus;

        private System.Nullable<int> _assignedToId;

        private string _assignedTo;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Task()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PercentComplete", Storage = "_complete", FieldType = "Number")]
        public System.Nullable<double> Complete
        {
            get
            {
                return this._complete;
            }
            set
            {
                if ((value != this._complete))
                {
                    this.OnPropertyChanging("Complete", this._complete);
                    this._complete = value;
                    this.OnPropertyChanged("Complete");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Body", Storage = "_body", FieldType = "Note")]
        public string Body
        {
            get
            {
                return this._body;
            }
            set
            {
                if ((value != this._body))
                {
                    this.OnPropertyChanging("Body", this._body);
                    this._body = value;
                    this.OnPropertyChanged("Body");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "StartDate", Storage = "_startDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                if ((value != this._startDate))
                {
                    this.OnPropertyChanging("StartDate", this._startDate);
                    this._startDate = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "TaskDueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public virtual System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Priority", Storage = "_priority", FieldType = "Choice")]
        public System.Nullable<Priority> Priority
        {
            get
            {
                return this._priority;
            }
            set
            {
                if ((value != this._priority))
                {
                    this.OnPropertyChanging("Priority", this._priority);
                    this._priority = value;
                    this.OnPropertyChanged("Priority");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "TaskStatus", Storage = "_taskStatus", FieldType = "Choice")]
        public virtual System.Nullable<TaskStatus> TaskStatus
        {
            get
            {
                return this._taskStatus;
            }
            set
            {
                if ((value != this._taskStatus))
                {
                    this.OnPropertyChanging("TaskStatus", this._taskStatus);
                    this._taskStatus = value;
                    this.OnPropertyChanged("TaskStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "AssignedTo", Storage = "_assignedToId", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> AssignedToId
        {
            get
            {
                return this._assignedToId;
            }
            set
            {
                if ((value != this._assignedToId))
                {
                    this.OnPropertyChanging("AssignedToId", this._assignedToId);
                    this._assignedToId = value;
                    this.OnPropertyChanged("AssignedToId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "AssignedTo", Storage = "_assignedTo", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string AssignedTo
        {
            get
            {
                return this._assignedTo;
            }
            set
            {
                if ((value != this._assignedTo))
                {
                    this.OnPropertyChanging("AssignedTo", this._assignedTo);
                    this._assignedTo = value;
                    this.OnPropertyChanged("AssignedTo");
                }
            }
        }
    }

    /// <summary>
    /// Create a new message.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Message", Id = "0x0107")]
    public partial class Message : Item
    {

        private string _discussionSubject;

        private string _version0;

        private string _body;

        private string _reply;

        private string _post;

        private string _threading;

        private string _postedBy;

        private string _eMailSender;

        private System.Nullable<int> _modifiedById;

        private string _modifiedByNameWithPicture;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Message()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DiscussionTitle", Storage = "_discussionSubject", ReadOnly = true, FieldType = "Computed")]
        public string DiscussionSubject
        {
            get
            {
                return this._discussionSubject;
            }
            set
            {
                if ((value != this._discussionSubject))
                {
                    this.OnPropertyChanging("DiscussionSubject", this._discussionSubject);
                    this._discussionSubject = value;
                    this.OnPropertyChanged("DiscussionSubject");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_UIVersionString", Storage = "_version0", ReadOnly = true, FieldType = "Text")]
        public string Version0
        {
            get
            {
                return this._version0;
            }
            set
            {
                if ((value != this._version0))
                {
                    this.OnPropertyChanging("Version0", this._version0);
                    this._version0 = value;
                    this.OnPropertyChanged("Version0");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Body", Storage = "_body", FieldType = "Note")]
        public string Body
        {
            get
            {
                return this._body;
            }
            set
            {
                if ((value != this._body))
                {
                    this.OnPropertyChanging("Body", this._body);
                    this._body = value;
                    this.OnPropertyChanged("Body");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ReplyNoGif", Storage = "_reply", ReadOnly = true, FieldType = "Computed")]
        public string Reply
        {
            get
            {
                return this._reply;
            }
            set
            {
                if ((value != this._reply))
                {
                    this.OnPropertyChanging("Reply", this._reply);
                    this._reply = value;
                    this.OnPropertyChanged("Reply");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "BodyAndMore", Storage = "_post", ReadOnly = true, FieldType = "Computed")]
        public string Post
        {
            get
            {
                return this._post;
            }
            set
            {
                if ((value != this._post))
                {
                    this.OnPropertyChanging("Post", this._post);
                    this._post = value;
                    this.OnPropertyChanged("Post");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Threading", Storage = "_threading", ReadOnly = true, FieldType = "Computed")]
        public string Threading
        {
            get
            {
                return this._threading;
            }
            set
            {
                if ((value != this._threading))
                {
                    this.OnPropertyChanging("Threading", this._threading);
                    this._threading = value;
                    this.OnPropertyChanged("Threading");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PersonViewMinimal", Storage = "_postedBy", ReadOnly = true, FieldType = "Computed")]
        public string PostedBy
        {
            get
            {
                return this._postedBy;
            }
            set
            {
                if ((value != this._postedBy))
                {
                    this.OnPropertyChanging("PostedBy", this._postedBy);
                    this._postedBy = value;
                    this.OnPropertyChanged("PostedBy");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmailSender", Storage = "_eMailSender", FieldType = "Note")]
        public string EMailSender
        {
            get
            {
                return this._eMailSender;
            }
            set
            {
                if ((value != this._eMailSender))
                {
                    this.OnPropertyChanging("EMailSender", this._eMailSender);
                    this._eMailSender = value;
                    this.OnPropertyChanged("EMailSender");
                }
            }
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
        public override string Title
        {
            get
            {
                throw new System.InvalidOperationException("Field Title was removed from content type Message.");
            }
            set
            {
                throw new System.InvalidOperationException("Field Title was removed from content type Message.");
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MyEditor", Storage = "_modifiedById", ReadOnly = true, FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ModifiedById
        {
            get
            {
                return this._modifiedById;
            }
            set
            {
                if ((value != this._modifiedById))
                {
                    this.OnPropertyChanging("ModifiedById", this._modifiedById);
                    this._modifiedById = value;
                    this.OnPropertyChanged("ModifiedById");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MyEditor", Storage = "_modifiedByNameWithPicture", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string ModifiedByNameWithPicture
        {
            get
            {
                return this._modifiedByNameWithPicture;
            }
            set
            {
                if ((value != this._modifiedByNameWithPicture))
                {
                    this.OnPropertyChanging("ModifiedByNameWithPicture", this._modifiedByNameWithPicture);
                    this._modifiedByNameWithPicture = value;
                    this.OnPropertyChanged("ModifiedByNameWithPicture");
                }
            }
        }
    }

    /// <summary>
    /// Create a new wiki page.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Wiki Page", Id = "0x010108")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(SitePagesWikiPage))]
    public partial class WikiPage : Document
    {

        private string _wikiContent;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public WikiPage()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "WikiField", Storage = "_wikiContent", FieldType = "Note")]
        public string WikiContent
        {
            get
            {
                return this._wikiContent;
            }
            set
            {
                if ((value != this._wikiContent))
                {
                    this.OnPropertyChanging("WikiContent", this._wikiContent);
                    this._wikiContent = value;
                    this.OnPropertyChanged("WikiContent");
                }
            }
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
        public override string Title
        {
            get
            {
                throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
            }
            set
            {
                throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
            }
        }
    }

    /// <summary>
    /// Group and describe related tasks that you or your team needs to complete.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Summary Task", Id = "0x012004")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(TasksSummaryTask))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(VFSAppraisalTasksSummaryTask))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(WorkflowTasksSummaryTask))]
    public partial class SummaryTask : Folder
    {

        private System.Nullable<double> _complete;

        private string _body;

        private System.Nullable<System.DateTime> _startDate;

        protected System.Nullable<System.DateTime> _dueDate;

        private System.Nullable<Priority> _priority;

        protected System.Nullable<TaskStatus> _taskStatus;

        private System.Nullable<int> _assignedToId;

        private string _assignedTo;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public SummaryTask()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PercentComplete", Storage = "_complete", FieldType = "Number")]
        public System.Nullable<double> Complete
        {
            get
            {
                return this._complete;
            }
            set
            {
                if ((value != this._complete))
                {
                    this.OnPropertyChanging("Complete", this._complete);
                    this._complete = value;
                    this.OnPropertyChanged("Complete");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Body", Storage = "_body", FieldType = "Note")]
        public string Body
        {
            get
            {
                return this._body;
            }
            set
            {
                if ((value != this._body))
                {
                    this.OnPropertyChanging("Body", this._body);
                    this._body = value;
                    this.OnPropertyChanged("Body");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "StartDate", Storage = "_startDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                if ((value != this._startDate))
                {
                    this.OnPropertyChanging("StartDate", this._startDate);
                    this._startDate = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "TaskDueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public virtual System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Priority", Storage = "_priority", FieldType = "Choice")]
        public System.Nullable<Priority> Priority
        {
            get
            {
                return this._priority;
            }
            set
            {
                if ((value != this._priority))
                {
                    this.OnPropertyChanging("Priority", this._priority);
                    this._priority = value;
                    this.OnPropertyChanged("Priority");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "TaskStatus", Storage = "_taskStatus", FieldType = "Choice")]
        public virtual System.Nullable<TaskStatus> TaskStatus
        {
            get
            {
                return this._taskStatus;
            }
            set
            {
                if ((value != this._taskStatus))
                {
                    this.OnPropertyChanging("TaskStatus", this._taskStatus);
                    this._taskStatus = value;
                    this.OnPropertyChanged("TaskStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "AssignedTo", Storage = "_assignedToId", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> AssignedToId
        {
            get
            {
                return this._assignedToId;
            }
            set
            {
                if ((value != this._assignedToId))
                {
                    this.OnPropertyChanging("AssignedToId", this._assignedToId);
                    this._assignedToId = value;
                    this.OnPropertyChanged("AssignedToId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "AssignedTo", Storage = "_assignedTo", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string AssignedTo
        {
            get
            {
                return this._assignedTo;
            }
            set
            {
                if ((value != this._assignedTo))
                {
                    this.OnPropertyChanging("AssignedTo", this._assignedTo);
                    this._assignedTo = value;
                    this.OnPropertyChanged("AssignedTo");
                }
            }
        }
    }

    /// <summary>
    /// Create a new discussion topic.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Discussion", Id = "0x012002")]
    public partial class Discussion : Folder
    {

        private string _discussionSubject;

        private string _version0;

        private string _body;

        private string _reply;

        private string _post;

        private string _threading;

        private string _postedBy;

        private System.Nullable<System.DateTime> _lastUpdated;

        private string _eMailSender;

        private System.Nullable<int> _modifiedById;

        private string _modifiedByNameWithPicture;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Discussion()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Title", Storage = "_title", Required = true, FieldType = "Text")]
        public override string Title
        {
            get
            {
                return this._title;
            }
            set
            {
                if ((value != this._title))
                {
                    this.OnPropertyChanging("Title", this._title);
                    this._title = value;
                    this.OnPropertyChanged("Title");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DiscussionTitle", Storage = "_discussionSubject", ReadOnly = true, FieldType = "Computed")]
        public string DiscussionSubject
        {
            get
            {
                return this._discussionSubject;
            }
            set
            {
                if ((value != this._discussionSubject))
                {
                    this.OnPropertyChanging("DiscussionSubject", this._discussionSubject);
                    this._discussionSubject = value;
                    this.OnPropertyChanged("DiscussionSubject");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_UIVersionString", Storage = "_version0", ReadOnly = true, FieldType = "Text")]
        public string Version0
        {
            get
            {
                return this._version0;
            }
            set
            {
                if ((value != this._version0))
                {
                    this.OnPropertyChanging("Version0", this._version0);
                    this._version0 = value;
                    this.OnPropertyChanged("Version0");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Body", Storage = "_body", FieldType = "Note")]
        public string Body
        {
            get
            {
                return this._body;
            }
            set
            {
                if ((value != this._body))
                {
                    this.OnPropertyChanging("Body", this._body);
                    this._body = value;
                    this.OnPropertyChanged("Body");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ReplyNoGif", Storage = "_reply", ReadOnly = true, FieldType = "Computed")]
        public string Reply
        {
            get
            {
                return this._reply;
            }
            set
            {
                if ((value != this._reply))
                {
                    this.OnPropertyChanging("Reply", this._reply);
                    this._reply = value;
                    this.OnPropertyChanged("Reply");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "BodyAndMore", Storage = "_post", ReadOnly = true, FieldType = "Computed")]
        public string Post
        {
            get
            {
                return this._post;
            }
            set
            {
                if ((value != this._post))
                {
                    this.OnPropertyChanging("Post", this._post);
                    this._post = value;
                    this.OnPropertyChanged("Post");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Threading", Storage = "_threading", ReadOnly = true, FieldType = "Computed")]
        public string Threading
        {
            get
            {
                return this._threading;
            }
            set
            {
                if ((value != this._threading))
                {
                    this.OnPropertyChanging("Threading", this._threading);
                    this._threading = value;
                    this.OnPropertyChanged("Threading");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PersonViewMinimal", Storage = "_postedBy", ReadOnly = true, FieldType = "Computed")]
        public string PostedBy
        {
            get
            {
                return this._postedBy;
            }
            set
            {
                if ((value != this._postedBy))
                {
                    this.OnPropertyChanging("PostedBy", this._postedBy);
                    this._postedBy = value;
                    this.OnPropertyChanged("PostedBy");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DiscussionLastUpdated", Storage = "_lastUpdated", ReadOnly = true, FieldType = "DateTime")]
        public System.Nullable<System.DateTime> LastUpdated
        {
            get
            {
                return this._lastUpdated;
            }
            set
            {
                if ((value != this._lastUpdated))
                {
                    this.OnPropertyChanging("LastUpdated", this._lastUpdated);
                    this._lastUpdated = value;
                    this.OnPropertyChanged("LastUpdated");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmailSender", Storage = "_eMailSender", FieldType = "Note")]
        public string EMailSender
        {
            get
            {
                return this._eMailSender;
            }
            set
            {
                if ((value != this._eMailSender))
                {
                    this.OnPropertyChanging("EMailSender", this._eMailSender);
                    this._eMailSender = value;
                    this.OnPropertyChanged("EMailSender");
                }
            }
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
        public override string Name
        {
            get
            {
                throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Discussion.");
            }
            set
            {
                throw new System.InvalidOperationException("Field FileLeafRef was removed from content type Discussion.");
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MyEditor", Storage = "_modifiedById", ReadOnly = true, FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ModifiedById
        {
            get
            {
                return this._modifiedById;
            }
            set
            {
                if ((value != this._modifiedById))
                {
                    this.OnPropertyChanging("ModifiedById", this._modifiedById);
                    this._modifiedById = value;
                    this.OnPropertyChanged("ModifiedById");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MyEditor", Storage = "_modifiedByNameWithPicture", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string ModifiedByNameWithPicture
        {
            get
            {
                return this._modifiedByNameWithPicture;
            }
            set
            {
                if ((value != this._modifiedByNameWithPicture))
                {
                    this.OnPropertyChanging("ModifiedByNameWithPicture", this._modifiedByNameWithPicture);
                    this._modifiedByNameWithPicture = value;
                    this.OnPropertyChanged("ModifiedByNameWithPicture");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Competencies")]
    public partial class AppraisalCompetenciesItem : Item
    {

        private System.Nullable<double> _appraisalId;

        private string _appraisalPhase;

        private System.Nullable<double> _appraisalPhaseId;

        private string _appraiseeLatestComments;

        private string _appraiserLatestComments;

        private string _competency;

        private string _description;

        private string _expectedResult;

        private string _rating;

        private string _reviewerLatestComments;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalCompetenciesItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalId", Storage = "_appraisalId", FieldType = "Number")]
        public System.Nullable<double> AppraisalId
        {
            get
            {
                return this._appraisalId;
            }
            set
            {
                if ((value != this._appraisalId))
                {
                    this.OnPropertyChanging("AppraisalId", this._appraisalId);
                    this._appraisalId = value;
                    this.OnPropertyChanged("AppraisalId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalPhaseId", Storage = "_appraisalPhaseId", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseId
        {
            get
            {
                return this._appraisalPhaseId;
            }
            set
            {
                if ((value != this._appraisalPhaseId))
                {
                    this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
                    this._appraisalPhaseId = value;
                    this.OnPropertyChanged("AppraisalPhaseId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraiseeLatestComments", Storage = "_appraiseeLatestComments", FieldType = "Note")]
        public string AppraiseeLatestComments
        {
            get
            {
                return this._appraiseeLatestComments;
            }
            set
            {
                if ((value != this._appraiseeLatestComments))
                {
                    this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
                    this._appraiseeLatestComments = value;
                    this.OnPropertyChanged("AppraiseeLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraiserLatestComments", Storage = "_appraiserLatestComments", FieldType = "Note")]
        public string AppraiserLatestComments
        {
            get
            {
                return this._appraiserLatestComments;
            }
            set
            {
                if ((value != this._appraiserLatestComments))
                {
                    this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
                    this._appraiserLatestComments = value;
                    this.OnPropertyChanged("AppraiserLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptCompetency", Storage = "_competency", FieldType = "Text")]
        public string Competency
        {
            get
            {
                return this._competency;
            }
            set
            {
                if ((value != this._competency))
                {
                    this.OnPropertyChanging("Competency", this._competency);
                    this._competency = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptDescription", Storage = "_description", FieldType = "Note")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptExpectedResult", Storage = "_expectedResult", FieldType = "Text")]
        public string ExpectedResult
        {
            get
            {
                return this._expectedResult;
            }
            set
            {
                if ((value != this._expectedResult))
                {
                    this.OnPropertyChanging("ExpectedResult", this._expectedResult);
                    this._expectedResult = value;
                    this.OnPropertyChanged("ExpectedResult");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptRating", Storage = "_rating", FieldType = "Text")]
        public string Rating
        {
            get
            {
                return this._rating;
            }
            set
            {
                if ((value != this._rating))
                {
                    this.OnPropertyChanging("Rating", this._rating);
                    this._rating = value;
                    this.OnPropertyChanged("Rating");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptReviewerLatestComments", Storage = "_reviewerLatestComments", FieldType = "Note")]
        public string ReviewerLatestComments
        {
            get
            {
                return this._reviewerLatestComments;
            }
            set
            {
                if ((value != this._reviewerLatestComments))
                {
                    this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
                    this._reviewerLatestComments = value;
                    this.OnPropertyChanged("ReviewerLatestComments");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Competencies Draft")]
    public partial class AppraisalCompetenciesDraftItem : Item
    {

        private System.Nullable<double> _appraisalId;

        private string _appraisalPhase;

        private System.Nullable<double> _appraisalPhaseId;

        private string _appraiseeLatestComments;

        private string _appraiserLatestComments;

        private string _competency;

        private string _description;

        private string _expectedResult;

        private string _rating;

        private string _reviewerLatestComments;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalCompetenciesDraftItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalId", Storage = "_appraisalId", FieldType = "Number")]
        public System.Nullable<double> AppraisalId
        {
            get
            {
                return this._appraisalId;
            }
            set
            {
                if ((value != this._appraisalId))
                {
                    this.OnPropertyChanging("AppraisalId", this._appraisalId);
                    this._appraisalId = value;
                    this.OnPropertyChanged("AppraisalId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalPhaseId", Storage = "_appraisalPhaseId", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseId
        {
            get
            {
                return this._appraisalPhaseId;
            }
            set
            {
                if ((value != this._appraisalPhaseId))
                {
                    this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
                    this._appraisalPhaseId = value;
                    this.OnPropertyChanged("AppraisalPhaseId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraiseeLatestComments", Storage = "_appraiseeLatestComments", FieldType = "Note")]
        public string AppraiseeLatestComments
        {
            get
            {
                return this._appraiseeLatestComments;
            }
            set
            {
                if ((value != this._appraiseeLatestComments))
                {
                    this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
                    this._appraiseeLatestComments = value;
                    this.OnPropertyChanged("AppraiseeLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraiserLatestComments", Storage = "_appraiserLatestComments", FieldType = "Note")]
        public string AppraiserLatestComments
        {
            get
            {
                return this._appraiserLatestComments;
            }
            set
            {
                if ((value != this._appraiserLatestComments))
                {
                    this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
                    this._appraiserLatestComments = value;
                    this.OnPropertyChanged("AppraiserLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptCompetency", Storage = "_competency", FieldType = "Text")]
        public string Competency
        {
            get
            {
                return this._competency;
            }
            set
            {
                if ((value != this._competency))
                {
                    this.OnPropertyChanging("Competency", this._competency);
                    this._competency = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptDescription", Storage = "_description", FieldType = "Note")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptExpectedResult", Storage = "_expectedResult", FieldType = "Text")]
        public string ExpectedResult
        {
            get
            {
                return this._expectedResult;
            }
            set
            {
                if ((value != this._expectedResult))
                {
                    this.OnPropertyChanging("ExpectedResult", this._expectedResult);
                    this._expectedResult = value;
                    this.OnPropertyChanged("ExpectedResult");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptRating", Storage = "_rating", FieldType = "Text")]
        public string Rating
        {
            get
            {
                return this._rating;
            }
            set
            {
                if ((value != this._rating))
                {
                    this.OnPropertyChanging("Rating", this._rating);
                    this._rating = value;
                    this.OnPropertyChanged("Rating");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptReviewerLatestComments", Storage = "_reviewerLatestComments", FieldType = "Note")]
        public string ReviewerLatestComments
        {
            get
            {
                return this._reviewerLatestComments;
            }
            set
            {
                if ((value != this._reviewerLatestComments))
                {
                    this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
                    this._reviewerLatestComments = value;
                    this.OnPropertyChanged("ReviewerLatestComments");
                }
            }
        }
    }

    /// <summary>
    /// AppraisalCompetencies
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_AppraisalCompetenciesCType", Id = "0x010018BF1303EB7C450983168B55E8101842")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalCompetenciesDraftVFS_AppraisalCompetenciesCType))]
    public partial class VFS_AppraisalCompetenciesCType : Item
    {

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFS_AppraisalCompetenciesCType()
        {
            this.OnCreated();
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Development Measures")]
    public partial class AppraisalDevelopmentMeasuresItem : Item
    {

        private string _appraisal;

        private System.Nullable<double> _appraisalID;

        private System.Nullable<double> _appraisalPhaseID;

        private string _h1AppraiseeComments;

        private string _h1AppraiserComments;

        private string _h2AppraiseeComments;

        private string _h2AppraiserComments;

        private string _nextSteps;

        private string _what;

        private string _when;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalDevelopmentMeasuresItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisal", Storage = "_appraisal", FieldType = "Text")]
        public string Appraisal
        {
            get
            {
                return this._appraisal;
            }
            set
            {
                if ((value != this._appraisal))
                {
                    this.OnPropertyChanging("Appraisal", this._appraisal);
                    this._appraisal = value;
                    this.OnPropertyChanged("Appraisal");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisalID", Storage = "_appraisalID", FieldType = "Number")]
        public System.Nullable<double> AppraisalID
        {
            get
            {
                return this._appraisalID;
            }
            set
            {
                if ((value != this._appraisalID))
                {
                    this.OnPropertyChanging("AppraisalID", this._appraisalID);
                    this._appraisalID = value;
                    this.OnPropertyChanged("AppraisalID");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisalPhaseID", Storage = "_appraisalPhaseID", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseID
        {
            get
            {
                return this._appraisalPhaseID;
            }
            set
            {
                if ((value != this._appraisalPhaseID))
                {
                    this.OnPropertyChanging("AppraisalPhaseID", this._appraisalPhaseID);
                    this._appraisalPhaseID = value;
                    this.OnPropertyChanged("AppraisalPhaseID");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH1AppraiseeComments", Storage = "_h1AppraiseeComments", FieldType = "Note")]
        public string H1AppraiseeComments
        {
            get
            {
                return this._h1AppraiseeComments;
            }
            set
            {
                if ((value != this._h1AppraiseeComments))
                {
                    this.OnPropertyChanging("H1AppraiseeComments", this._h1AppraiseeComments);
                    this._h1AppraiseeComments = value;
                    this.OnPropertyChanged("H1AppraiseeComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH1AppraiserComments", Storage = "_h1AppraiserComments", FieldType = "Note")]
        public string H1AppraiserComments
        {
            get
            {
                return this._h1AppraiserComments;
            }
            set
            {
                if ((value != this._h1AppraiserComments))
                {
                    this.OnPropertyChanging("H1AppraiserComments", this._h1AppraiserComments);
                    this._h1AppraiserComments = value;
                    this.OnPropertyChanged("H1AppraiserComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH2AppraiseeComments", Storage = "_h2AppraiseeComments", FieldType = "Note")]
        public string H2AppraiseeComments
        {
            get
            {
                return this._h2AppraiseeComments;
            }
            set
            {
                if ((value != this._h2AppraiseeComments))
                {
                    this.OnPropertyChanging("H2AppraiseeComments", this._h2AppraiseeComments);
                    this._h2AppraiseeComments = value;
                    this.OnPropertyChanged("H2AppraiseeComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH2AppraiserComments", Storage = "_h2AppraiserComments", FieldType = "Note")]
        public string H2AppraiserComments
        {
            get
            {
                return this._h2AppraiserComments;
            }
            set
            {
                if ((value != this._h2AppraiserComments))
                {
                    this.OnPropertyChanging("H2AppraiserComments", this._h2AppraiserComments);
                    this._h2AppraiserComments = value;
                    this.OnPropertyChanged("H2AppraiserComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpNextSteps", Storage = "_nextSteps", FieldType = "Note")]
        public string NextSteps
        {
            get
            {
                return this._nextSteps;
            }
            set
            {
                if ((value != this._nextSteps))
                {
                    this.OnPropertyChanging("NextSteps", this._nextSteps);
                    this._nextSteps = value;
                    this.OnPropertyChanged("NextSteps");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpWhat", Storage = "_what", FieldType = "Note")]
        public string What
        {
            get
            {
                return this._what;
            }
            set
            {
                if ((value != this._what))
                {
                    this.OnPropertyChanging("What", this._what);
                    this._what = value;
                    this.OnPropertyChanged("What");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpWhen", Storage = "_when", FieldType = "Text")]
        public string When
        {
            get
            {
                return this._when;
            }
            set
            {
                if ((value != this._when))
                {
                    this.OnPropertyChanging("When", this._when);
                    this._when = value;
                    this.OnPropertyChanged("When");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Development Measures Draft")]
    public partial class AppraisalDevelopmentMeasuresDraftItem : Item
    {

        private string _appraisal;

        private System.Nullable<double> _appraisalID;

        private System.Nullable<double> _appraisalPhaseID;

        private string _h1AppraiseeComments;

        private string _h1AppraiserComments;

        private string _h2AppraiseeComments;

        private string _h2AppraiserComments;

        private string _nextSteps;

        private string _what;

        private string _when;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalDevelopmentMeasuresDraftItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisal", Storage = "_appraisal", FieldType = "Text")]
        public string Appraisal
        {
            get
            {
                return this._appraisal;
            }
            set
            {
                if ((value != this._appraisal))
                {
                    this.OnPropertyChanging("Appraisal", this._appraisal);
                    this._appraisal = value;
                    this.OnPropertyChanged("Appraisal");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisalID", Storage = "_appraisalID", FieldType = "Number")]
        public System.Nullable<double> AppraisalID
        {
            get
            {
                return this._appraisalID;
            }
            set
            {
                if ((value != this._appraisalID))
                {
                    this.OnPropertyChanging("AppraisalID", this._appraisalID);
                    this._appraisalID = value;
                    this.OnPropertyChanged("AppraisalID");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisalPhaseID", Storage = "_appraisalPhaseID", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseID
        {
            get
            {
                return this._appraisalPhaseID;
            }
            set
            {
                if ((value != this._appraisalPhaseID))
                {
                    this.OnPropertyChanging("AppraisalPhaseID", this._appraisalPhaseID);
                    this._appraisalPhaseID = value;
                    this.OnPropertyChanged("AppraisalPhaseID");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH1AppraiseeComments", Storage = "_h1AppraiseeComments", FieldType = "Note")]
        public string H1AppraiseeComments
        {
            get
            {
                return this._h1AppraiseeComments;
            }
            set
            {
                if ((value != this._h1AppraiseeComments))
                {
                    this.OnPropertyChanging("H1AppraiseeComments", this._h1AppraiseeComments);
                    this._h1AppraiseeComments = value;
                    this.OnPropertyChanged("H1AppraiseeComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH1AppraiserComments", Storage = "_h1AppraiserComments", FieldType = "Note")]
        public string H1AppraiserComments
        {
            get
            {
                return this._h1AppraiserComments;
            }
            set
            {
                if ((value != this._h1AppraiserComments))
                {
                    this.OnPropertyChanging("H1AppraiserComments", this._h1AppraiserComments);
                    this._h1AppraiserComments = value;
                    this.OnPropertyChanged("H1AppraiserComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH2AppraiseeComments", Storage = "_h2AppraiseeComments", FieldType = "Note")]
        public string H2AppraiseeComments
        {
            get
            {
                return this._h2AppraiseeComments;
            }
            set
            {
                if ((value != this._h2AppraiseeComments))
                {
                    this.OnPropertyChanging("H2AppraiseeComments", this._h2AppraiseeComments);
                    this._h2AppraiseeComments = value;
                    this.OnPropertyChanged("H2AppraiseeComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH2AppraiserComments", Storage = "_h2AppraiserComments", FieldType = "Note")]
        public string H2AppraiserComments
        {
            get
            {
                return this._h2AppraiserComments;
            }
            set
            {
                if ((value != this._h2AppraiserComments))
                {
                    this.OnPropertyChanging("H2AppraiserComments", this._h2AppraiserComments);
                    this._h2AppraiserComments = value;
                    this.OnPropertyChanged("H2AppraiserComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpNextSteps", Storage = "_nextSteps", FieldType = "Note")]
        public string NextSteps
        {
            get
            {
                return this._nextSteps;
            }
            set
            {
                if ((value != this._nextSteps))
                {
                    this.OnPropertyChanging("NextSteps", this._nextSteps);
                    this._nextSteps = value;
                    this.OnPropertyChanged("NextSteps");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpWhat", Storage = "_what", FieldType = "Note")]
        public string What
        {
            get
            {
                return this._what;
            }
            set
            {
                if ((value != this._what))
                {
                    this.OnPropertyChanging("What", this._what);
                    this._what = value;
                    this.OnPropertyChanged("What");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpWhen", Storage = "_when", FieldType = "Text")]
        public string When
        {
            get
            {
                return this._when;
            }
            set
            {
                if ((value != this._when))
                {
                    this.OnPropertyChanging("When", this._when);
                    this._when = value;
                    this.OnPropertyChanged("When");
                }
            }
        }
    }

    /// <summary>
    /// My Content Type
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_PDPContentType - PDPContenttype", Id = "0x0100F99ED09E859C418A890E993D14635E46")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(AppraisalDevelopmentMeasuresDraftVFS_PDPContentTypePDPContenttype))]
    public partial class VFS_PDPContentTypePDPContenttype : Item
    {

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFS_PDPContentTypePDPContenttype()
        {
            this.OnCreated();
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Goals")]
    public partial class AppraisalGoalsItem : Item
    {

        private System.Nullable<double> _appraisalPhase;

        private System.Nullable<double> _appraisalId;

        private string _appraiseeLatestComments;

        private string _appraiserLatestComments;

        private System.Nullable<System.DateTime> _dueDate;

        private System.Nullable<double> _evaluation;

        private string _goal;

        private string _goalCategory;

        private string _goalDescription;

        private string _isMandatory;

        private string _reviewerLatestComments;

        private System.Nullable<double> _score;

        private System.Nullable<double> _weightage;

        private string _isMandatory0;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalGoalsItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraisalPhaseID", Storage = "_appraisalPhase", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraisalId", Storage = "_appraisalId", FieldType = "Number")]
        public System.Nullable<double> AppraisalId
        {
            get
            {
                return this._appraisalId;
            }
            set
            {
                if ((value != this._appraisalId))
                {
                    this.OnPropertyChanging("AppraisalId", this._appraisalId);
                    this._appraisalId = value;
                    this.OnPropertyChanged("AppraisalId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraiseeLatestComments", Storage = "_appraiseeLatestComments", FieldType = "Note")]
        public string AppraiseeLatestComments
        {
            get
            {
                return this._appraiseeLatestComments;
            }
            set
            {
                if ((value != this._appraiseeLatestComments))
                {
                    this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
                    this._appraiseeLatestComments = value;
                    this.OnPropertyChanged("AppraiseeLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraiserLatestComments", Storage = "_appraiserLatestComments", FieldType = "Note")]
        public string AppraiserLatestComments
        {
            get
            {
                return this._appraiserLatestComments;
            }
            set
            {
                if ((value != this._appraiserLatestComments))
                {
                    this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
                    this._appraiserLatestComments = value;
                    this.OnPropertyChanged("AppraiserLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agDueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agEvaluation", Storage = "_evaluation", FieldType = "Number")]
        public System.Nullable<double> Evaluation
        {
            get
            {
                return this._evaluation;
            }
            set
            {
                if ((value != this._evaluation))
                {
                    this.OnPropertyChanging("Evaluation", this._evaluation);
                    this._evaluation = value;
                    this.OnPropertyChanged("Evaluation");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoal", Storage = "_goal", FieldType = "Note")]
        public string Goal
        {
            get
            {
                return this._goal;
            }
            set
            {
                if ((value != this._goal))
                {
                    this.OnPropertyChanging("Goal", this._goal);
                    this._goal = value;
                    this.OnPropertyChanged("Goal");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoalCategory", Storage = "_goalCategory", FieldType = "Text")]
        public string GoalCategory
        {
            get
            {
                return this._goalCategory;
            }
            set
            {
                if ((value != this._goalCategory))
                {
                    this.OnPropertyChanging("GoalCategory", this._goalCategory);
                    this._goalCategory = value;
                    this.OnPropertyChanged("GoalCategory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoalDescription", Storage = "_goalDescription", FieldType = "Note")]
        public string GoalDescription
        {
            get
            {
                return this._goalDescription;
            }
            set
            {
                if ((value != this._goalDescription))
                {
                    this.OnPropertyChanging("GoalDescription", this._goalDescription);
                    this._goalDescription = value;
                    this.OnPropertyChanged("GoalDescription");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agIsMandatory", Storage = "_isMandatory", FieldType = "Text")]
        public string IsMandatory
        {
            get
            {
                return this._isMandatory;
            }
            set
            {
                if ((value != this._isMandatory))
                {
                    this.OnPropertyChanging("IsMandatory", this._isMandatory);
                    this._isMandatory = value;
                    this.OnPropertyChanged("IsMandatory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agReviewerLatestComments", Storage = "_reviewerLatestComments", FieldType = "Note")]
        public string ReviewerLatestComments
        {
            get
            {
                return this._reviewerLatestComments;
            }
            set
            {
                if ((value != this._reviewerLatestComments))
                {
                    this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
                    this._reviewerLatestComments = value;
                    this.OnPropertyChanged("ReviewerLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agScore", Storage = "_score", FieldType = "Number")]
        public System.Nullable<double> Score
        {
            get
            {
                return this._score;
            }
            set
            {
                if ((value != this._score))
                {
                    this.OnPropertyChanging("Score", this._score);
                    this._score = value;
                    this.OnPropertyChanged("Score");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agWeightage", Storage = "_weightage", FieldType = "Number")]
        public System.Nullable<double> Weightage
        {
            get
            {
                return this._weightage;
            }
            set
            {
                if ((value != this._weightage))
                {
                    this.OnPropertyChanging("Weightage", this._weightage);
                    this._weightage = value;
                    this.OnPropertyChanged("Weightage");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "IsMandatory", Storage = "_isMandatory0", FieldType = "Text")]
        public string IsMandatory0
        {
            get
            {
                return this._isMandatory0;
            }
            set
            {
                if ((value != this._isMandatory0))
                {
                    this.OnPropertyChanging("IsMandatory0", this._isMandatory0);
                    this._isMandatory0 = value;
                    this.OnPropertyChanged("IsMandatory0");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Goals Draft")]
    public partial class AppraisalGoalsDraftItem : Item
    {

        private string _appraisalPhase;

        private System.Nullable<double> _appraisalPhaseId;

        private System.Nullable<double> _appraisalId;

        private string _appraiseeLatestComments;

        private string _appraiserLatestComments;

        private System.Nullable<System.DateTime> _dueDate;

        private System.Nullable<double> _evaluation;

        private string _goal;

        private string _goalCategory;

        private string _goalDescription;

        private string _isMandatory;

        private string _reviewerLatestComments;

        private System.Nullable<double> _score;

        private System.Nullable<double> _weightage;

        private string _isMandatory0;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalGoalsDraftItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraisalPhaseID", Storage = "_appraisalPhaseId", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseId
        {
            get
            {
                return this._appraisalPhaseId;
            }
            set
            {
                if ((value != this._appraisalPhaseId))
                {
                    this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
                    this._appraisalPhaseId = value;
                    this.OnPropertyChanged("AppraisalPhaseId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraisalId", Storage = "_appraisalId", FieldType = "Number")]
        public System.Nullable<double> AppraisalId
        {
            get
            {
                return this._appraisalId;
            }
            set
            {
                if ((value != this._appraisalId))
                {
                    this.OnPropertyChanging("AppraisalId", this._appraisalId);
                    this._appraisalId = value;
                    this.OnPropertyChanged("AppraisalId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraiseeLatestComments", Storage = "_appraiseeLatestComments", FieldType = "Note")]
        public string AppraiseeLatestComments
        {
            get
            {
                return this._appraiseeLatestComments;
            }
            set
            {
                if ((value != this._appraiseeLatestComments))
                {
                    this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
                    this._appraiseeLatestComments = value;
                    this.OnPropertyChanged("AppraiseeLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraiserLatestComments", Storage = "_appraiserLatestComments", FieldType = "Note")]
        public string AppraiserLatestComments
        {
            get
            {
                return this._appraiserLatestComments;
            }
            set
            {
                if ((value != this._appraiserLatestComments))
                {
                    this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
                    this._appraiserLatestComments = value;
                    this.OnPropertyChanged("AppraiserLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agDueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agEvaluation", Storage = "_evaluation", FieldType = "Number")]
        public System.Nullable<double> Evaluation
        {
            get
            {
                return this._evaluation;
            }
            set
            {
                if ((value != this._evaluation))
                {
                    this.OnPropertyChanging("Evaluation", this._evaluation);
                    this._evaluation = value;
                    this.OnPropertyChanged("Evaluation");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoal", Storage = "_goal", FieldType = "Note")]
        public string Goal
        {
            get
            {
                return this._goal;
            }
            set
            {
                if ((value != this._goal))
                {
                    this.OnPropertyChanging("Goal", this._goal);
                    this._goal = value;
                    this.OnPropertyChanged("Goal");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoalCategory", Storage = "_goalCategory", FieldType = "Text")]
        public string GoalCategory
        {
            get
            {
                return this._goalCategory;
            }
            set
            {
                if ((value != this._goalCategory))
                {
                    this.OnPropertyChanging("GoalCategory", this._goalCategory);
                    this._goalCategory = value;
                    this.OnPropertyChanged("GoalCategory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoalDescription", Storage = "_goalDescription", FieldType = "Note")]
        public string GoalDescription
        {
            get
            {
                return this._goalDescription;
            }
            set
            {
                if ((value != this._goalDescription))
                {
                    this.OnPropertyChanging("GoalDescription", this._goalDescription);
                    this._goalDescription = value;
                    this.OnPropertyChanged("GoalDescription");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agIsMandatory", Storage = "_isMandatory", FieldType = "Text")]
        public string IsMandatory
        {
            get
            {
                return this._isMandatory;
            }
            set
            {
                if ((value != this._isMandatory))
                {
                    this.OnPropertyChanging("IsMandatory", this._isMandatory);
                    this._isMandatory = value;
                    this.OnPropertyChanged("IsMandatory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agReviewerLatestComments", Storage = "_reviewerLatestComments", FieldType = "Note")]
        public string ReviewerLatestComments
        {
            get
            {
                return this._reviewerLatestComments;
            }
            set
            {
                if ((value != this._reviewerLatestComments))
                {
                    this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
                    this._reviewerLatestComments = value;
                    this.OnPropertyChanged("ReviewerLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agScore", Storage = "_score", FieldType = "Number")]
        public System.Nullable<double> Score
        {
            get
            {
                return this._score;
            }
            set
            {
                if ((value != this._score))
                {
                    this.OnPropertyChanging("Score", this._score);
                    this._score = value;
                    this.OnPropertyChanged("Score");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agWeightage", Storage = "_weightage", FieldType = "Number")]
        public System.Nullable<double> Weightage
        {
            get
            {
                return this._weightage;
            }
            set
            {
                if ((value != this._weightage))
                {
                    this.OnPropertyChanging("Weightage", this._weightage);
                    this._weightage = value;
                    this.OnPropertyChanged("Weightage");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "IsMandatory", Storage = "_isMandatory0", FieldType = "Text")]
        public string IsMandatory0
        {
            get
            {
                return this._isMandatory0;
            }
            set
            {
                if ((value != this._isMandatory0))
                {
                    this.OnPropertyChanging("IsMandatory0", this._isMandatory0);
                    this._isMandatory0 = value;
                    this.OnPropertyChanged("IsMandatory0");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Lock Audit")]
    public partial class AppraisalLockAuditItem : Item
    {

        private System.Nullable<bool> _locked;

        private System.Nullable<System.DateTime> _actionDate;

        private string _comments;

        private System.Nullable<int> _appraisalCycleId;

        private string _appraisalCyclePerformance_x0020_Cycle;

        private System.Nullable<int> _actionById;

        private string _actionByEmployee_x0020_Code;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalLockAuditItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Locked", Storage = "_locked", FieldType = "Boolean")]
        public System.Nullable<bool> Locked
        {
            get
            {
                return this._locked;
            }
            set
            {
                if ((value != this._locked))
                {
                    this.OnPropertyChanging("Locked", this._locked);
                    this._locked = value;
                    this.OnPropertyChanged("Locked");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Action_x0020_Date", Storage = "_actionDate", Required = true, FieldType = "DateTime")]
        public System.Nullable<System.DateTime> ActionDate
        {
            get
            {
                return this._actionDate;
            }
            set
            {
                if ((value != this._actionDate))
                {
                    this.OnPropertyChanging("ActionDate", this._actionDate);
                    this._actionDate = value;
                    this.OnPropertyChanged("ActionDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Appraisal_x0020_Cycle", Storage = "_appraisalCycleId", FieldType = "Lookup", IsLookupId = true)]
        public System.Nullable<int> AppraisalCycleId
        {
            get
            {
                return this._appraisalCycleId;
            }
            set
            {
                if ((value != this._appraisalCycleId))
                {
                    this.OnPropertyChanging("AppraisalCycleId", this._appraisalCycleId);
                    this._appraisalCycleId = value;
                    this.OnPropertyChanged("AppraisalCycleId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Appraisal_x0020_Cycle", Storage = "_appraisalCyclePerformance_x0020_Cycle", ReadOnly = true, FieldType = "Lookup", IsLookupValue = true)]
        public string AppraisalCyclePerformance_x0020_Cycle
        {
            get
            {
                return this._appraisalCyclePerformance_x0020_Cycle;
            }
            set
            {
                if ((value != this._appraisalCyclePerformance_x0020_Cycle))
                {
                    this.OnPropertyChanging("AppraisalCyclePerformance_x0020_Cycle", this._appraisalCyclePerformance_x0020_Cycle);
                    this._appraisalCyclePerformance_x0020_Cycle = value;
                    this.OnPropertyChanged("AppraisalCyclePerformance_x0020_Cycle");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Action_x0020_By", Storage = "_actionById", FieldType = "Lookup", IsLookupId = true)]
        public System.Nullable<int> ActionById
        {
            get
            {
                return this._actionById;
            }
            set
            {
                if ((value != this._actionById))
                {
                    this.OnPropertyChanging("ActionById", this._actionById);
                    this._actionById = value;
                    this.OnPropertyChanged("ActionById");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Action_x0020_By", Storage = "_actionByEmployee_x0020_Code", ReadOnly = true, FieldType = "Lookup", IsLookupValue = true)]
        public string ActionByEmployee_x0020_Code
        {
            get
            {
                return this._actionByEmployee_x0020_Code;
            }
            set
            {
                if ((value != this._actionByEmployee_x0020_Code))
                {
                    this.OnPropertyChanging("ActionByEmployee_x0020_Code", this._actionByEmployee_x0020_Code);
                    this._actionByEmployee_x0020_Code = value;
                    this.OnPropertyChanged("ActionByEmployee_x0020_Code");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Phases")]
    public partial class AppraisalPhasesItem : Item
    {

        private System.Nullable<double> _appraisal;

        private string _appraisalPhase;

        private string _hRReviewLatestComments;

        private System.Nullable<double> _score;

        private string _signOffOnBehalfComments;

        private System.Nullable<double> _signedOffOnBehalf;

        private System.Nullable<HRReview> _hRReview;

        private System.Nullable<IsAppealed> _isAppealed;

        private System.Nullable<IsPIP> _isPIP;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalPhasesItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphAppraisalId", Storage = "_appraisal", FieldType = "Number")]
        public System.Nullable<double> Appraisal
        {
            get
            {
                return this._appraisal;
            }
            set
            {
                if ((value != this._appraisal))
                {
                    this.OnPropertyChanging("Appraisal", this._appraisal);
                    this._appraisal = value;
                    this.OnPropertyChanged("Appraisal");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphHRReviewLatestComments", Storage = "_hRReviewLatestComments", FieldType = "Note")]
        public string HRReviewLatestComments
        {
            get
            {
                return this._hRReviewLatestComments;
            }
            set
            {
                if ((value != this._hRReviewLatestComments))
                {
                    this.OnPropertyChanging("HRReviewLatestComments", this._hRReviewLatestComments);
                    this._hRReviewLatestComments = value;
                    this.OnPropertyChanged("HRReviewLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphScore", Storage = "_score", FieldType = "Number")]
        public System.Nullable<double> Score
        {
            get
            {
                return this._score;
            }
            set
            {
                if ((value != this._score))
                {
                    this.OnPropertyChanging("Score", this._score);
                    this._score = value;
                    this.OnPropertyChanged("Score");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphSignoffonbehalfcomments", Storage = "_signOffOnBehalfComments", FieldType = "Note")]
        public string SignOffOnBehalfComments
        {
            get
            {
                return this._signOffOnBehalfComments;
            }
            set
            {
                if ((value != this._signOffOnBehalfComments))
                {
                    this.OnPropertyChanging("SignOffOnBehalfComments", this._signOffOnBehalfComments);
                    this._signOffOnBehalfComments = value;
                    this.OnPropertyChanged("SignOffOnBehalfComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphSignedoffonBehalf", Storage = "_signedOffOnBehalf", FieldType = "Number")]
        public System.Nullable<double> SignedOffOnBehalf
        {
            get
            {
                return this._signedOffOnBehalf;
            }
            set
            {
                if ((value != this._signedOffOnBehalf))
                {
                    this.OnPropertyChanging("SignedOffOnBehalf", this._signedOffOnBehalf);
                    this._signedOffOnBehalf = value;
                    this.OnPropertyChanged("SignedOffOnBehalf");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphHRReview", Storage = "_hRReview", FieldType = "Choice")]
        public System.Nullable<HRReview> HRReview
        {
            get
            {
                return this._hRReview;
            }
            set
            {
                if ((value != this._hRReview))
                {
                    this.OnPropertyChanging("HRReview", this._hRReview);
                    this._hRReview = value;
                    this.OnPropertyChanged("HRReview");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphIsAppealed", Storage = "_isAppealed", FieldType = "Choice")]
        public System.Nullable<IsAppealed> IsAppealed
        {
            get
            {
                return this._isAppealed;
            }
            set
            {
                if ((value != this._isAppealed))
                {
                    this.OnPropertyChanging("IsAppealed", this._isAppealed);
                    this._isAppealed = value;
                    this.OnPropertyChanged("IsAppealed");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "aphIsPIP", Storage = "_isPIP", FieldType = "Choice")]
        public System.Nullable<IsPIP> IsPIP
        {
            get
            {
                return this._isPIP;
            }
            set
            {
                if ((value != this._isPIP))
                {
                    this.OnPropertyChanging("IsPIP", this._isPIP);
                    this._isPIP = value;
                    this.OnPropertyChanged("IsPIP");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Status")]
    public partial class AppraisalStatusItem : Item
    {

        private string _appraisalWorkflowState;

        private string _description;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalStatusItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Appraisal_x0020_Workflow_x0020_S", Storage = "_appraisalWorkflowState", FieldType = "Text")]
        public string AppraisalWorkflowState
        {
            get
            {
                return this._appraisalWorkflowState;
            }
            set
            {
                if ((value != this._appraisalWorkflowState))
                {
                    this.OnPropertyChanging("AppraisalWorkflowState", this._appraisalWorkflowState);
                    this._appraisalWorkflowState = value;
                    this.OnPropertyChanged("AppraisalWorkflowState");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Description", Storage = "_description", FieldType = "Note")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisal Workflow History")]
    public partial class AppraisalWorkflowHistoryItem : Item
    {

        private System.Nullable<double> _appraisal;

        private string _fromStatus;

        private string _toStatus;

        private string _comment;

        private System.Nullable<double> _actor;

        private System.Nullable<System.DateTime> _actionDate;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalWorkflowHistoryItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Appraisal", Storage = "_appraisal", Required = true, FieldType = "Number")]
        public System.Nullable<double> Appraisal
        {
            get
            {
                return this._appraisal;
            }
            set
            {
                if ((value != this._appraisal))
                {
                    this.OnPropertyChanging("Appraisal", this._appraisal);
                    this._appraisal = value;
                    this.OnPropertyChanged("Appraisal");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "From_x0020_Status", Storage = "_fromStatus", Required = true, FieldType = "Text")]
        public string FromStatus
        {
            get
            {
                return this._fromStatus;
            }
            set
            {
                if ((value != this._fromStatus))
                {
                    this.OnPropertyChanging("FromStatus", this._fromStatus);
                    this._fromStatus = value;
                    this.OnPropertyChanged("FromStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "To_x0020_Status", Storage = "_toStatus", Required = true, FieldType = "Text")]
        public string ToStatus
        {
            get
            {
                return this._toStatus;
            }
            set
            {
                if ((value != this._toStatus))
                {
                    this.OnPropertyChanging("ToStatus", this._toStatus);
                    this._toStatus = value;
                    this.OnPropertyChanged("ToStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comment", Storage = "_comment", FieldType = "Note")]
        public string Comment
        {
            get
            {
                return this._comment;
            }
            set
            {
                if ((value != this._comment))
                {
                    this.OnPropertyChanging("Comment", this._comment);
                    this._comment = value;
                    this.OnPropertyChanged("Comment");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Actor", Storage = "_actor", Required = true, FieldType = "Number")]
        public System.Nullable<double> Actor
        {
            get
            {
                return this._actor;
            }
            set
            {
                if ((value != this._actor))
                {
                    this.OnPropertyChanging("Actor", this._actor);
                    this._actor = value;
                    this.OnPropertyChanged("Actor");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Action_x0020_Date", Storage = "_actionDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> ActionDate
        {
            get
            {
                return this._actionDate;
            }
            set
            {
                if ((value != this._actionDate))
                {
                    this.OnPropertyChanging("ActionDate", this._actionDate);
                    this._actionDate = value;
                    this.OnPropertyChanged("ActionDate");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Appraisals")]
    public partial class AppraisalsItem : Item
    {

        private string _appraisalStatus;

        private string _employeeCode;

        private System.Nullable<double> _finalRating;

        private System.Nullable<double> _finalScore;

        private System.Nullable<System.DateTime> _h1AppraisalEvaluationStartDate;

        private System.Nullable<System.DateTime> _h1GoalSettingStartDate;

        private System.Nullable<System.DateTime> _h2AppraisalEvaluationStartDate;

        private System.Nullable<double> _performanceCycle;

        private System.Nullable<int> _vFS_Appraisals;

        private System.Nullable<int> _vFSAppraisalWorkflow;

        private System.Nullable<Deactivated> _deactivated;

        private System.Nullable<IsReview> _isReview;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalsItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appAppraisalStatus", Storage = "_appraisalStatus", FieldType = "Text")]
        public string AppraisalStatus
        {
            get
            {
                return this._appraisalStatus;
            }
            set
            {
                if ((value != this._appraisalStatus))
                {
                    this.OnPropertyChanging("AppraisalStatus", this._appraisalStatus);
                    this._appraisalStatus = value;
                    this.OnPropertyChanged("AppraisalStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appEmployeeCode", Storage = "_employeeCode", FieldType = "Text")]
        public string EmployeeCode
        {
            get
            {
                return this._employeeCode;
            }
            set
            {
                if ((value != this._employeeCode))
                {
                    this.OnPropertyChanging("EmployeeCode", this._employeeCode);
                    this._employeeCode = value;
                    this.OnPropertyChanged("EmployeeCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appFinalRating", Storage = "_finalRating", FieldType = "Number")]
        public System.Nullable<double> FinalRating
        {
            get
            {
                return this._finalRating;
            }
            set
            {
                if ((value != this._finalRating))
                {
                    this.OnPropertyChanging("FinalRating", this._finalRating);
                    this._finalRating = value;
                    this.OnPropertyChanged("FinalRating");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appFinalScore", Storage = "_finalScore", FieldType = "Number")]
        public System.Nullable<double> FinalScore
        {
            get
            {
                return this._finalScore;
            }
            set
            {
                if ((value != this._finalScore))
                {
                    this.OnPropertyChanging("FinalScore", this._finalScore);
                    this._finalScore = value;
                    this.OnPropertyChanged("FinalScore");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appH1AppraisalEvaluationStartDat", Storage = "_h1AppraisalEvaluationStartDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> H1AppraisalEvaluationStartDate
        {
            get
            {
                return this._h1AppraisalEvaluationStartDate;
            }
            set
            {
                if ((value != this._h1AppraisalEvaluationStartDate))
                {
                    this.OnPropertyChanging("H1AppraisalEvaluationStartDate", this._h1AppraisalEvaluationStartDate);
                    this._h1AppraisalEvaluationStartDate = value;
                    this.OnPropertyChanged("H1AppraisalEvaluationStartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appH1GoalSettingStartDate", Storage = "_h1GoalSettingStartDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> H1GoalSettingStartDate
        {
            get
            {
                return this._h1GoalSettingStartDate;
            }
            set
            {
                if ((value != this._h1GoalSettingStartDate))
                {
                    this.OnPropertyChanging("H1GoalSettingStartDate", this._h1GoalSettingStartDate);
                    this._h1GoalSettingStartDate = value;
                    this.OnPropertyChanged("H1GoalSettingStartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appH2AppraisalEvaluationStartDat", Storage = "_h2AppraisalEvaluationStartDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> H2AppraisalEvaluationStartDate
        {
            get
            {
                return this._h2AppraisalEvaluationStartDate;
            }
            set
            {
                if ((value != this._h2AppraisalEvaluationStartDate))
                {
                    this.OnPropertyChanging("H2AppraisalEvaluationStartDate", this._h2AppraisalEvaluationStartDate);
                    this._h2AppraisalEvaluationStartDate = value;
                    this.OnPropertyChanged("H2AppraisalEvaluationStartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appPerformanceCycle", Storage = "_performanceCycle", FieldType = "Number")]
        public System.Nullable<double> PerformanceCycle
        {
            get
            {
                return this._performanceCycle;
            }
            set
            {
                if ((value != this._performanceCycle))
                {
                    this.OnPropertyChanging("PerformanceCycle", this._performanceCycle);
                    this._performanceCycle = value;
                    this.OnPropertyChanged("PerformanceCycle");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "VFSAppra", Storage = "_vFS_Appraisals", ReadOnly = true, FieldType = "WorkflowStatus")]
        public System.Nullable<int> VFS_Appraisals
        {
            get
            {
                return this._vFS_Appraisals;
            }
            set
            {
                if ((value != this._vFS_Appraisals))
                {
                    this.OnPropertyChanging("VFS_Appraisals", this._vFS_Appraisals);
                    this._vFS_Appraisals = value;
                    this.OnPropertyChanged("VFS_Appraisals");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "VFSAppra0", Storage = "_vFSAppraisalWorkflow", ReadOnly = true, FieldType = "WorkflowStatus")]
        public System.Nullable<int> VFSAppraisalWorkflow
        {
            get
            {
                return this._vFSAppraisalWorkflow;
            }
            set
            {
                if ((value != this._vFSAppraisalWorkflow))
                {
                    this.OnPropertyChanging("VFSAppraisalWorkflow", this._vFSAppraisalWorkflow);
                    this._vFSAppraisalWorkflow = value;
                    this.OnPropertyChanged("VFSAppraisalWorkflow");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appDeactivated", Storage = "_deactivated", FieldType = "Choice")]
        public System.Nullable<Deactivated> Deactivated
        {
            get
            {
                return this._deactivated;
            }
            set
            {
                if ((value != this._deactivated))
                {
                    this.OnPropertyChanging("Deactivated", this._deactivated);
                    this._deactivated = value;
                    this.OnPropertyChanged("Deactivated");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "appIsReview", Storage = "_isReview", FieldType = "Choice")]
        public System.Nullable<IsReview> IsReview
        {
            get
            {
                return this._isReview;
            }
            set
            {
                if ((value != this._isReview))
                {
                    this.OnPropertyChanging("IsReview", this._isReview);
                    this._isReview = value;
                    this.OnPropertyChanged("IsReview");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Areas")]
    public partial class AreasItem : Item
    {

        private string _personnelAreaCode;

        private string _personnelAreaText;

        private Microsoft.SharePoint.Linq.EntityRef<CompaniesItem> _companyCode;

        private Microsoft.SharePoint.Linq.EntityRef<RegionsItem> _regionName;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;

        private Microsoft.SharePoint.Linq.EntitySet<SubAreasItem> _subAreasItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AreasItem()
        {
            this._companyCode = new Microsoft.SharePoint.Linq.EntityRef<CompaniesItem>();
            this._companyCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem>>(this.OnCompanyCodeSync);
            this._companyCode.OnChanged += new System.EventHandler(this.OnCompanyCodeChanged);
            this._companyCode.OnChanging += new System.EventHandler(this.OnCompanyCodeChanging);
            this._regionName = new Microsoft.SharePoint.Linq.EntityRef<RegionsItem>();
            this._regionName.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem>>(this.OnRegionNameSync);
            this._regionName.OnChanged += new System.EventHandler(this.OnRegionNameChanged);
            this._regionName.OnChanging += new System.EventHandler(this.OnRegionNameChanging);
            this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
            this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
            this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
            this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
            this._subAreasItem = new Microsoft.SharePoint.Linq.EntitySet<SubAreasItem>();
            this._subAreasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem>>(this.OnSubAreasItemSync);
            this._subAreasItem.OnChanged += new System.EventHandler(this.OnSubAreasItemChanged);
            this._subAreasItem.OnChanging += new System.EventHandler(this.OnSubAreasItemChanging);
            this.OnCreated();
        }

        /// <summary>
        /// Personnel Area Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PersonnelAreaCode", Storage = "_personnelAreaCode", Required = true, FieldType = "Text")]
        public string PersonnelAreaCode
        {
            get
            {
                return this._personnelAreaCode;
            }
            set
            {
                if ((value != this._personnelAreaCode))
                {
                    this.OnPropertyChanging("PersonnelAreaCode", this._personnelAreaCode);
                    this._personnelAreaCode = value;
                    this.OnPropertyChanged("PersonnelAreaCode");
                }
            }
        }

        /// <summary>
        /// Personnel Area Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PersonnelAreaText", Storage = "_personnelAreaText", Required = true, FieldType = "Text")]
        public string PersonnelAreaText
        {
            get
            {
                return this._personnelAreaText;
            }
            set
            {
                if ((value != this._personnelAreaText))
                {
                    this.OnPropertyChanging("PersonnelAreaText", this._personnelAreaText);
                    this._personnelAreaText = value;
                    this.OnPropertyChanged("PersonnelAreaText");
                }
            }
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "CompanyCode", Storage = "_companyCode", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Companies")]
        public CompaniesItem CompanyCode
        {
            get
            {
                return this._companyCode.GetEntity();
            }
            set
            {
                this._companyCode.SetEntity(value);
            }
        }

        /// <summary>
        /// Region Name
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "RegionName", Storage = "_regionName", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Regions")]
        public RegionsItem RegionName
        {
            get
            {
                return this._regionName.GetEntity();
            }
            set
            {
                this._regionName.SetEntity(value);
            }
        }

        /// <summary>
        /// Area Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "AreaCode", Storage = "_employeesMasterItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem
        {
            get
            {
                return this._employeesMasterItem;
            }
            set
            {
                this._employeesMasterItem.Assign(value);
            }
        }

        /// <summary>
        /// Personnel Area Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "PersonnelAreaCode", Storage = "_subAreasItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Sub-Areas")]
        public Microsoft.SharePoint.Linq.EntitySet<SubAreasItem> SubAreasItem
        {
            get
            {
                return this._subAreasItem;
            }
            set
            {
                this._subAreasItem.Assign(value);
            }
        }

        private void OnCompanyCodeChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("CompanyCode", this._companyCode.Clone());
        }

        private void OnCompanyCodeChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("CompanyCode");
        }

        private void OnCompanyCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.AreasItem.Add(this);
            }
            else
            {
                e.Item.AreasItem.Remove(this);
            }
        }

        private void OnRegionNameChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("RegionName", this._regionName.Clone());
        }

        private void OnRegionNameChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("RegionName");
        }

        private void OnRegionNameSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.AreasItem.Add(this);
            }
            else
            {
                e.Item.AreasItem.Remove(this);
            }
        }

        private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
        }

        private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeesMasterItem");
        }

        private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.AreaCode = this;
            }
            else
            {
                e.Item.AreaCode = null;
            }
        }

        private void OnSubAreasItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("SubAreasItem", this._subAreasItem.Clone());
        }

        private void OnSubAreasItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("SubAreasItem");
        }

        private void OnSubAreasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.PersonnelAreaCode = this;
            }
            else
            {
                e.Item.PersonnelAreaCode = null;
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Comments History")]
    public partial class CommentsHistoryItem : Item
    {

        private string _actor;

        private string _comment;

        private string _commentFor;

        private string _commentedDate;

        private System.Nullable<double> _referenceId;

        private string _role;

        private System.Nullable<int> _commentedById;

        private string _commentedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public CommentsHistoryItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "chActor", Storage = "_actor", FieldType = "Text")]
        public string Actor
        {
            get
            {
                return this._actor;
            }
            set
            {
                if ((value != this._actor))
                {
                    this.OnPropertyChanging("Actor", this._actor);
                    this._actor = value;
                    this.OnPropertyChanged("Actor");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "chComment", Storage = "_comment", FieldType = "Note")]
        public string Comment
        {
            get
            {
                return this._comment;
            }
            set
            {
                if ((value != this._comment))
                {
                    this.OnPropertyChanging("Comment", this._comment);
                    this._comment = value;
                    this.OnPropertyChanged("Comment");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "chCommentFor", Storage = "_commentFor", FieldType = "Text")]
        public string CommentFor
        {
            get
            {
                return this._commentFor;
            }
            set
            {
                if ((value != this._commentFor))
                {
                    this.OnPropertyChanging("CommentFor", this._commentFor);
                    this._commentFor = value;
                    this.OnPropertyChanged("CommentFor");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "chCommentedDate", Storage = "_commentedDate", FieldType = "Text")]
        public string CommentedDate
        {
            get
            {
                return this._commentedDate;
            }
            set
            {
                if ((value != this._commentedDate))
                {
                    this.OnPropertyChanging("CommentedDate", this._commentedDate);
                    this._commentedDate = value;
                    this.OnPropertyChanged("CommentedDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "chReferenceId", Storage = "_referenceId", FieldType = "Number")]
        public System.Nullable<double> ReferenceId
        {
            get
            {
                return this._referenceId;
            }
            set
            {
                if ((value != this._referenceId))
                {
                    this.OnPropertyChanging("ReferenceId", this._referenceId);
                    this._referenceId = value;
                    this.OnPropertyChanged("ReferenceId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "chRole", Storage = "_role", FieldType = "Text")]
        public string Role
        {
            get
            {
                return this._role;
            }
            set
            {
                if ((value != this._role))
                {
                    this.OnPropertyChanging("Role", this._role);
                    this._role = value;
                    this.OnPropertyChanged("Role");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "chCommentedBy", Storage = "_commentedById", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> CommentedById
        {
            get
            {
                return this._commentedById;
            }
            set
            {
                if ((value != this._commentedById))
                {
                    this.OnPropertyChanging("CommentedById", this._commentedById);
                    this._commentedById = value;
                    this.OnPropertyChanged("CommentedById");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "chCommentedBy", Storage = "_commentedBy", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string CommentedBy
        {
            get
            {
                return this._commentedBy;
            }
            set
            {
                if ((value != this._commentedBy))
                {
                    this.OnPropertyChanging("CommentedBy", this._commentedBy);
                    this._commentedBy = value;
                    this.OnPropertyChanged("CommentedBy");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Companies")]
    public partial class CompaniesItem : Item
    {

        private System.Nullable<double> _companyCode;

        private string _companyName;

        private Microsoft.SharePoint.Linq.EntitySet<AreasItem> _areasItem;

        private Microsoft.SharePoint.Linq.EntityRef<RegionsItem> _region;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public CompaniesItem()
        {
            this._areasItem = new Microsoft.SharePoint.Linq.EntitySet<AreasItem>();
            this._areasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreasItemSync);
            this._areasItem.OnChanged += new System.EventHandler(this.OnAreasItemChanged);
            this._areasItem.OnChanging += new System.EventHandler(this.OnAreasItemChanging);
            this._region = new Microsoft.SharePoint.Linq.EntityRef<RegionsItem>();
            this._region.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem>>(this.OnRegionSync);
            this._region.OnChanged += new System.EventHandler(this.OnRegionChanged);
            this._region.OnChanging += new System.EventHandler(this.OnRegionChanging);
            this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
            this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
            this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
            this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
            this.OnCreated();
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CompanyCode", Storage = "_companyCode", Required = true, FieldType = "Number")]
        public System.Nullable<double> CompanyCode
        {
            get
            {
                return this._companyCode;
            }
            set
            {
                if ((value != this._companyCode))
                {
                    this.OnPropertyChanging("CompanyCode", this._companyCode);
                    this._companyCode = value;
                    this.OnPropertyChanged("CompanyCode");
                }
            }
        }

        /// <summary>
        /// Company Name
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CompanyName", Storage = "_companyName", Required = true, FieldType = "Text")]
        public string CompanyName
        {
            get
            {
                return this._companyName;
            }
            set
            {
                if ((value != this._companyName))
                {
                    this.OnPropertyChanging("CompanyName", this._companyName);
                    this._companyName = value;
                    this.OnPropertyChanged("CompanyName");
                }
            }
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "CompanyCode", Storage = "_areasItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Areas")]
        public Microsoft.SharePoint.Linq.EntitySet<AreasItem> AreasItem
        {
            get
            {
                return this._areasItem;
            }
            set
            {
                this._areasItem.Assign(value);
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Region", Storage = "_region", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Regions")]
        public RegionsItem Region
        {
            get
            {
                return this._region.GetEntity();
            }
            set
            {
                this._region.SetEntity(value);
            }
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "CompanyCode", Storage = "_employeesMasterItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem
        {
            get
            {
                return this._employeesMasterItem;
            }
            set
            {
                this._employeesMasterItem.Assign(value);
            }
        }

        private void OnAreasItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("AreasItem", this._areasItem.Clone());
        }

        private void OnAreasItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("AreasItem");
        }

        private void OnAreasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.CompanyCode = this;
            }
            else
            {
                e.Item.CompanyCode = null;
            }
        }

        private void OnRegionChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("Region", this._region.Clone());
        }

        private void OnRegionChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("Region");
        }

        private void OnRegionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.CompaniesItem.Add(this);
            }
            else
            {
                e.Item.CompaniesItem.Remove(this);
            }
        }

        private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
        }

        private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeesMasterItem");
        }

        private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.CompanyCode = this;
            }
            else
            {
                e.Item.CompanyCode = null;
            }
        }
    }

    /// <summary>
    /// Master Competencies
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_MasterCompetencies1CType", Id = "0x0100FF1D94A4ABC6402EB27FF491DB1966FE")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(CompetenciesVFS_MasterCompetencies1CType))]
    public partial class VFS_MasterCompetencies1CType : Item
    {

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFS_MasterCompetencies1CType()
        {
            this.OnCreated();
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Competencies")]
    public partial class CompetenciesItem : Item
    {

        private string _competency;

        private System.Nullable<bool> _status;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public CompetenciesItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptCompetency1", Storage = "_competency", Required = true, FieldType = "Text")]
        public string Competency
        {
            get
            {
                return this._competency;
            }
            set
            {
                if ((value != this._competency))
                {
                    this.OnPropertyChanging("Competency", this._competency);
                    this._competency = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptStatus", Storage = "_status", Required = true, FieldType = "Boolean")]
        public System.Nullable<bool> Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Competency Descriptions")]
    public partial class CompetencyDescriptionsItem : Item
    {

        private string _competency;

        private string _description;

        private string _employeeGroup;

        private string _employeeSubGroup;

        private System.Nullable<bool> _status;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public CompetencyDescriptionsItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptCompetency", Storage = "_competency", Required = true, FieldType = "Text")]
        public string Competency
        {
            get
            {
                return this._competency;
            }
            set
            {
                if ((value != this._competency))
                {
                    this.OnPropertyChanging("Competency", this._competency);
                    this._competency = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptDescription", Storage = "_description", Required = true, FieldType = "Note")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptEmpGroup", Storage = "_employeeGroup", FieldType = "Text")]
        public string EmployeeGroup
        {
            get
            {
                return this._employeeGroup;
            }
            set
            {
                if ((value != this._employeeGroup))
                {
                    this.OnPropertyChanging("EmployeeGroup", this._employeeGroup);
                    this._employeeGroup = value;
                    this.OnPropertyChanged("EmployeeGroup");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptEmpSubGroup", Storage = "_employeeSubGroup", Required = true, FieldType = "Text")]
        public string EmployeeSubGroup
        {
            get
            {
                return this._employeeSubGroup;
            }
            set
            {
                if ((value != this._employeeSubGroup))
                {
                    this.OnPropertyChanging("EmployeeSubGroup", this._employeeSubGroup);
                    this._employeeSubGroup = value;
                    this.OnPropertyChanged("EmployeeSubGroup");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptdStatus", Storage = "_status", Required = true, FieldType = "Boolean")]
        public System.Nullable<bool> Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Competency Ratings")]
    public partial class CompetencyRatingsItem : Item
    {

        private string _rating;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public CompetencyRatingsItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Rating", Storage = "_rating", Required = true, FieldType = "Text")]
        public string Rating
        {
            get
            {
                return this._rating;
            }
            set
            {
                if ((value != this._rating))
                {
                    this.OnPropertyChanging("Rating", this._rating);
                    this._rating = value;
                    this.OnPropertyChanged("Rating");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Content and Structure Reports")]
    public partial class ContentAndStructureReportsItem : Item
    {

        private string _resourceId;

        private string _resourceId0;

        private string _cAMLListType;

        private string _cAMLQuery;

        private string _reportDescription;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public ContentAndStructureReportsItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_x0024_Resources_x003a_cmscore_x", Storage = "_resourceId", FieldType = "Text")]
        public string ResourceId
        {
            get
            {
                return this._resourceId;
            }
            set
            {
                if ((value != this._resourceId))
                {
                    this.OnPropertyChanging("ResourceId", this._resourceId);
                    this._resourceId = value;
                    this.OnPropertyChanged("ResourceId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_x0024_Resources_x003a_cmscore_x0", Storage = "_resourceId0", FieldType = "Text")]
        public string ResourceId0
        {
            get
            {
                return this._resourceId0;
            }
            set
            {
                if ((value != this._resourceId0))
                {
                    this.OnPropertyChanging("ResourceId0", this._resourceId0);
                    this._resourceId0 = value;
                    this.OnPropertyChanged("ResourceId0");
                }
            }
        }

        /// <summary>
        /// Type the name of the list template for the CAML list type, or leave blank to search document library template
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_x0024_Resources_x003a_cmscore_x1", Storage = "_cAMLListType", FieldType = "Text")]
        public string CAMLListType
        {
            get
            {
                return this._cAMLListType;
            }
            set
            {
                if ((value != this._cAMLListType))
                {
                    this.OnPropertyChanging("CAMLListType", this._cAMLListType);
                    this._cAMLListType = value;
                    this.OnPropertyChanged("CAMLListType");
                }
            }
        }

        /// <summary>
        /// Type the CAML markup for the report query
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_x0024_Resources_x003a_cmscore_x2", Storage = "_cAMLQuery", Required = true, FieldType = "Text")]
        public string CAMLQuery
        {
            get
            {
                return this._cAMLQuery;
            }
            set
            {
                if ((value != this._cAMLQuery))
                {
                    this.OnPropertyChanging("CAMLQuery", this._cAMLQuery);
                    this._cAMLQuery = value;
                    this.OnPropertyChanged("CAMLQuery");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Report_x0020_Description", Storage = "_reportDescription", FieldType = "Note")]
        public string ReportDescription
        {
            get
            {
                return this._reportDescription;
            }
            set
            {
                if ((value != this._reportDescription))
                {
                    this.OnPropertyChanging("ReportDescription", this._reportDescription);
                    this._reportDescription = value;
                    this.OnPropertyChanged("ReportDescription");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Employee Groups")]
    public partial class EmployeeGroupsItem : Item
    {

        private string _employeeGroupCode;

        private string _employeeGroupText;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem> _employeeSubGroupsItem;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public EmployeeGroupsItem()
        {
            this._employeeSubGroupsItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem>();
            this._employeeSubGroupsItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem>>(this.OnEmployeeSubGroupsItemSync);
            this._employeeSubGroupsItem.OnChanged += new System.EventHandler(this.OnEmployeeSubGroupsItemChanged);
            this._employeeSubGroupsItem.OnChanging += new System.EventHandler(this.OnEmployeeSubGroupsItemChanging);
            this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
            this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
            this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
            this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
            this.OnCreated();
        }

        /// <summary>
        /// Employee Group Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeGroupCode", Storage = "_employeeGroupCode", Required = true, FieldType = "Text")]
        public string EmployeeGroupCode
        {
            get
            {
                return this._employeeGroupCode;
            }
            set
            {
                if ((value != this._employeeGroupCode))
                {
                    this.OnPropertyChanging("EmployeeGroupCode", this._employeeGroupCode);
                    this._employeeGroupCode = value;
                    this.OnPropertyChanged("EmployeeGroupCode");
                }
            }
        }

        /// <summary>
        /// Employee Group Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeGroupText", Storage = "_employeeGroupText", Required = true, FieldType = "Text")]
        public string EmployeeGroupText
        {
            get
            {
                return this._employeeGroupText;
            }
            set
            {
                if ((value != this._employeeGroupText))
                {
                    this.OnPropertyChanging("EmployeeGroupText", this._employeeGroupText);
                    this._employeeGroupText = value;
                    this.OnPropertyChanged("EmployeeGroupText");
                }
            }
        }

        /// <summary>
        /// Employee Group Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "EmployeeGroupCode", Storage = "_employeeSubGroupsItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employee Sub Groups")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeeSubGroupsItem> EmployeeSubGroupsItem
        {
            get
            {
                return this._employeeSubGroupsItem;
            }
            set
            {
                this._employeeSubGroupsItem.Assign(value);
            }
        }

        /// <summary>
        /// Employee Group Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "EmployeeGroup", Storage = "_employeesMasterItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem
        {
            get
            {
                return this._employeesMasterItem;
            }
            set
            {
                this._employeesMasterItem.Assign(value);
            }
        }

        private void OnEmployeeSubGroupsItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeeSubGroupsItem", this._employeeSubGroupsItem.Clone());
        }

        private void OnEmployeeSubGroupsItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeeSubGroupsItem");
        }

        private void OnEmployeeSubGroupsItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeeGroupCode = this;
            }
            else
            {
                e.Item.EmployeeGroupCode = null;
            }
        }

        private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
        }

        private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeesMasterItem");
        }

        private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeeGroup = this;
            }
            else
            {
                e.Item.EmployeeGroup = null;
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Employee Sub Groups")]
    public partial class EmployeeSubGroupsItem : Item
    {

        private string _employeeSubGroupCode;

        private string _employeeSubGroupText;

        private Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem> _employeeGroupCode;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public EmployeeSubGroupsItem()
        {
            this._employeeGroupCode = new Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem>();
            this._employeeGroupCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem>>(this.OnEmployeeGroupCodeSync);
            this._employeeGroupCode.OnChanged += new System.EventHandler(this.OnEmployeeGroupCodeChanged);
            this._employeeGroupCode.OnChanging += new System.EventHandler(this.OnEmployeeGroupCodeChanging);
            this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
            this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
            this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
            this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
            this.OnCreated();
        }

        /// <summary>
        /// Employee Sub Group Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeSubGroupCode", Storage = "_employeeSubGroupCode", Required = true, FieldType = "Text")]
        public string EmployeeSubGroupCode
        {
            get
            {
                return this._employeeSubGroupCode;
            }
            set
            {
                if ((value != this._employeeSubGroupCode))
                {
                    this.OnPropertyChanging("EmployeeSubGroupCode", this._employeeSubGroupCode);
                    this._employeeSubGroupCode = value;
                    this.OnPropertyChanged("EmployeeSubGroupCode");
                }
            }
        }

        /// <summary>
        /// Employee Sub Group Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeSubGroupText", Storage = "_employeeSubGroupText", Required = true, FieldType = "Text")]
        public string EmployeeSubGroupText
        {
            get
            {
                return this._employeeSubGroupText;
            }
            set
            {
                if ((value != this._employeeSubGroupText))
                {
                    this.OnPropertyChanging("EmployeeSubGroupText", this._employeeSubGroupText);
                    this._employeeSubGroupText = value;
                    this.OnPropertyChanged("EmployeeSubGroupText");
                }
            }
        }

        /// <summary>
        /// Employee Group Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "EmployeeGroupCode", Storage = "_employeeGroupCode", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Employee Groups")]
        public EmployeeGroupsItem EmployeeGroupCode
        {
            get
            {
                return this._employeeGroupCode.GetEntity();
            }
            set
            {
                this._employeeGroupCode.SetEntity(value);
            }
        }

        /// <summary>
        /// Employee Sub Group Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "EmployeeSubGroup", Storage = "_employeesMasterItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem
        {
            get
            {
                return this._employeesMasterItem;
            }
            set
            {
                this._employeesMasterItem.Assign(value);
            }
        }

        private void OnEmployeeGroupCodeChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeeGroupCode", this._employeeGroupCode.Clone());
        }

        private void OnEmployeeGroupCodeChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeeGroupCode");
        }

        private void OnEmployeeGroupCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeeSubGroupsItem.Add(this);
            }
            else
            {
                e.Item.EmployeeSubGroupsItem.Remove(this);
            }
        }

        private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
        }

        private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeesMasterItem");
        }

        private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeeSubGroup = this;
            }
            else
            {
                e.Item.EmployeeSubGroup = null;
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Employees Master")]
    public partial class EmployeesMasterItem : Item
    {

        private string _windowsLogin;

        private System.Nullable<double> _employeeCode;

        private string _employeeName;

        private string _organizationUnit;

        private string _position;

        private System.Nullable<System.DateTime> _hireDate;

        private System.Nullable<double> _reportingManagerEmployeeCode;

        private string _reportingManagerName;

        private string _companyName;

        private System.Nullable<bool> _status;

        private System.Nullable<double> _hRBusinessPartnerEmployeeCode;

        private string _hRBusinessPartnerName;

        private System.Nullable<double> _departmentHeadEmployeeCode;

        private string _departmentHeadName;

        private System.Nullable<double> _oldEmployeeCode;

        private System.Nullable<System.DateTime> _confirmationDate;

        private System.Nullable<System.DateTime> _confirmationDueDate;

        private string _employeeStatus;

        private string _subArea;

        private string _area;

        private string _employeeGroupName;

        private string _employeeSubGroupName;

        private Microsoft.SharePoint.Linq.EntityRef<OrganizationUnitsItem> _oUCode;

        private Microsoft.SharePoint.Linq.EntityRef<PositionsItem> _positionCode;

        private Microsoft.SharePoint.Linq.EntityRef<CompaniesItem> _companyCode;

        private Microsoft.SharePoint.Linq.EntityRef<AreasItem> _areaCode;

        private Microsoft.SharePoint.Linq.EntityRef<SubAreasItem> _subAreaCode;

        private Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem> _employeeGroup;

        private Microsoft.SharePoint.Linq.EntityRef<EmployeeSubGroupsItem> _employeeSubGroup;

        private Microsoft.SharePoint.Linq.EntityRef<RegionsItem> _hRRegion;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public EmployeesMasterItem()
        {
            this._oUCode = new Microsoft.SharePoint.Linq.EntityRef<OrganizationUnitsItem>();
            this._oUCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<OrganizationUnitsItem>>(this.OnOUCodeSync);
            this._oUCode.OnChanged += new System.EventHandler(this.OnOUCodeChanged);
            this._oUCode.OnChanging += new System.EventHandler(this.OnOUCodeChanging);
            this._positionCode = new Microsoft.SharePoint.Linq.EntityRef<PositionsItem>();
            this._positionCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PositionsItem>>(this.OnPositionCodeSync);
            this._positionCode.OnChanged += new System.EventHandler(this.OnPositionCodeChanged);
            this._positionCode.OnChanging += new System.EventHandler(this.OnPositionCodeChanging);
            this._companyCode = new Microsoft.SharePoint.Linq.EntityRef<CompaniesItem>();
            this._companyCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem>>(this.OnCompanyCodeSync);
            this._companyCode.OnChanged += new System.EventHandler(this.OnCompanyCodeChanged);
            this._companyCode.OnChanging += new System.EventHandler(this.OnCompanyCodeChanging);
            this._areaCode = new Microsoft.SharePoint.Linq.EntityRef<AreasItem>();
            this._areaCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreaCodeSync);
            this._areaCode.OnChanged += new System.EventHandler(this.OnAreaCodeChanged);
            this._areaCode.OnChanging += new System.EventHandler(this.OnAreaCodeChanging);
            this._subAreaCode = new Microsoft.SharePoint.Linq.EntityRef<SubAreasItem>();
            this._subAreaCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem>>(this.OnSubAreaCodeSync);
            this._subAreaCode.OnChanged += new System.EventHandler(this.OnSubAreaCodeChanged);
            this._subAreaCode.OnChanging += new System.EventHandler(this.OnSubAreaCodeChanging);
            this._employeeGroup = new Microsoft.SharePoint.Linq.EntityRef<EmployeeGroupsItem>();
            this._employeeGroup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem>>(this.OnEmployeeGroupSync);
            this._employeeGroup.OnChanged += new System.EventHandler(this.OnEmployeeGroupChanged);
            this._employeeGroup.OnChanging += new System.EventHandler(this.OnEmployeeGroupChanging);
            this._employeeSubGroup = new Microsoft.SharePoint.Linq.EntityRef<EmployeeSubGroupsItem>();
            this._employeeSubGroup.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem>>(this.OnEmployeeSubGroupSync);
            this._employeeSubGroup.OnChanged += new System.EventHandler(this.OnEmployeeSubGroupChanged);
            this._employeeSubGroup.OnChanging += new System.EventHandler(this.OnEmployeeSubGroupChanging);
            this._hRRegion = new Microsoft.SharePoint.Linq.EntityRef<RegionsItem>();
            this._hRRegion.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem>>(this.OnHRRegionSync);
            this._hRRegion.OnChanged += new System.EventHandler(this.OnHRRegionChanged);
            this._hRRegion.OnChanging += new System.EventHandler(this.OnHRRegionChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "WindowsLogin", Storage = "_windowsLogin", Required = true, FieldType = "Text")]
        public string WindowsLogin
        {
            get
            {
                return this._windowsLogin;
            }
            set
            {
                if ((value != this._windowsLogin))
                {
                    this.OnPropertyChanging("WindowsLogin", this._windowsLogin);
                    this._windowsLogin = value;
                    this.OnPropertyChanged("WindowsLogin");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeCode", Storage = "_employeeCode", Required = true, FieldType = "Number")]
        public System.Nullable<double> EmployeeCode
        {
            get
            {
                return this._employeeCode;
            }
            set
            {
                if ((value != this._employeeCode))
                {
                    this.OnPropertyChanging("EmployeeCode", this._employeeCode);
                    this._employeeCode = value;
                    this.OnPropertyChanged("EmployeeCode");
                }
            }
        }

        /// <summary>
        /// Employee Name
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeName", Storage = "_employeeName", Required = true, FieldType = "Text")]
        public string EmployeeName
        {
            get
            {
                return this._employeeName;
            }
            set
            {
                if ((value != this._employeeName))
                {
                    this.OnPropertyChanging("EmployeeName", this._employeeName);
                    this._employeeName = value;
                    this.OnPropertyChanged("EmployeeName");
                }
            }
        }

        /// <summary>
        /// Organization Unit
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "OrganizationUnit", Storage = "_organizationUnit", Required = true, FieldType = "Text")]
        public string OrganizationUnit
        {
            get
            {
                return this._organizationUnit;
            }
            set
            {
                if ((value != this._organizationUnit))
                {
                    this.OnPropertyChanging("OrganizationUnit", this._organizationUnit);
                    this._organizationUnit = value;
                    this.OnPropertyChanged("OrganizationUnit");
                }
            }
        }

        /// <summary>
        /// Position Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Position", Storage = "_position", Required = true, FieldType = "Text")]
        public string Position
        {
            get
            {
                return this._position;
            }
            set
            {
                if ((value != this._position))
                {
                    this.OnPropertyChanging("Position", this._position);
                    this._position = value;
                    this.OnPropertyChanged("Position");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "HireDate", Storage = "_hireDate", Required = true, FieldType = "DateTime")]
        public System.Nullable<System.DateTime> HireDate
        {
            get
            {
                return this._hireDate;
            }
            set
            {
                if ((value != this._hireDate))
                {
                    this.OnPropertyChanging("HireDate", this._hireDate);
                    this._hireDate = value;
                    this.OnPropertyChanged("HireDate");
                }
            }
        }

        /// <summary>
        /// Reporting Manager Employee Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ReportingManagerEmployeeCode", Storage = "_reportingManagerEmployeeCode", Required = true, FieldType = "Number")]
        public System.Nullable<double> ReportingManagerEmployeeCode
        {
            get
            {
                return this._reportingManagerEmployeeCode;
            }
            set
            {
                if ((value != this._reportingManagerEmployeeCode))
                {
                    this.OnPropertyChanging("ReportingManagerEmployeeCode", this._reportingManagerEmployeeCode);
                    this._reportingManagerEmployeeCode = value;
                    this.OnPropertyChanged("ReportingManagerEmployeeCode");
                }
            }
        }

        /// <summary>
        /// Reporting Manager Name
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ReportingManagerName", Storage = "_reportingManagerName", Required = true, FieldType = "Text")]
        public string ReportingManagerName
        {
            get
            {
                return this._reportingManagerName;
            }
            set
            {
                if ((value != this._reportingManagerName))
                {
                    this.OnPropertyChanging("ReportingManagerName", this._reportingManagerName);
                    this._reportingManagerName = value;
                    this.OnPropertyChanged("ReportingManagerName");
                }
            }
        }

        /// <summary>
        /// Company Name
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CompanyName", Storage = "_companyName", Required = true, FieldType = "Text")]
        public string CompanyName
        {
            get
            {
                return this._companyName;
            }
            set
            {
                if ((value != this._companyName))
                {
                    this.OnPropertyChanging("CompanyName", this._companyName);
                    this._companyName = value;
                    this.OnPropertyChanged("CompanyName");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Status", Storage = "_status", FieldType = "Boolean")]
        public System.Nullable<bool> Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }

        /// <summary>
        /// HR Business Partner Employee Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "HRBusinessPartnerEmployeeCode", Storage = "_hRBusinessPartnerEmployeeCode", Required = true, FieldType = "Number")]
        public System.Nullable<double> HRBusinessPartnerEmployeeCode
        {
            get
            {
                return this._hRBusinessPartnerEmployeeCode;
            }
            set
            {
                if ((value != this._hRBusinessPartnerEmployeeCode))
                {
                    this.OnPropertyChanging("HRBusinessPartnerEmployeeCode", this._hRBusinessPartnerEmployeeCode);
                    this._hRBusinessPartnerEmployeeCode = value;
                    this.OnPropertyChanged("HRBusinessPartnerEmployeeCode");
                }
            }
        }

        /// <summary>
        /// HR Business Partner Name
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "HRBusinessPartnerName", Storage = "_hRBusinessPartnerName", Required = true, FieldType = "Text")]
        public string HRBusinessPartnerName
        {
            get
            {
                return this._hRBusinessPartnerName;
            }
            set
            {
                if ((value != this._hRBusinessPartnerName))
                {
                    this.OnPropertyChanging("HRBusinessPartnerName", this._hRBusinessPartnerName);
                    this._hRBusinessPartnerName = value;
                    this.OnPropertyChanged("HRBusinessPartnerName");
                }
            }
        }

        /// <summary>
        /// Department Head Employee Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DepartmentHeadEmployeeCode", Storage = "_departmentHeadEmployeeCode", Required = true, FieldType = "Number")]
        public System.Nullable<double> DepartmentHeadEmployeeCode
        {
            get
            {
                return this._departmentHeadEmployeeCode;
            }
            set
            {
                if ((value != this._departmentHeadEmployeeCode))
                {
                    this.OnPropertyChanging("DepartmentHeadEmployeeCode", this._departmentHeadEmployeeCode);
                    this._departmentHeadEmployeeCode = value;
                    this.OnPropertyChanged("DepartmentHeadEmployeeCode");
                }
            }
        }

        /// <summary>
        /// Department Head Name
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DepartmentHeadName", Storage = "_departmentHeadName", Required = true, FieldType = "Text")]
        public string DepartmentHeadName
        {
            get
            {
                return this._departmentHeadName;
            }
            set
            {
                if ((value != this._departmentHeadName))
                {
                    this.OnPropertyChanging("DepartmentHeadName", this._departmentHeadName);
                    this._departmentHeadName = value;
                    this.OnPropertyChanged("DepartmentHeadName");
                }
            }
        }

        /// <summary>
        /// Old Employee Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "OldEmployeeCode", Storage = "_oldEmployeeCode", FieldType = "Number")]
        public System.Nullable<double> OldEmployeeCode
        {
            get
            {
                return this._oldEmployeeCode;
            }
            set
            {
                if ((value != this._oldEmployeeCode))
                {
                    this.OnPropertyChanging("OldEmployeeCode", this._oldEmployeeCode);
                    this._oldEmployeeCode = value;
                    this.OnPropertyChanged("OldEmployeeCode");
                }
            }
        }

        /// <summary>
        /// Confirmation Date
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ConfirmationDate", Storage = "_confirmationDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> ConfirmationDate
        {
            get
            {
                return this._confirmationDate;
            }
            set
            {
                if ((value != this._confirmationDate))
                {
                    this.OnPropertyChanging("ConfirmationDate", this._confirmationDate);
                    this._confirmationDate = value;
                    this.OnPropertyChanged("ConfirmationDate");
                }
            }
        }

        /// <summary>
        /// Confirmation Due Date
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ConfirmationDueDate", Storage = "_confirmationDueDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> ConfirmationDueDate
        {
            get
            {
                return this._confirmationDueDate;
            }
            set
            {
                if ((value != this._confirmationDueDate))
                {
                    this.OnPropertyChanging("ConfirmationDueDate", this._confirmationDueDate);
                    this._confirmationDueDate = value;
                    this.OnPropertyChanged("ConfirmationDueDate");
                }
            }
        }

        /// <summary>
        /// Employee Status
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeStatus", Storage = "_employeeStatus", FieldType = "Text")]
        public string EmployeeStatus
        {
            get
            {
                return this._employeeStatus;
            }
            set
            {
                if ((value != this._employeeStatus))
                {
                    this.OnPropertyChanging("EmployeeStatus", this._employeeStatus);
                    this._employeeStatus = value;
                    this.OnPropertyChanged("EmployeeStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "SubArea", Storage = "_subArea", FieldType = "Text")]
        public string SubArea
        {
            get
            {
                return this._subArea;
            }
            set
            {
                if ((value != this._subArea))
                {
                    this.OnPropertyChanging("SubArea", this._subArea);
                    this._subArea = value;
                    this.OnPropertyChanged("SubArea");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Area", Storage = "_area", FieldType = "Text")]
        public string Area
        {
            get
            {
                return this._area;
            }
            set
            {
                if ((value != this._area))
                {
                    this.OnPropertyChanging("Area", this._area);
                    this._area = value;
                    this.OnPropertyChanged("Area");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeGroupName", Storage = "_employeeGroupName", FieldType = "Text")]
        public string EmployeeGroupName
        {
            get
            {
                return this._employeeGroupName;
            }
            set
            {
                if ((value != this._employeeGroupName))
                {
                    this.OnPropertyChanging("EmployeeGroupName", this._employeeGroupName);
                    this._employeeGroupName = value;
                    this.OnPropertyChanged("EmployeeGroupName");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeSubGroupName", Storage = "_employeeSubGroupName", FieldType = "Text")]
        public string EmployeeSubGroupName
        {
            get
            {
                return this._employeeSubGroupName;
            }
            set
            {
                if ((value != this._employeeSubGroupName))
                {
                    this.OnPropertyChanging("EmployeeSubGroupName", this._employeeSubGroupName);
                    this._employeeSubGroupName = value;
                    this.OnPropertyChanged("EmployeeSubGroupName");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "OUCode", Storage = "_oUCode", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Organization Units")]
        public OrganizationUnitsItem OUCode
        {
            get
            {
                return this._oUCode.GetEntity();
            }
            set
            {
                this._oUCode.SetEntity(value);
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "PositionCode", Storage = "_positionCode", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Positions")]
        public PositionsItem PositionCode
        {
            get
            {
                return this._positionCode.GetEntity();
            }
            set
            {
                this._positionCode.SetEntity(value);
            }
        }

        /// <summary>
        /// Company Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "CompanyCode", Storage = "_companyCode", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Companies")]
        public CompaniesItem CompanyCode
        {
            get
            {
                return this._companyCode.GetEntity();
            }
            set
            {
                this._companyCode.SetEntity(value);
            }
        }

        /// <summary>
        /// Area Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "AreaCode", Storage = "_areaCode", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Areas")]
        public AreasItem AreaCode
        {
            get
            {
                return this._areaCode.GetEntity();
            }
            set
            {
                this._areaCode.SetEntity(value);
            }
        }

        /// <summary>
        /// Sub Area Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "SubAreaCode", Storage = "_subAreaCode", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Sub-Areas")]
        public SubAreasItem SubAreaCode
        {
            get
            {
                return this._subAreaCode.GetEntity();
            }
            set
            {
                this._subAreaCode.SetEntity(value);
            }
        }

        /// <summary>
        /// Employee Group Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "EmployeeGroup", Storage = "_employeeGroup", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Employee Groups")]
        public EmployeeGroupsItem EmployeeGroup
        {
            get
            {
                return this._employeeGroup.GetEntity();
            }
            set
            {
                this._employeeGroup.SetEntity(value);
            }
        }

        /// <summary>
        /// Employee Sub Group Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "EmployeeSubGroup", Storage = "_employeeSubGroup", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Employee Sub Groups")]
        public EmployeeSubGroupsItem EmployeeSubGroup
        {
            get
            {
                return this._employeeSubGroup.GetEntity();
            }
            set
            {
                this._employeeSubGroup.SetEntity(value);
            }
        }

        /// <summary>
        /// HR Region
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "HRRegion", Storage = "_hRRegion", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Regions")]
        public RegionsItem HRRegion
        {
            get
            {
                return this._hRRegion.GetEntity();
            }
            set
            {
                this._hRRegion.SetEntity(value);
            }
        }

        private void OnOUCodeChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("OUCode", this._oUCode.Clone());
        }

        private void OnOUCodeChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("OUCode");
        }

        private void OnOUCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<OrganizationUnitsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeesMasterItem.Add(this);
            }
            else
            {
                e.Item.EmployeesMasterItem.Remove(this);
            }
        }

        private void OnPositionCodeChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("PositionCode", this._positionCode.Clone());
        }

        private void OnPositionCodeChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("PositionCode");
        }

        private void OnPositionCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PositionsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeesMasterItem.Add(this);
            }
            else
            {
                e.Item.EmployeesMasterItem.Remove(this);
            }
        }

        private void OnCompanyCodeChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("CompanyCode", this._companyCode.Clone());
        }

        private void OnCompanyCodeChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("CompanyCode");
        }

        private void OnCompanyCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeesMasterItem.Add(this);
            }
            else
            {
                e.Item.EmployeesMasterItem.Remove(this);
            }
        }

        private void OnAreaCodeChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("AreaCode", this._areaCode.Clone());
        }

        private void OnAreaCodeChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("AreaCode");
        }

        private void OnAreaCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeesMasterItem.Add(this);
            }
            else
            {
                e.Item.EmployeesMasterItem.Remove(this);
            }
        }

        private void OnSubAreaCodeChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("SubAreaCode", this._subAreaCode.Clone());
        }

        private void OnSubAreaCodeChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("SubAreaCode");
        }

        private void OnSubAreaCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<SubAreasItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeesMasterItem.Add(this);
            }
            else
            {
                e.Item.EmployeesMasterItem.Remove(this);
            }
        }

        private void OnEmployeeGroupChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeeGroup", this._employeeGroup.Clone());
        }

        private void OnEmployeeGroupChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeeGroup");
        }

        private void OnEmployeeGroupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeGroupsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeesMasterItem.Add(this);
            }
            else
            {
                e.Item.EmployeesMasterItem.Remove(this);
            }
        }

        private void OnEmployeeSubGroupChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeeSubGroup", this._employeeSubGroup.Clone());
        }

        private void OnEmployeeSubGroupChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeeSubGroup");
        }

        private void OnEmployeeSubGroupSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeeSubGroupsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeesMasterItem.Add(this);
            }
            else
            {
                e.Item.EmployeesMasterItem.Remove(this);
            }
        }

        private void OnHRRegionChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("HRRegion", this._hRRegion.Clone());
        }

        private void OnHRRegionChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("HRRegion");
        }

        private void OnHRRegionSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<RegionsItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.EmployeesMasterItem.Add(this);
            }
            else
            {
                e.Item.EmployeesMasterItem.Remove(this);
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Goal Categories")]
    public partial class GoalCategoriesItem : Item
    {

        private string _category;

        private string _description;

        private System.Nullable<bool> _status;

        private System.Nullable<Mandatory> _mandatory;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public GoalCategoriesItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrCategory", Storage = "_category", FieldType = "Text")]
        public string Category
        {
            get
            {
                return this._category;
            }
            set
            {
                if ((value != this._category))
                {
                    this.OnPropertyChanging("Category", this._category);
                    this._category = value;
                    this.OnPropertyChanged("Category");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrDescription", Storage = "_description", FieldType = "Text")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrStatus", Storage = "_status", FieldType = "Boolean")]
        public System.Nullable<bool> Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrMandatory", Storage = "_mandatory", FieldType = "Choice")]
        public System.Nullable<Mandatory> Mandatory
        {
            get
            {
                return this._mandatory;
            }
            set
            {
                if ((value != this._mandatory))
                {
                    this.OnPropertyChanging("Mandatory", this._mandatory);
                    this._mandatory = value;
                    this.OnPropertyChanged("Mandatory");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Organization Units")]
    public partial class OrganizationUnitsItem : Item
    {

        private System.Nullable<double> _organizationUnitCode;

        private string _organizationUnitShortText;

        private string _organizationUnitLongText;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public OrganizationUnitsItem()
        {
            this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
            this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
            this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
            this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
            this.OnCreated();
        }

        /// <summary>
        /// Organization Unit Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "OrganizationUnitCode", Storage = "_organizationUnitCode", Required = true, FieldType = "Number")]
        public System.Nullable<double> OrganizationUnitCode
        {
            get
            {
                return this._organizationUnitCode;
            }
            set
            {
                if ((value != this._organizationUnitCode))
                {
                    this.OnPropertyChanging("OrganizationUnitCode", this._organizationUnitCode);
                    this._organizationUnitCode = value;
                    this.OnPropertyChanged("OrganizationUnitCode");
                }
            }
        }

        /// <summary>
        /// Organization Unit Short Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "OrganizationUnitShortText", Storage = "_organizationUnitShortText", Required = true, FieldType = "Text")]
        public string OrganizationUnitShortText
        {
            get
            {
                return this._organizationUnitShortText;
            }
            set
            {
                if ((value != this._organizationUnitShortText))
                {
                    this.OnPropertyChanging("OrganizationUnitShortText", this._organizationUnitShortText);
                    this._organizationUnitShortText = value;
                    this.OnPropertyChanged("OrganizationUnitShortText");
                }
            }
        }

        /// <summary>
        /// Organization Unit Long Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "OrganizationUnitLongText", Storage = "_organizationUnitLongText", Required = true, FieldType = "Text")]
        public string OrganizationUnitLongText
        {
            get
            {
                return this._organizationUnitLongText;
            }
            set
            {
                if ((value != this._organizationUnitLongText))
                {
                    this.OnPropertyChanging("OrganizationUnitLongText", this._organizationUnitLongText);
                    this._organizationUnitLongText = value;
                    this.OnPropertyChanged("OrganizationUnitLongText");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "OUCode", Storage = "_employeesMasterItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem
        {
            get
            {
                return this._employeesMasterItem;
            }
            set
            {
                this._employeesMasterItem.Assign(value);
            }
        }

        private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
        }

        private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeesMasterItem");
        }

        private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.OUCode = this;
            }
            else
            {
                e.Item.OUCode = null;
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Performance Cycle Activity")]
    public partial class PerformanceCycleActivityItem : Item
    {

        private System.Nullable<double> _performanceCycle;

        private System.Nullable<System.DateTime> _h1GoalSettingStartDate;

        private System.Nullable<double> _h1GoalSettingStartedBy;

        private System.Nullable<double> _h1SelfEvaluationStartedBy;

        private System.Nullable<double> _h2SelfEvaluationStartedBy;

        private System.Nullable<System.DateTime> _cycleCloseDate;

        private System.Nullable<System.DateTime> _h2SelfEvaluationStartDate;

        private System.Nullable<System.DateTime> _h1SelfEvaluationStartDate;

        private System.Nullable<double> _cycleClosedBy;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PerformanceCycleActivityItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PerformanceCycle", Storage = "_performanceCycle", Required = true, FieldType = "Number")]
        public System.Nullable<double> PerformanceCycle
        {
            get
            {
                return this._performanceCycle;
            }
            set
            {
                if ((value != this._performanceCycle))
                {
                    this.OnPropertyChanging("PerformanceCycle", this._performanceCycle);
                    this._performanceCycle = value;
                    this.OnPropertyChanged("PerformanceCycle");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "H1GoalSettingStartDate", Storage = "_h1GoalSettingStartDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> H1GoalSettingStartDate
        {
            get
            {
                return this._h1GoalSettingStartDate;
            }
            set
            {
                if ((value != this._h1GoalSettingStartDate))
                {
                    this.OnPropertyChanging("H1GoalSettingStartDate", this._h1GoalSettingStartDate);
                    this._h1GoalSettingStartDate = value;
                    this.OnPropertyChanged("H1GoalSettingStartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "H1GoalSettingStartedBy", Storage = "_h1GoalSettingStartedBy", FieldType = "Number")]
        public System.Nullable<double> H1GoalSettingStartedBy
        {
            get
            {
                return this._h1GoalSettingStartedBy;
            }
            set
            {
                if ((value != this._h1GoalSettingStartedBy))
                {
                    this.OnPropertyChanging("H1GoalSettingStartedBy", this._h1GoalSettingStartedBy);
                    this._h1GoalSettingStartedBy = value;
                    this.OnPropertyChanged("H1GoalSettingStartedBy");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "H1SelfEvaluationStartedBy", Storage = "_h1SelfEvaluationStartedBy", FieldType = "Number")]
        public System.Nullable<double> H1SelfEvaluationStartedBy
        {
            get
            {
                return this._h1SelfEvaluationStartedBy;
            }
            set
            {
                if ((value != this._h1SelfEvaluationStartedBy))
                {
                    this.OnPropertyChanging("H1SelfEvaluationStartedBy", this._h1SelfEvaluationStartedBy);
                    this._h1SelfEvaluationStartedBy = value;
                    this.OnPropertyChanged("H1SelfEvaluationStartedBy");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "H2SelfEvaluationStartedBy", Storage = "_h2SelfEvaluationStartedBy", FieldType = "Number")]
        public System.Nullable<double> H2SelfEvaluationStartedBy
        {
            get
            {
                return this._h2SelfEvaluationStartedBy;
            }
            set
            {
                if ((value != this._h2SelfEvaluationStartedBy))
                {
                    this.OnPropertyChanging("H2SelfEvaluationStartedBy", this._h2SelfEvaluationStartedBy);
                    this._h2SelfEvaluationStartedBy = value;
                    this.OnPropertyChanged("H2SelfEvaluationStartedBy");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CycleCloseDate", Storage = "_cycleCloseDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> CycleCloseDate
        {
            get
            {
                return this._cycleCloseDate;
            }
            set
            {
                if ((value != this._cycleCloseDate))
                {
                    this.OnPropertyChanging("CycleCloseDate", this._cycleCloseDate);
                    this._cycleCloseDate = value;
                    this.OnPropertyChanged("CycleCloseDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "H2SelfEvaluationStartDate", Storage = "_h2SelfEvaluationStartDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> H2SelfEvaluationStartDate
        {
            get
            {
                return this._h2SelfEvaluationStartDate;
            }
            set
            {
                if ((value != this._h2SelfEvaluationStartDate))
                {
                    this.OnPropertyChanging("H2SelfEvaluationStartDate", this._h2SelfEvaluationStartDate);
                    this._h2SelfEvaluationStartDate = value;
                    this.OnPropertyChanged("H2SelfEvaluationStartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "H1SelfEvaluationStartDate", Storage = "_h1SelfEvaluationStartDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> H1SelfEvaluationStartDate
        {
            get
            {
                return this._h1SelfEvaluationStartDate;
            }
            set
            {
                if ((value != this._h1SelfEvaluationStartDate))
                {
                    this.OnPropertyChanging("H1SelfEvaluationStartDate", this._h1SelfEvaluationStartDate);
                    this._h1SelfEvaluationStartDate = value;
                    this.OnPropertyChanged("H1SelfEvaluationStartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CycleClosedBy", Storage = "_cycleClosedBy", FieldType = "Number")]
        public System.Nullable<double> CycleClosedBy
        {
            get
            {
                return this._cycleClosedBy;
            }
            set
            {
                if ((value != this._cycleClosedBy))
                {
                    this.OnPropertyChanging("CycleClosedBy", this._cycleClosedBy);
                    this._cycleClosedBy = value;
                    this.OnPropertyChanged("CycleClosedBy");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Performance Cycle Phases")]
    public partial class PerformanceCyclePhasesItem : Item
    {

        private System.Nullable<System.DateTime> _startDate;

        private System.Nullable<System.DateTime> _endDate;

        private Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclesItem> _performanceCycle;

        private Microsoft.SharePoint.Linq.EntityRef<PhasesItem> _phase;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PerformanceCyclePhasesItem()
        {
            this._performanceCycle = new Microsoft.SharePoint.Linq.EntityRef<PerformanceCyclesItem>();
            this._performanceCycle.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclesItem>>(this.OnPerformanceCycleSync);
            this._performanceCycle.OnChanged += new System.EventHandler(this.OnPerformanceCycleChanged);
            this._performanceCycle.OnChanging += new System.EventHandler(this.OnPerformanceCycleChanging);
            this._phase = new Microsoft.SharePoint.Linq.EntityRef<PhasesItem>();
            this._phase.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PhasesItem>>(this.OnPhaseSync);
            this._phase.OnChanged += new System.EventHandler(this.OnPhaseChanged);
            this._phase.OnChanging += new System.EventHandler(this.OnPhaseChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Start_x0020_Date", Storage = "_startDate", Required = true, FieldType = "DateTime")]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                if ((value != this._startDate))
                {
                    this.OnPropertyChanging("StartDate", this._startDate);
                    this._startDate = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "End_x0020_Date", Storage = "_endDate", Required = true, FieldType = "DateTime")]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this._endDate;
            }
            set
            {
                if ((value != this._endDate))
                {
                    this.OnPropertyChanging("EndDate", this._endDate);
                    this._endDate = value;
                    this.OnPropertyChanged("EndDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Performance_x0020_Cycle", Storage = "_performanceCycle", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Performance Cycles")]
        public PerformanceCyclesItem PerformanceCycle
        {
            get
            {
                return this._performanceCycle.GetEntity();
            }
            set
            {
                this._performanceCycle.SetEntity(value);
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Phase", Storage = "_phase", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Phases")]
        public PhasesItem Phase
        {
            get
            {
                return this._phase.GetEntity();
            }
            set
            {
                this._phase.SetEntity(value);
            }
        }

        private void OnPerformanceCycleChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("PerformanceCycle", this._performanceCycle.Clone());
        }

        private void OnPerformanceCycleChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("PerformanceCycle");
        }

        private void OnPerformanceCycleSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclesItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.PerformanceCyclePhasesItem.Add(this);
            }
            else
            {
                e.Item.PerformanceCyclePhasesItem.Remove(this);
            }
        }

        private void OnPhaseChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("Phase", this._phase.Clone());
        }

        private void OnPhaseChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("Phase");
        }

        private void OnPhaseSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PhasesItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.PerformanceCyclePhasesItem.Add(this);
            }
            else
            {
                e.Item.PerformanceCyclePhasesItem.Remove(this);
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Performance Cycles")]
    public partial class PerformanceCyclesItem : Item
    {

        private System.Nullable<double> _performanceCycle;

        private string _description;

        private System.Nullable<System.DateTime> _startDate;

        private System.Nullable<System.DateTime> _endDate;

        private System.Nullable<bool> _locked;

        private Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem> _performanceCyclePhasesItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PerformanceCyclesItem()
        {
            this._performanceCyclePhasesItem = new Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem>();
            this._performanceCyclePhasesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem>>(this.OnPerformanceCyclePhasesItemSync);
            this._performanceCyclePhasesItem.OnChanged += new System.EventHandler(this.OnPerformanceCyclePhasesItemChanged);
            this._performanceCyclePhasesItem.OnChanging += new System.EventHandler(this.OnPerformanceCyclePhasesItemChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Performance_x0020_Cycle", Storage = "_performanceCycle", Required = true, FieldType = "Number")]
        public System.Nullable<double> PerformanceCycle
        {
            get
            {
                return this._performanceCycle;
            }
            set
            {
                if ((value != this._performanceCycle))
                {
                    this.OnPropertyChanging("PerformanceCycle", this._performanceCycle);
                    this._performanceCycle = value;
                    this.OnPropertyChanged("PerformanceCycle");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Description", Storage = "_description", FieldType = "Text")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Start_x0020_Date", Storage = "_startDate", Required = true, FieldType = "DateTime")]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                if ((value != this._startDate))
                {
                    this.OnPropertyChanging("StartDate", this._startDate);
                    this._startDate = value;
                    this.OnPropertyChanged("StartDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "End_x0020_Date", Storage = "_endDate", Required = true, FieldType = "DateTime")]
        public System.Nullable<System.DateTime> EndDate
        {
            get
            {
                return this._endDate;
            }
            set
            {
                if ((value != this._endDate))
                {
                    this.OnPropertyChanging("EndDate", this._endDate);
                    this._endDate = value;
                    this.OnPropertyChanged("EndDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Locked", Storage = "_locked", FieldType = "Boolean")]
        public System.Nullable<bool> Locked
        {
            get
            {
                return this._locked;
            }
            set
            {
                if ((value != this._locked))
                {
                    this.OnPropertyChanging("Locked", this._locked);
                    this._locked = value;
                    this.OnPropertyChanged("Locked");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Performance_x0020_Cycle", Storage = "_performanceCyclePhasesItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Performance Cycle Phases")]
        public Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem> PerformanceCyclePhasesItem
        {
            get
            {
                return this._performanceCyclePhasesItem;
            }
            set
            {
                this._performanceCyclePhasesItem.Assign(value);
            }
        }

        private void OnPerformanceCyclePhasesItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("PerformanceCyclePhasesItem", this._performanceCyclePhasesItem.Clone());
        }

        private void OnPerformanceCyclePhasesItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("PerformanceCyclePhasesItem");
        }

        private void OnPerformanceCyclePhasesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.PerformanceCycle = this;
            }
            else
            {
                e.Item.PerformanceCycle = null;
            }
        }
    }

    /// <summary>
    /// My Content Type
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_PerformanceMatrixCType", Id = "0x0100065309A23D734BB1AFE672D7E86C0044")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(PerformanceRatingsVFS_PerformanceMatrixCType))]
    public partial class VFS_PerformanceMatrixCType : Item
    {

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFS_PerformanceMatrixCType()
        {
            this.OnCreated();
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Performance Ratings")]
    public partial class PerformanceRatingsItem : Item
    {

        private string _achievement;

        private System.Nullable<double> _lowerValue;

        private System.Nullable<double> _upperValue;

        private System.Nullable<double> _rating;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PerformanceRatingsItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pmAchievement", Storage = "_achievement", FieldType = "Text")]
        public string Achievement
        {
            get
            {
                return this._achievement;
            }
            set
            {
                if ((value != this._achievement))
                {
                    this.OnPropertyChanging("Achievement", this._achievement);
                    this._achievement = value;
                    this.OnPropertyChanged("Achievement");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pmInitialAchievement", Storage = "_lowerValue", FieldType = "Number")]
        public System.Nullable<double> LowerValue
        {
            get
            {
                return this._lowerValue;
            }
            set
            {
                if ((value != this._lowerValue))
                {
                    this.OnPropertyChanging("LowerValue", this._lowerValue);
                    this._lowerValue = value;
                    this.OnPropertyChanged("LowerValue");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pmMaximumAchievement", Storage = "_upperValue", FieldType = "Number")]
        public System.Nullable<double> UpperValue
        {
            get
            {
                return this._upperValue;
            }
            set
            {
                if ((value != this._upperValue))
                {
                    this.OnPropertyChanging("UpperValue", this._upperValue);
                    this._upperValue = value;
                    this.OnPropertyChanged("UpperValue");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pmScaleNumber", Storage = "_rating", FieldType = "Number")]
        public System.Nullable<double> Rating
        {
            get
            {
                return this._rating;
            }
            set
            {
                if ((value != this._rating))
                {
                    this.OnPropertyChanging("Rating", this._rating);
                    this._rating = value;
                    this.OnPropertyChanged("Rating");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Phases")]
    public partial class PhasesItem : Item
    {

        private string _phase;

        private string _description;

        private Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem> _performanceCyclePhasesItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PhasesItem()
        {
            this._performanceCyclePhasesItem = new Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem>();
            this._performanceCyclePhasesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem>>(this.OnPerformanceCyclePhasesItemSync);
            this._performanceCyclePhasesItem.OnChanged += new System.EventHandler(this.OnPerformanceCyclePhasesItemChanged);
            this._performanceCyclePhasesItem.OnChanging += new System.EventHandler(this.OnPerformanceCyclePhasesItemChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Phase", Storage = "_phase", Required = true, FieldType = "Text")]
        public string Phase
        {
            get
            {
                return this._phase;
            }
            set
            {
                if ((value != this._phase))
                {
                    this.OnPropertyChanging("Phase", this._phase);
                    this._phase = value;
                    this.OnPropertyChanged("Phase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Description", Storage = "_description", FieldType = "Note")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Phase", Storage = "_performanceCyclePhasesItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Performance Cycle Phases")]
        public Microsoft.SharePoint.Linq.EntitySet<PerformanceCyclePhasesItem> PerformanceCyclePhasesItem
        {
            get
            {
                return this._performanceCyclePhasesItem;
            }
            set
            {
                this._performanceCyclePhasesItem.Assign(value);
            }
        }

        private void OnPerformanceCyclePhasesItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("PerformanceCyclePhasesItem", this._performanceCyclePhasesItem.Clone());
        }

        private void OnPerformanceCyclePhasesItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("PerformanceCyclePhasesItem");
        }

        private void OnPerformanceCyclePhasesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<PerformanceCyclePhasesItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.Phase = this;
            }
            else
            {
                e.Item.Phase = null;
            }
        }
    }

    /// <summary>
    /// My Content Type
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_PIP_ContentType - VFS_PIP_ContentType", Id = "0x01008C5606CD03AB4E3AA91E9F3D928DAAED")]
    public partial class VFS_PIP_ContentTypeVFS_PIP_ContentType : Item
    {

        private string _performanceIssue;

        private string _expectedAchivement;

        private string _timeFrame;

        private string _midTermActualResult;

        private string _midTermAppraisersAssessment;

        private string _finalAcutualResult;

        private string _finalAppraisersAssesment;

        private System.Nullable<double> _appraisalID;

        private string _appraisalPhase;

        private System.Nullable<double> _appraisalPhaseID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFS_PIP_ContentTypeVFS_PIP_ContentType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipPerformanceIssue", Storage = "_performanceIssue", FieldType = "Text")]
        public string PerformanceIssue
        {
            get
            {
                return this._performanceIssue;
            }
            set
            {
                if ((value != this._performanceIssue))
                {
                    this.OnPropertyChanging("PerformanceIssue", this._performanceIssue);
                    this._performanceIssue = value;
                    this.OnPropertyChanged("PerformanceIssue");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipExpectedachivement", Storage = "_expectedAchivement", FieldType = "Text")]
        public string ExpectedAchivement
        {
            get
            {
                return this._expectedAchivement;
            }
            set
            {
                if ((value != this._expectedAchivement))
                {
                    this.OnPropertyChanging("ExpectedAchivement", this._expectedAchivement);
                    this._expectedAchivement = value;
                    this.OnPropertyChanged("ExpectedAchivement");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipTimeFrame", Storage = "_timeFrame", FieldType = "Text")]
        public string TimeFrame
        {
            get
            {
                return this._timeFrame;
            }
            set
            {
                if ((value != this._timeFrame))
                {
                    this.OnPropertyChanging("TimeFrame", this._timeFrame);
                    this._timeFrame = value;
                    this.OnPropertyChanged("TimeFrame");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipMidTermActualResult", Storage = "_midTermActualResult", FieldType = "Text")]
        public string MidTermActualResult
        {
            get
            {
                return this._midTermActualResult;
            }
            set
            {
                if ((value != this._midTermActualResult))
                {
                    this.OnPropertyChanging("MidTermActualResult", this._midTermActualResult);
                    this._midTermActualResult = value;
                    this.OnPropertyChanged("MidTermActualResult");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipMidTermAppraisersAssessment", Storage = "_midTermAppraisersAssessment", FieldType = "Text")]
        public string MidTermAppraisersAssessment
        {
            get
            {
                return this._midTermAppraisersAssessment;
            }
            set
            {
                if ((value != this._midTermAppraisersAssessment))
                {
                    this.OnPropertyChanging("MidTermAppraisersAssessment", this._midTermAppraisersAssessment);
                    this._midTermAppraisersAssessment = value;
                    this.OnPropertyChanged("MidTermAppraisersAssessment");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipFinalAcutualResult", Storage = "_finalAcutualResult", FieldType = "Text")]
        public string FinalAcutualResult
        {
            get
            {
                return this._finalAcutualResult;
            }
            set
            {
                if ((value != this._finalAcutualResult))
                {
                    this.OnPropertyChanging("FinalAcutualResult", this._finalAcutualResult);
                    this._finalAcutualResult = value;
                    this.OnPropertyChanged("FinalAcutualResult");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipFinalAppraisersAssesment", Storage = "_finalAppraisersAssesment", FieldType = "Text")]
        public string FinalAppraisersAssesment
        {
            get
            {
                return this._finalAppraisersAssesment;
            }
            set
            {
                if ((value != this._finalAppraisersAssesment))
                {
                    this.OnPropertyChanging("FinalAppraisersAssesment", this._finalAppraisersAssesment);
                    this._finalAppraisersAssesment = value;
                    this.OnPropertyChanged("FinalAppraisersAssesment");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipAppraisalID", Storage = "_appraisalID", FieldType = "Number")]
        public System.Nullable<double> AppraisalID
        {
            get
            {
                return this._appraisalID;
            }
            set
            {
                if ((value != this._appraisalID))
                {
                    this.OnPropertyChanging("AppraisalID", this._appraisalID);
                    this._appraisalID = value;
                    this.OnPropertyChanged("AppraisalID");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pipAppraisalPhaseID", Storage = "_appraisalPhaseID", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseID
        {
            get
            {
                return this._appraisalPhaseID;
            }
            set
            {
                if ((value != this._appraisalPhaseID))
                {
                    this.OnPropertyChanging("AppraisalPhaseID", this._appraisalPhaseID);
                    this._appraisalPhaseID = value;
                    this.OnPropertyChanged("AppraisalPhaseID");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "PMS Data File Locations")]
    public partial class PMSDataFileLocationsItem : Item
    {

        private string _fileLocation;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PMSDataFileLocationsItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "FileLocation", Storage = "_fileLocation", Required = true, FieldType = "Text")]
        public string FileLocation
        {
            get
            {
                return this._fileLocation;
            }
            set
            {
                if ((value != this._fileLocation))
                {
                    this.OnPropertyChanging("FileLocation", this._fileLocation);
                    this._fileLocation = value;
                    this.OnPropertyChanged("FileLocation");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Positions")]
    public partial class PositionsItem : Item
    {

        private System.Nullable<double> _positionCode;

        private string _positionShortText;

        private string _positionLongText;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PositionsItem()
        {
            this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
            this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
            this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
            this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
            this.OnCreated();
        }

        /// <summary>
        /// Position Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PositionCode", Storage = "_positionCode", Required = true, FieldType = "Number")]
        public System.Nullable<double> PositionCode
        {
            get
            {
                return this._positionCode;
            }
            set
            {
                if ((value != this._positionCode))
                {
                    this.OnPropertyChanging("PositionCode", this._positionCode);
                    this._positionCode = value;
                    this.OnPropertyChanged("PositionCode");
                }
            }
        }

        /// <summary>
        /// Position Short Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PositionShortText", Storage = "_positionShortText", Required = true, FieldType = "Text")]
        public string PositionShortText
        {
            get
            {
                return this._positionShortText;
            }
            set
            {
                if ((value != this._positionShortText))
                {
                    this.OnPropertyChanging("PositionShortText", this._positionShortText);
                    this._positionShortText = value;
                    this.OnPropertyChanged("PositionShortText");
                }
            }
        }

        /// <summary>
        /// Position Long Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PositionLongText", Storage = "_positionLongText", Required = true, FieldType = "Text")]
        public string PositionLongText
        {
            get
            {
                return this._positionLongText;
            }
            set
            {
                if ((value != this._positionLongText))
                {
                    this.OnPropertyChanging("PositionLongText", this._positionLongText);
                    this._positionLongText = value;
                    this.OnPropertyChanged("PositionLongText");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "PositionCode", Storage = "_employeesMasterItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem
        {
            get
            {
                return this._employeesMasterItem;
            }
            set
            {
                this._employeesMasterItem.Assign(value);
            }
        }

        private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
        }

        private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeesMasterItem");
        }

        private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.PositionCode = this;
            }
            else
            {
                e.Item.PositionCode = null;
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Regions")]
    public partial class RegionsItem : Item
    {

        private string _regionName;

        private System.Nullable<double> _regionHREmployeeCode;

        private string _regionHRName;

        private Microsoft.SharePoint.Linq.EntitySet<AreasItem> _areasItem;

        private Microsoft.SharePoint.Linq.EntitySet<CompaniesItem> _companiesItem;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public RegionsItem()
        {
            this._areasItem = new Microsoft.SharePoint.Linq.EntitySet<AreasItem>();
            this._areasItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnAreasItemSync);
            this._areasItem.OnChanged += new System.EventHandler(this.OnAreasItemChanged);
            this._areasItem.OnChanging += new System.EventHandler(this.OnAreasItemChanging);
            this._companiesItem = new Microsoft.SharePoint.Linq.EntitySet<CompaniesItem>();
            this._companiesItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem>>(this.OnCompaniesItemSync);
            this._companiesItem.OnChanged += new System.EventHandler(this.OnCompaniesItemChanged);
            this._companiesItem.OnChanging += new System.EventHandler(this.OnCompaniesItemChanging);
            this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
            this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
            this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
            this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
            this.OnCreated();
        }

        /// <summary>
        /// Region Name
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "RegionName", Storage = "_regionName", Required = true, FieldType = "Text")]
        public string RegionName
        {
            get
            {
                return this._regionName;
            }
            set
            {
                if ((value != this._regionName))
                {
                    this.OnPropertyChanging("RegionName", this._regionName);
                    this._regionName = value;
                    this.OnPropertyChanged("RegionName");
                }
            }
        }

        /// <summary>
        /// Region HR Employee Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "RegionHREmployeeCode", Storage = "_regionHREmployeeCode", Required = true, FieldType = "Number")]
        public System.Nullable<double> RegionHREmployeeCode
        {
            get
            {
                return this._regionHREmployeeCode;
            }
            set
            {
                if ((value != this._regionHREmployeeCode))
                {
                    this.OnPropertyChanging("RegionHREmployeeCode", this._regionHREmployeeCode);
                    this._regionHREmployeeCode = value;
                    this.OnPropertyChanged("RegionHREmployeeCode");
                }
            }
        }

        /// <summary>
        /// Region HR Name
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "RegionHRName", Storage = "_regionHRName", Required = true, FieldType = "Text")]
        public string RegionHRName
        {
            get
            {
                return this._regionHRName;
            }
            set
            {
                if ((value != this._regionHRName))
                {
                    this.OnPropertyChanging("RegionHRName", this._regionHRName);
                    this._regionHRName = value;
                    this.OnPropertyChanged("RegionHRName");
                }
            }
        }

        /// <summary>
        /// Region Name
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "RegionName", Storage = "_areasItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Areas")]
        public Microsoft.SharePoint.Linq.EntitySet<AreasItem> AreasItem
        {
            get
            {
                return this._areasItem;
            }
            set
            {
                this._areasItem.Assign(value);
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Region", Storage = "_companiesItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Companies")]
        public Microsoft.SharePoint.Linq.EntitySet<CompaniesItem> CompaniesItem
        {
            get
            {
                return this._companiesItem;
            }
            set
            {
                this._companiesItem.Assign(value);
            }
        }

        /// <summary>
        /// HR Region
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "HRRegion", Storage = "_employeesMasterItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem
        {
            get
            {
                return this._employeesMasterItem;
            }
            set
            {
                this._employeesMasterItem.Assign(value);
            }
        }

        private void OnAreasItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("AreasItem", this._areasItem.Clone());
        }

        private void OnAreasItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("AreasItem");
        }

        private void OnAreasItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.RegionName = this;
            }
            else
            {
                e.Item.RegionName = null;
            }
        }

        private void OnCompaniesItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("CompaniesItem", this._companiesItem.Clone());
        }

        private void OnCompaniesItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("CompaniesItem");
        }

        private void OnCompaniesItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<CompaniesItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.Region = this;
            }
            else
            {
                e.Item.Region = null;
            }
        }

        private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
        }

        private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeesMasterItem");
        }

        private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.HRRegion = this;
            }
            else
            {
                e.Item.HRRegion = null;
            }
        }
    }

    /// <summary>
    /// My Content Type
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_RemaindersContentType - VFS_REmainderCType", Id = "0x0100B6B5B254D9A449E1BDD8A1C8E511CA89")]
    public partial class VFS_RemaindersContentTypeVFS_REmainderCType : Item
    {

        private string _rmdWorkflowState;

        private string _remaindrRequirment;

        private string _recurring;

        private System.Nullable<double> _duration;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFS_RemaindersContentTypeVFS_REmainderCType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "rmdWorkflowState", Storage = "_rmdWorkflowState", FieldType = "Text")]
        public string RmdWorkflowState
        {
            get
            {
                return this._rmdWorkflowState;
            }
            set
            {
                if ((value != this._rmdWorkflowState))
                {
                    this.OnPropertyChanging("RmdWorkflowState", this._rmdWorkflowState);
                    this._rmdWorkflowState = value;
                    this.OnPropertyChanged("RmdWorkflowState");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "rmdRemaindrRequirment", Storage = "_remaindrRequirment", FieldType = "Text")]
        public string RemaindrRequirment
        {
            get
            {
                return this._remaindrRequirment;
            }
            set
            {
                if ((value != this._remaindrRequirment))
                {
                    this.OnPropertyChanging("RemaindrRequirment", this._remaindrRequirment);
                    this._remaindrRequirment = value;
                    this.OnPropertyChanged("RemaindrRequirment");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "rmdRecurring", Storage = "_recurring", FieldType = "Text")]
        public string Recurring
        {
            get
            {
                return this._recurring;
            }
            set
            {
                if ((value != this._recurring))
                {
                    this.OnPropertyChanging("Recurring", this._recurring);
                    this._recurring = value;
                    this.OnPropertyChanged("Recurring");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "rmdDuration", Storage = "_duration", FieldType = "Number")]
        public System.Nullable<double> Duration
        {
            get
            {
                return this._duration;
            }
            set
            {
                if ((value != this._duration))
                {
                    this.OnPropertyChanging("Duration", this._duration);
                    this._duration = value;
                    this.OnPropertyChanged("Duration");
                }
            }
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "Sub-Areas")]
    public partial class SubAreasItem : Item
    {

        private string _personnelSubAreaCode;

        private string _subPersonnelAreaText;

        private Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> _employeesMasterItem;

        private Microsoft.SharePoint.Linq.EntityRef<AreasItem> _personnelAreaCode;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public SubAreasItem()
        {
            this._employeesMasterItem = new Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem>();
            this._employeesMasterItem.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem>>(this.OnEmployeesMasterItemSync);
            this._employeesMasterItem.OnChanged += new System.EventHandler(this.OnEmployeesMasterItemChanged);
            this._employeesMasterItem.OnChanging += new System.EventHandler(this.OnEmployeesMasterItemChanging);
            this._personnelAreaCode = new Microsoft.SharePoint.Linq.EntityRef<AreasItem>();
            this._personnelAreaCode.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem>>(this.OnPersonnelAreaCodeSync);
            this._personnelAreaCode.OnChanged += new System.EventHandler(this.OnPersonnelAreaCodeChanged);
            this._personnelAreaCode.OnChanging += new System.EventHandler(this.OnPersonnelAreaCodeChanging);
            this.OnCreated();
        }

        /// <summary>
        /// Personnel Sub Area Code
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PersonnelSubAreaCode", Storage = "_personnelSubAreaCode", Required = true, FieldType = "Text")]
        public string PersonnelSubAreaCode
        {
            get
            {
                return this._personnelSubAreaCode;
            }
            set
            {
                if ((value != this._personnelSubAreaCode))
                {
                    this.OnPropertyChanging("PersonnelSubAreaCode", this._personnelSubAreaCode);
                    this._personnelSubAreaCode = value;
                    this.OnPropertyChanged("PersonnelSubAreaCode");
                }
            }
        }

        /// <summary>
        /// Sub Personnel Area Text
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "SubPersonnelAreaText", Storage = "_subPersonnelAreaText", Required = true, FieldType = "Text")]
        public string SubPersonnelAreaText
        {
            get
            {
                return this._subPersonnelAreaText;
            }
            set
            {
                if ((value != this._subPersonnelAreaText))
                {
                    this.OnPropertyChanging("SubPersonnelAreaText", this._subPersonnelAreaText);
                    this._subPersonnelAreaText = value;
                    this.OnPropertyChanged("SubPersonnelAreaText");
                }
            }
        }

        /// <summary>
        /// Sub Area Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "SubAreaCode", Storage = "_employeesMasterItem", ReadOnly = true, MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Backward, List = "Employees Master")]
        public Microsoft.SharePoint.Linq.EntitySet<EmployeesMasterItem> EmployeesMasterItem
        {
            get
            {
                return this._employeesMasterItem;
            }
            set
            {
                this._employeesMasterItem.Assign(value);
            }
        }

        /// <summary>
        /// Personnel Area Code
        /// </summary>
        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "PersonnelAreaCode", Storage = "_personnelAreaCode", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Single, List = "Areas")]
        public AreasItem PersonnelAreaCode
        {
            get
            {
                return this._personnelAreaCode.GetEntity();
            }
            set
            {
                this._personnelAreaCode.SetEntity(value);
            }
        }

        private void OnEmployeesMasterItemChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("EmployeesMasterItem", this._employeesMasterItem.Clone());
        }

        private void OnEmployeesMasterItemChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("EmployeesMasterItem");
        }

        private void OnEmployeesMasterItemSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<EmployeesMasterItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.SubAreaCode = this;
            }
            else
            {
                e.Item.SubAreaCode = null;
            }
        }

        private void OnPersonnelAreaCodeChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("PersonnelAreaCode", this._personnelAreaCode.Clone());
        }

        private void OnPersonnelAreaCodeChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("PersonnelAreaCode");
        }

        private void OnPersonnelAreaCodeSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<AreasItem> e)
        {
            if ((Microsoft.SharePoint.Linq.AssociationChangedState.Added == e.State))
            {
                e.Item.SubAreasItem.Add(this);
            }
            else
            {
                e.Item.SubAreasItem.Remove(this);
            }
        }
    }

    /// <summary>
    /// TMT Actions
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_TMTActionsCType", Id = "0x0100BBF02E2360BA4530B75A0753D7B1F8C0")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(TMTActionsVFS_TMTActionsCType))]
    public partial class VFS_TMTActionsCType : Item
    {

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFS_TMTActionsCType()
        {
            this.OnCreated();
        }
    }

    /// <summary>
    /// Create a new list item.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "TMT Actions")]
    public partial class TMTActionsItem : Item
    {

        private string _h1History;

        private string _h1SelfHistory;

        private string _h2SelHistory;

        private string _isH1GoalSettingStarted;

        private string _isH1SelfEvaluationStarted;

        private string _isH2SelfEvaluationStarted;

        private string _performanceCycle;

        private System.Nullable<bool> _isClosed;

        private System.Nullable<System.DateTime> _cycleCloseDate;

        private System.Nullable<int> _closedById;

        private string _closedByImnName;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public TMTActionsItem()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtH1History", Storage = "_h1History", FieldType = "Text")]
        public string H1History
        {
            get
            {
                return this._h1History;
            }
            set
            {
                if ((value != this._h1History))
                {
                    this.OnPropertyChanging("H1History", this._h1History);
                    this._h1History = value;
                    this.OnPropertyChanged("H1History");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtH1SelfHistory", Storage = "_h1SelfHistory", FieldType = "Text")]
        public string H1SelfHistory
        {
            get
            {
                return this._h1SelfHistory;
            }
            set
            {
                if ((value != this._h1SelfHistory))
                {
                    this.OnPropertyChanging("H1SelfHistory", this._h1SelfHistory);
                    this._h1SelfHistory = value;
                    this.OnPropertyChanged("H1SelfHistory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtH2SelHistory", Storage = "_h2SelHistory", FieldType = "Text")]
        public string H2SelHistory
        {
            get
            {
                return this._h2SelHistory;
            }
            set
            {
                if ((value != this._h2SelHistory))
                {
                    this.OnPropertyChanging("H2SelHistory", this._h2SelHistory);
                    this._h2SelHistory = value;
                    this.OnPropertyChanged("H2SelHistory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtIsH1GoalSettingStarted", Storage = "_isH1GoalSettingStarted", FieldType = "Text")]
        public string IsH1GoalSettingStarted
        {
            get
            {
                return this._isH1GoalSettingStarted;
            }
            set
            {
                if ((value != this._isH1GoalSettingStarted))
                {
                    this.OnPropertyChanging("IsH1GoalSettingStarted", this._isH1GoalSettingStarted);
                    this._isH1GoalSettingStarted = value;
                    this.OnPropertyChanged("IsH1GoalSettingStarted");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtIsH1SelfEvaluationStarted", Storage = "_isH1SelfEvaluationStarted", FieldType = "Text")]
        public string IsH1SelfEvaluationStarted
        {
            get
            {
                return this._isH1SelfEvaluationStarted;
            }
            set
            {
                if ((value != this._isH1SelfEvaluationStarted))
                {
                    this.OnPropertyChanging("IsH1SelfEvaluationStarted", this._isH1SelfEvaluationStarted);
                    this._isH1SelfEvaluationStarted = value;
                    this.OnPropertyChanged("IsH1SelfEvaluationStarted");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtIsH2SelfEvaluationStarted", Storage = "_isH2SelfEvaluationStarted", FieldType = "Text")]
        public string IsH2SelfEvaluationStarted
        {
            get
            {
                return this._isH2SelfEvaluationStarted;
            }
            set
            {
                if ((value != this._isH2SelfEvaluationStarted))
                {
                    this.OnPropertyChanging("IsH2SelfEvaluationStarted", this._isH2SelfEvaluationStarted);
                    this._isH2SelfEvaluationStarted = value;
                    this.OnPropertyChanged("IsH2SelfEvaluationStarted");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtPerformanceCycle", Storage = "_performanceCycle", FieldType = "Text")]
        public string PerformanceCycle
        {
            get
            {
                return this._performanceCycle;
            }
            set
            {
                if ((value != this._performanceCycle))
                {
                    this.OnPropertyChanging("PerformanceCycle", this._performanceCycle);
                    this._performanceCycle = value;
                    this.OnPropertyChanged("PerformanceCycle");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "IsClosed", Storage = "_isClosed", FieldType = "Boolean")]
        public System.Nullable<bool> IsClosed
        {
            get
            {
                return this._isClosed;
            }
            set
            {
                if ((value != this._isClosed))
                {
                    this.OnPropertyChanging("IsClosed", this._isClosed);
                    this._isClosed = value;
                    this.OnPropertyChanged("IsClosed");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CycleCloseDate", Storage = "_cycleCloseDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> CycleCloseDate
        {
            get
            {
                return this._cycleCloseDate;
            }
            set
            {
                if ((value != this._cycleCloseDate))
                {
                    this.OnPropertyChanging("CycleCloseDate", this._cycleCloseDate);
                    this._cycleCloseDate = value;
                    this.OnPropertyChanged("CycleCloseDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ClosedBy", Storage = "_closedById", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ClosedById
        {
            get
            {
                return this._closedById;
            }
            set
            {
                if ((value != this._closedById))
                {
                    this.OnPropertyChanging("ClosedById", this._closedById);
                    this._closedById = value;
                    this.OnPropertyChanged("ClosedById");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ClosedBy", Storage = "_closedByImnName", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string ClosedByImnName
        {
            get
            {
                return this._closedByImnName;
            }
            set
            {
                if ((value != this._closedByImnName))
                {
                    this.OnPropertyChanging("ClosedByImnName", this._closedByImnName);
                    this._closedByImnName = value;
                    this.OnPropertyChanged("ClosedByImnName");
                }
            }
        }
    }

    /// <summary>
    /// Create a new meeting, deadline or other event.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Event", Id = "0x0102", List = "Calendar")]
    public partial class CalendarEvent : Event
    {

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public CalendarEvent()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EventDate", Storage = "_startTime", Required = true, FieldType = "DateTime")]
        public override System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return this._startTime;
            }
            set
            {
                if ((value != this._startTime))
                {
                    this.OnPropertyChanging("StartTime", this._startTime);
                    this._startTime = value;
                    this.OnPropertyChanged("StartTime");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Description", Storage = "_description", FieldType = "Note")]
        public override string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    /// <summary>
    /// Create a new folder.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Folder", Id = "0x0120", List = "Goal Categories")]
    public partial class GoalCategoriesFolder : Folder
    {

        private string _category;

        private string _description;

        private System.Nullable<bool> _status;

        private System.Nullable<Mandatory> _mandatory;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public GoalCategoriesFolder()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrCategory", Storage = "_category", FieldType = "Text")]
        public string Category
        {
            get
            {
                return this._category;
            }
            set
            {
                if ((value != this._category))
                {
                    this.OnPropertyChanging("Category", this._category);
                    this._category = value;
                    this.OnPropertyChanged("Category");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrDescription", Storage = "_description", FieldType = "Text")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrStatus", Storage = "_status", FieldType = "Boolean")]
        public System.Nullable<bool> Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrMandatory", Storage = "_mandatory", FieldType = "Choice")]
        public System.Nullable<Mandatory> Mandatory
        {
            get
            {
                return this._mandatory;
            }
            set
            {
                if ((value != this._mandatory))
                {
                    this.OnPropertyChanging("Mandatory", this._mandatory);
                    this._mandatory = value;
                    this.OnPropertyChanged("Mandatory");
                }
            }
        }
    }

    /// <summary>
    /// Upload an asset.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Rich Media Asset", Id = "0x0101009148F5A04DDD49CBA7127AADA5FB792B")]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Image))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Audio))]
    [Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(Video))]
    public partial class RichMediaAsset : Document
    {

        private string _preview;

        private string _keywords;

        private string _thumbnailPreview;

        private System.Nullable<int> _pictureWidth;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public RichMediaAsset()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PreviewOnForm", Storage = "_preview", FieldType = "Computed")]
        public string Preview
        {
            get
            {
                return this._preview;
            }
            set
            {
                if ((value != this._preview))
                {
                    this.OnPropertyChanging("Preview", this._preview);
                    this._preview = value;
                    this.OnPropertyChanged("Preview");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Keywords", Storage = "_keywords", FieldType = "Note")]
        public string Keywords
        {
            get
            {
                return this._keywords;
            }
            set
            {
                if ((value != this._keywords))
                {
                    this.OnPropertyChanging("Keywords", this._keywords);
                    this._keywords = value;
                    this.OnPropertyChanged("Keywords");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ThumbnailOnForm", Storage = "_thumbnailPreview", FieldType = "Computed")]
        public string ThumbnailPreview
        {
            get
            {
                return this._thumbnailPreview;
            }
            set
            {
                if ((value != this._thumbnailPreview))
                {
                    this.OnPropertyChanging("ThumbnailPreview", this._thumbnailPreview);
                    this._thumbnailPreview = value;
                    this.OnPropertyChanged("ThumbnailPreview");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ImageWidth", Storage = "_pictureWidth", ReadOnly = true, FieldType = "Integer")]
        public System.Nullable<int> PictureWidth
        {
            get
            {
                return this._pictureWidth;
            }
            set
            {
                if ((value != this._pictureWidth))
                {
                    this.OnPropertyChanging("PictureWidth", this._pictureWidth);
                    this._pictureWidth = value;
                    this.OnPropertyChanged("PictureWidth");
                }
            }
        }
    }

    /// <summary>
    /// Create a new document.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Document", Id = "0x0101", List = "Shared Documents")]
    public partial class SharedDocumentsDocument : Document
    {

        private string _documentIDValue;

        private string _documentID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public SharedDocumentsDocument()
        {
            this.OnCreated();
        }

        /// <summary>
        /// The value of the document ID assigned to this item.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_dlc_DocId", Storage = "_documentIDValue", ReadOnly = true, FieldType = "Text")]
        public string DocumentIDValue
        {
            get
            {
                return this._documentIDValue;
            }
            set
            {
                if ((value != this._documentIDValue))
                {
                    this.OnPropertyChanging("DocumentIDValue", this._documentIDValue);
                    this._documentIDValue = value;
                    this.OnPropertyChanged("DocumentIDValue");
                }
            }
        }

        /// <summary>
        /// Permanent link to this document.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_dlc_DocIdUrl", Storage = "_documentID", ReadOnly = true, FieldType = "Url")]
        public string DocumentID
        {
            get
            {
                return this._documentID;
            }
            set
            {
                if ((value != this._documentID))
                {
                    this.OnPropertyChanging("DocumentID", this._documentID);
                    this._documentID = value;
                    this.OnPropertyChanged("DocumentID");
                }
            }
        }
    }

    /// <summary>
    /// Create a new document.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Document", Id = "0x0101", List = "Site Assets")]
    public partial class SiteAssetsDocument : Document
    {

        private string _documentIDValue;

        private string _documentID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public SiteAssetsDocument()
        {
            this.OnCreated();
        }

        /// <summary>
        /// The value of the document ID assigned to this item.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_dlc_DocId", Storage = "_documentIDValue", ReadOnly = true, FieldType = "Text")]
        public string DocumentIDValue
        {
            get
            {
                return this._documentIDValue;
            }
            set
            {
                if ((value != this._documentIDValue))
                {
                    this.OnPropertyChanging("DocumentIDValue", this._documentIDValue);
                    this._documentIDValue = value;
                    this.OnPropertyChanged("DocumentIDValue");
                }
            }
        }

        /// <summary>
        /// Permanent link to this document.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_dlc_DocIdUrl", Storage = "_documentID", ReadOnly = true, FieldType = "Url")]
        public string DocumentID
        {
            get
            {
                return this._documentID;
            }
            set
            {
                if ((value != this._documentID))
                {
                    this.OnPropertyChanging("DocumentID", this._documentID);
                    this._documentID = value;
                    this.OnPropertyChanged("DocumentID");
                }
            }
        }
    }

    /// <summary>
    /// Track a work item that you or your team needs to complete.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Task", Id = "0x0108", List = "Tasks")]
    public partial class TasksTask : Task
    {

        private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public TasksTask()
        {
            this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
            this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
            this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
            this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public override System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Status", Storage = "_taskStatus", FieldType = "Choice")]
        public override System.Nullable<TaskStatus> TaskStatus
        {
            get
            {
                return this._taskStatus;
            }
            set
            {
                if ((value != this._taskStatus))
                {
                    this.OnPropertyChanging("TaskStatus", this._taskStatus);
                    this._taskStatus = value;
                    this.OnPropertyChanged("TaskStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Predecessors", Storage = "_predecessors", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Multi, List = "Tasks")]
        public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors
        {
            get
            {
                return this._predecessors;
            }
            set
            {
                this._predecessors.Assign(value);
            }
        }

        private void OnPredecessorsChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
        }

        private void OnPredecessorsChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("Predecessors");
        }

        private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e)
        {
        }
    }

    /// <summary>
    /// Track a work item that you or your team needs to complete.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Task", Id = "0x0108", List = "VFSAppraisalTasks")]
    public partial class VFSAppraisalTasksTask : Task
    {

        private System.Nullable<double> _appraisalId;

        private string _appraisalPhase;

        private System.Nullable<double> _appraisalPhaseId;

        private string _appraiseeCode;

        private string _appraiserCode;

        private string _busenessPartnerCode;

        private string _comments;

        private string _reviewerCode;

        private string _status;

        private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;

        private System.Nullable<int> _actionTakenById;

        private string _actionTakenBy;

        private System.Nullable<int> _assignedToId0;

        private string _assignedTo0;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFSAppraisalTasksTask()
        {
            this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
            this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
            this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
            this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public override System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraisalId", Storage = "_appraisalId", FieldType = "Number")]
        public System.Nullable<double> AppraisalId
        {
            get
            {
                return this._appraisalId;
            }
            set
            {
                if ((value != this._appraisalId))
                {
                    this.OnPropertyChanging("AppraisalId", this._appraisalId);
                    this._appraisalId = value;
                    this.OnPropertyChanged("AppraisalId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraisalPhaseId", Storage = "_appraisalPhaseId", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseId
        {
            get
            {
                return this._appraisalPhaseId;
            }
            set
            {
                if ((value != this._appraisalPhaseId))
                {
                    this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
                    this._appraisalPhaseId = value;
                    this.OnPropertyChanged("AppraisalPhaseId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraiseeCode", Storage = "_appraiseeCode", FieldType = "Text")]
        public string AppraiseeCode
        {
            get
            {
                return this._appraiseeCode;
            }
            set
            {
                if ((value != this._appraiseeCode))
                {
                    this.OnPropertyChanging("AppraiseeCode", this._appraiseeCode);
                    this._appraiseeCode = value;
                    this.OnPropertyChanged("AppraiseeCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraiserCode", Storage = "_appraiserCode", FieldType = "Text")]
        public string AppraiserCode
        {
            get
            {
                return this._appraiserCode;
            }
            set
            {
                if ((value != this._appraiserCode))
                {
                    this.OnPropertyChanging("AppraiserCode", this._appraiserCode);
                    this._appraiserCode = value;
                    this.OnPropertyChanged("AppraiserCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskHRCode", Storage = "_busenessPartnerCode", FieldType = "Text")]
        public string BusenessPartnerCode
        {
            get
            {
                return this._busenessPartnerCode;
            }
            set
            {
                if ((value != this._busenessPartnerCode))
                {
                    this.OnPropertyChanging("BusenessPartnerCode", this._busenessPartnerCode);
                    this._busenessPartnerCode = value;
                    this.OnPropertyChanged("BusenessPartnerCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskComments", Storage = "_comments", FieldType = "Text")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskReviewerCode", Storage = "_reviewerCode", FieldType = "Text")]
        public string ReviewerCode
        {
            get
            {
                return this._reviewerCode;
            }
            set
            {
                if ((value != this._reviewerCode))
                {
                    this.OnPropertyChanging("ReviewerCode", this._reviewerCode);
                    this._reviewerCode = value;
                    this.OnPropertyChanged("ReviewerCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskStatus", Storage = "_status", FieldType = "Text")]
        public string Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Status", Storage = "_taskStatus", FieldType = "Choice")]
        public override System.Nullable<TaskStatus> TaskStatus
        {
            get
            {
                return this._taskStatus;
            }
            set
            {
                if ((value != this._taskStatus))
                {
                    this.OnPropertyChanging("TaskStatus", this._taskStatus);
                    this._taskStatus = value;
                    this.OnPropertyChanged("TaskStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Predecessors", Storage = "_predecessors", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Multi, List = "VFSAppraisalTasks")]
        public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors
        {
            get
            {
                return this._predecessors;
            }
            set
            {
                this._predecessors.Assign(value);
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskActionTakenBy", Storage = "_actionTakenById", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ActionTakenById
        {
            get
            {
                return this._actionTakenById;
            }
            set
            {
                if ((value != this._actionTakenById))
                {
                    this.OnPropertyChanging("ActionTakenById", this._actionTakenById);
                    this._actionTakenById = value;
                    this.OnPropertyChanged("ActionTakenById");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskActionTakenBy", Storage = "_actionTakenBy", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string ActionTakenBy
        {
            get
            {
                return this._actionTakenBy;
            }
            set
            {
                if ((value != this._actionTakenBy))
                {
                    this.OnPropertyChanging("ActionTakenBy", this._actionTakenBy);
                    this._actionTakenBy = value;
                    this.OnPropertyChanged("ActionTakenBy");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAssignedTo", Storage = "_assignedToId0", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> AssignedToId0
        {
            get
            {
                return this._assignedToId0;
            }
            set
            {
                if ((value != this._assignedToId0))
                {
                    this.OnPropertyChanging("AssignedToId0", this._assignedToId0);
                    this._assignedToId0 = value;
                    this.OnPropertyChanged("AssignedToId0");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAssignedTo", Storage = "_assignedTo0", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string AssignedTo0
        {
            get
            {
                return this._assignedTo0;
            }
            set
            {
                if ((value != this._assignedTo0))
                {
                    this.OnPropertyChanging("AssignedTo0", this._assignedTo0);
                    this._assignedTo0 = value;
                    this.OnPropertyChanged("AssignedTo0");
                }
            }
        }

        private void OnPredecessorsChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
        }

        private void OnPredecessorsChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("Predecessors");
        }

        private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e)
        {
        }
    }

    /// <summary>
    /// Track a work item that you or your team needs to complete.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Task", Id = "0x0108", List = "Workflow Tasks")]
    public partial class WorkflowTasksTask : Task
    {

        private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public WorkflowTasksTask()
        {
            this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
            this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
            this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
            this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public override System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Status", Storage = "_taskStatus", FieldType = "Choice")]
        public override System.Nullable<TaskStatus> TaskStatus
        {
            get
            {
                return this._taskStatus;
            }
            set
            {
                if ((value != this._taskStatus))
                {
                    this.OnPropertyChanging("TaskStatus", this._taskStatus);
                    this._taskStatus = value;
                    this.OnPropertyChanged("TaskStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Predecessors", Storage = "_predecessors", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Multi, List = "Workflow Tasks")]
        public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors
        {
            get
            {
                return this._predecessors;
            }
            set
            {
                this._predecessors.Assign(value);
            }
        }

        private void OnPredecessorsChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
        }

        private void OnPredecessorsChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("Predecessors");
        }

        private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e)
        {
        }
    }

    /// <summary>
    /// Create a new wiki page.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Wiki Page", Id = "0x010108", List = "Site Pages")]
    public partial class SitePagesWikiPage : WikiPage
    {

        private string _documentIDValue;

        private string _documentID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public SitePagesWikiPage()
        {
            this.OnCreated();
        }

        /// <summary>
        /// The value of the document ID assigned to this item.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_dlc_DocId", Storage = "_documentIDValue", ReadOnly = true, FieldType = "Text")]
        public string DocumentIDValue
        {
            get
            {
                return this._documentIDValue;
            }
            set
            {
                if ((value != this._documentIDValue))
                {
                    this.OnPropertyChanging("DocumentIDValue", this._documentIDValue);
                    this._documentIDValue = value;
                    this.OnPropertyChanged("DocumentIDValue");
                }
            }
        }

        /// <summary>
        /// Permanent link to this document.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_dlc_DocIdUrl", Storage = "_documentID", ReadOnly = true, FieldType = "Url")]
        public string DocumentID
        {
            get
            {
                return this._documentID;
            }
            set
            {
                if ((value != this._documentID))
                {
                    this.OnPropertyChanging("DocumentID", this._documentID);
                    this._documentID = value;
                    this.OnPropertyChanged("DocumentID");
                }
            }
        }
    }

    /// <summary>
    /// Group and describe related tasks that you or your team needs to complete.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Summary Task", Id = "0x012004", List = "Tasks")]
    public partial class TasksSummaryTask : SummaryTask
    {

        private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public TasksSummaryTask()
        {
            this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
            this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
            this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
            this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public override System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Status", Storage = "_taskStatus", FieldType = "Choice")]
        public override System.Nullable<TaskStatus> TaskStatus
        {
            get
            {
                return this._taskStatus;
            }
            set
            {
                if ((value != this._taskStatus))
                {
                    this.OnPropertyChanging("TaskStatus", this._taskStatus);
                    this._taskStatus = value;
                    this.OnPropertyChanged("TaskStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Predecessors", Storage = "_predecessors", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Multi, List = "Tasks")]
        public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors
        {
            get
            {
                return this._predecessors;
            }
            set
            {
                this._predecessors.Assign(value);
            }
        }

        private void OnPredecessorsChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
        }

        private void OnPredecessorsChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("Predecessors");
        }

        private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e)
        {
        }
    }

    /// <summary>
    /// Group and describe related tasks that you or your team needs to complete.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Summary Task", Id = "0x012004", List = "VFSAppraisalTasks")]
    public partial class VFSAppraisalTasksSummaryTask : SummaryTask
    {

        private System.Nullable<double> _appraisalId;

        private string _appraisalPhase;

        private System.Nullable<double> _appraisalPhaseId;

        private string _appraiseeCode;

        private string _appraiserCode;

        private string _busenessPartnerCode;

        private string _comments;

        private string _reviewerCode;

        private string _status;

        private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;

        private System.Nullable<int> _actionTakenById;

        private string _actionTakenBy;

        private System.Nullable<int> _assignedToId0;

        private string _assignedTo0;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public VFSAppraisalTasksSummaryTask()
        {
            this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
            this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
            this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
            this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public override System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraisalId", Storage = "_appraisalId", FieldType = "Number")]
        public System.Nullable<double> AppraisalId
        {
            get
            {
                return this._appraisalId;
            }
            set
            {
                if ((value != this._appraisalId))
                {
                    this.OnPropertyChanging("AppraisalId", this._appraisalId);
                    this._appraisalId = value;
                    this.OnPropertyChanged("AppraisalId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraisalPhaseId", Storage = "_appraisalPhaseId", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseId
        {
            get
            {
                return this._appraisalPhaseId;
            }
            set
            {
                if ((value != this._appraisalPhaseId))
                {
                    this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
                    this._appraisalPhaseId = value;
                    this.OnPropertyChanged("AppraisalPhaseId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraiseeCode", Storage = "_appraiseeCode", FieldType = "Text")]
        public string AppraiseeCode
        {
            get
            {
                return this._appraiseeCode;
            }
            set
            {
                if ((value != this._appraiseeCode))
                {
                    this.OnPropertyChanging("AppraiseeCode", this._appraiseeCode);
                    this._appraiseeCode = value;
                    this.OnPropertyChanged("AppraiseeCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAppraiserCode", Storage = "_appraiserCode", FieldType = "Text")]
        public string AppraiserCode
        {
            get
            {
                return this._appraiserCode;
            }
            set
            {
                if ((value != this._appraiserCode))
                {
                    this.OnPropertyChanging("AppraiserCode", this._appraiserCode);
                    this._appraiserCode = value;
                    this.OnPropertyChanged("AppraiserCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskHRCode", Storage = "_busenessPartnerCode", FieldType = "Text")]
        public string BusenessPartnerCode
        {
            get
            {
                return this._busenessPartnerCode;
            }
            set
            {
                if ((value != this._busenessPartnerCode))
                {
                    this.OnPropertyChanging("BusenessPartnerCode", this._busenessPartnerCode);
                    this._busenessPartnerCode = value;
                    this.OnPropertyChanged("BusenessPartnerCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskComments", Storage = "_comments", FieldType = "Text")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskReviewerCode", Storage = "_reviewerCode", FieldType = "Text")]
        public string ReviewerCode
        {
            get
            {
                return this._reviewerCode;
            }
            set
            {
                if ((value != this._reviewerCode))
                {
                    this.OnPropertyChanging("ReviewerCode", this._reviewerCode);
                    this._reviewerCode = value;
                    this.OnPropertyChanged("ReviewerCode");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskStatus", Storage = "_status", FieldType = "Text")]
        public string Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Status", Storage = "_taskStatus", FieldType = "Choice")]
        public override System.Nullable<TaskStatus> TaskStatus
        {
            get
            {
                return this._taskStatus;
            }
            set
            {
                if ((value != this._taskStatus))
                {
                    this.OnPropertyChanging("TaskStatus", this._taskStatus);
                    this._taskStatus = value;
                    this.OnPropertyChanged("TaskStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Predecessors", Storage = "_predecessors", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Multi, List = "VFSAppraisalTasks")]
        public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors
        {
            get
            {
                return this._predecessors;
            }
            set
            {
                this._predecessors.Assign(value);
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskActionTakenBy", Storage = "_actionTakenById", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ActionTakenById
        {
            get
            {
                return this._actionTakenById;
            }
            set
            {
                if ((value != this._actionTakenById))
                {
                    this.OnPropertyChanging("ActionTakenById", this._actionTakenById);
                    this._actionTakenById = value;
                    this.OnPropertyChanged("ActionTakenById");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskActionTakenBy", Storage = "_actionTakenBy", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string ActionTakenBy
        {
            get
            {
                return this._actionTakenBy;
            }
            set
            {
                if ((value != this._actionTakenBy))
                {
                    this.OnPropertyChanging("ActionTakenBy", this._actionTakenBy);
                    this._actionTakenBy = value;
                    this.OnPropertyChanged("ActionTakenBy");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAssignedTo", Storage = "_assignedToId0", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> AssignedToId0
        {
            get
            {
                return this._assignedToId0;
            }
            set
            {
                if ((value != this._assignedToId0))
                {
                    this.OnPropertyChanging("AssignedToId0", this._assignedToId0);
                    this._assignedToId0 = value;
                    this.OnPropertyChanged("AssignedToId0");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tskAssignedTo", Storage = "_assignedTo0", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string AssignedTo0
        {
            get
            {
                return this._assignedTo0;
            }
            set
            {
                if ((value != this._assignedTo0))
                {
                    this.OnPropertyChanging("AssignedTo0", this._assignedTo0);
                    this._assignedTo0 = value;
                    this.OnPropertyChanged("AssignedTo0");
                }
            }
        }

        private void OnPredecessorsChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
        }

        private void OnPredecessorsChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("Predecessors");
        }

        private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e)
        {
        }
    }

    /// <summary>
    /// Group and describe related tasks that you or your team needs to complete.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Summary Task", Id = "0x012004", List = "Workflow Tasks")]
    public partial class WorkflowTasksSummaryTask : SummaryTask
    {

        private Microsoft.SharePoint.Linq.EntitySet<Item> _predecessors;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public WorkflowTasksSummaryTask()
        {
            this._predecessors = new Microsoft.SharePoint.Linq.EntitySet<Item>();
            this._predecessors.OnSync += new System.EventHandler<Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item>>(this.OnPredecessorsSync);
            this._predecessors.OnChanged += new System.EventHandler(this.OnPredecessorsChanged);
            this._predecessors.OnChanging += new System.EventHandler(this.OnPredecessorsChanging);
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public override System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Status", Storage = "_taskStatus", FieldType = "Choice")]
        public override System.Nullable<TaskStatus> TaskStatus
        {
            get
            {
                return this._taskStatus;
            }
            set
            {
                if ((value != this._taskStatus))
                {
                    this.OnPropertyChanging("TaskStatus", this._taskStatus);
                    this._taskStatus = value;
                    this.OnPropertyChanged("TaskStatus");
                }
            }
        }

        [Microsoft.SharePoint.Linq.AssociationAttribute(Name = "Predecessors", Storage = "_predecessors", MultivalueType = Microsoft.SharePoint.Linq.AssociationType.Multi, List = "Workflow Tasks")]
        public Microsoft.SharePoint.Linq.EntitySet<Item> Predecessors
        {
            get
            {
                return this._predecessors;
            }
            set
            {
                this._predecessors.Assign(value);
            }
        }

        private void OnPredecessorsChanging(object sender, System.EventArgs e)
        {
            this.OnPropertyChanging("Predecessors", this._predecessors.Clone());
        }

        private void OnPredecessorsChanged(object sender, System.EventArgs e)
        {
            this.OnPropertyChanged("Predecessors");
        }

        private void OnPredecessorsSync(object sender, Microsoft.SharePoint.Linq.AssociationChangedEventArgs<Item> e)
        {
        }
    }

    /// <summary>
    /// AppraisalCompetencies
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_AppraisalCompetenciesCType", Id = "0x010018BF1303EB7C450983168B55E8101842", List = "Appraisal Competencies Draft")]
    public partial class AppraisalCompetenciesDraftVFS_AppraisalCompetenciesCType : VFS_AppraisalCompetenciesCType
    {

        private System.Nullable<double> _appraisalId;

        private System.Nullable<double> _appraisalPhaseId;

        private string _competency;

        private string _expectedResult;

        private string _rating;

        private string _appraiseeLatestComments;

        private string _appraiserLatestComments;

        private string _reviewerLatestComments;

        private string _appraisalPhase;

        private string _description;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalCompetenciesDraftVFS_AppraisalCompetenciesCType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalId", Storage = "_appraisalId", FieldType = "Number")]
        public System.Nullable<double> AppraisalId
        {
            get
            {
                return this._appraisalId;
            }
            set
            {
                if ((value != this._appraisalId))
                {
                    this.OnPropertyChanging("AppraisalId", this._appraisalId);
                    this._appraisalId = value;
                    this.OnPropertyChanged("AppraisalId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalPhaseId", Storage = "_appraisalPhaseId", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseId
        {
            get
            {
                return this._appraisalPhaseId;
            }
            set
            {
                if ((value != this._appraisalPhaseId))
                {
                    this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
                    this._appraisalPhaseId = value;
                    this.OnPropertyChanged("AppraisalPhaseId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptCompetency", Storage = "_competency", FieldType = "Text")]
        public string Competency
        {
            get
            {
                return this._competency;
            }
            set
            {
                if ((value != this._competency))
                {
                    this.OnPropertyChanging("Competency", this._competency);
                    this._competency = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptExpectedResult", Storage = "_expectedResult", FieldType = "Text")]
        public string ExpectedResult
        {
            get
            {
                return this._expectedResult;
            }
            set
            {
                if ((value != this._expectedResult))
                {
                    this.OnPropertyChanging("ExpectedResult", this._expectedResult);
                    this._expectedResult = value;
                    this.OnPropertyChanged("ExpectedResult");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptRating", Storage = "_rating", FieldType = "Text")]
        public string Rating
        {
            get
            {
                return this._rating;
            }
            set
            {
                if ((value != this._rating))
                {
                    this.OnPropertyChanging("Rating", this._rating);
                    this._rating = value;
                    this.OnPropertyChanged("Rating");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraiseeLatestComments", Storage = "_appraiseeLatestComments", FieldType = "Note")]
        public string AppraiseeLatestComments
        {
            get
            {
                return this._appraiseeLatestComments;
            }
            set
            {
                if ((value != this._appraiseeLatestComments))
                {
                    this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
                    this._appraiseeLatestComments = value;
                    this.OnPropertyChanged("AppraiseeLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraiserLatestComments", Storage = "_appraiserLatestComments", FieldType = "Note")]
        public string AppraiserLatestComments
        {
            get
            {
                return this._appraiserLatestComments;
            }
            set
            {
                if ((value != this._appraiserLatestComments))
                {
                    this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
                    this._appraiserLatestComments = value;
                    this.OnPropertyChanged("AppraiserLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptReviewerLatestComments", Storage = "_reviewerLatestComments", FieldType = "Note")]
        public string ReviewerLatestComments
        {
            get
            {
                return this._reviewerLatestComments;
            }
            set
            {
                if ((value != this._reviewerLatestComments))
                {
                    this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
                    this._reviewerLatestComments = value;
                    this.OnPropertyChanged("ReviewerLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "acmptDescription", Storage = "_description", FieldType = "Note")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }
    }

    /// <summary>
    /// My Content Type
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_PDPContentType - PDPContenttype", Id = "0x0100F99ED09E859C418A890E993D14635E46", List = "Appraisal Development Measures Draft")]
    public partial class AppraisalDevelopmentMeasuresDraftVFS_PDPContentTypePDPContenttype : VFS_PDPContentTypePDPContenttype
    {

        private string _appraisal;

        private string _when;

        private string _what;

        private string _nextSteps;

        private string _h1AppraiseeComments;

        private string _h1AppraiserComments;

        private string _h2AppraiseeComments;

        private string _h2AppraiserComments;

        private System.Nullable<double> _appraisalID;

        private System.Nullable<double> _appraisalPhaseID;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalDevelopmentMeasuresDraftVFS_PDPContentTypePDPContenttype()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisal", Storage = "_appraisal", FieldType = "Text")]
        public string Appraisal
        {
            get
            {
                return this._appraisal;
            }
            set
            {
                if ((value != this._appraisal))
                {
                    this.OnPropertyChanging("Appraisal", this._appraisal);
                    this._appraisal = value;
                    this.OnPropertyChanged("Appraisal");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpWhen", Storage = "_when", FieldType = "Text")]
        public string When
        {
            get
            {
                return this._when;
            }
            set
            {
                if ((value != this._when))
                {
                    this.OnPropertyChanging("When", this._when);
                    this._when = value;
                    this.OnPropertyChanged("When");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpWhat", Storage = "_what", FieldType = "Note")]
        public string What
        {
            get
            {
                return this._what;
            }
            set
            {
                if ((value != this._what))
                {
                    this.OnPropertyChanging("What", this._what);
                    this._what = value;
                    this.OnPropertyChanged("What");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpNextSteps", Storage = "_nextSteps", FieldType = "Note")]
        public string NextSteps
        {
            get
            {
                return this._nextSteps;
            }
            set
            {
                if ((value != this._nextSteps))
                {
                    this.OnPropertyChanging("NextSteps", this._nextSteps);
                    this._nextSteps = value;
                    this.OnPropertyChanged("NextSteps");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH1AppraiseeComments", Storage = "_h1AppraiseeComments", FieldType = "Note")]
        public string H1AppraiseeComments
        {
            get
            {
                return this._h1AppraiseeComments;
            }
            set
            {
                if ((value != this._h1AppraiseeComments))
                {
                    this.OnPropertyChanging("H1AppraiseeComments", this._h1AppraiseeComments);
                    this._h1AppraiseeComments = value;
                    this.OnPropertyChanged("H1AppraiseeComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH1AppraiserComments", Storage = "_h1AppraiserComments", FieldType = "Note")]
        public string H1AppraiserComments
        {
            get
            {
                return this._h1AppraiserComments;
            }
            set
            {
                if ((value != this._h1AppraiserComments))
                {
                    this.OnPropertyChanging("H1AppraiserComments", this._h1AppraiserComments);
                    this._h1AppraiserComments = value;
                    this.OnPropertyChanged("H1AppraiserComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH2AppraiseeComments", Storage = "_h2AppraiseeComments", FieldType = "Note")]
        public string H2AppraiseeComments
        {
            get
            {
                return this._h2AppraiseeComments;
            }
            set
            {
                if ((value != this._h2AppraiseeComments))
                {
                    this.OnPropertyChanging("H2AppraiseeComments", this._h2AppraiseeComments);
                    this._h2AppraiseeComments = value;
                    this.OnPropertyChanged("H2AppraiseeComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpH2AppraiserComments", Storage = "_h2AppraiserComments", FieldType = "Note")]
        public string H2AppraiserComments
        {
            get
            {
                return this._h2AppraiserComments;
            }
            set
            {
                if ((value != this._h2AppraiserComments))
                {
                    this.OnPropertyChanging("H2AppraiserComments", this._h2AppraiserComments);
                    this._h2AppraiserComments = value;
                    this.OnPropertyChanged("H2AppraiserComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisalID", Storage = "_appraisalID", FieldType = "Number")]
        public System.Nullable<double> AppraisalID
        {
            get
            {
                return this._appraisalID;
            }
            set
            {
                if ((value != this._appraisalID))
                {
                    this.OnPropertyChanging("AppraisalID", this._appraisalID);
                    this._appraisalID = value;
                    this.OnPropertyChanged("AppraisalID");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pdpAppraisalPhaseID", Storage = "_appraisalPhaseID", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseID
        {
            get
            {
                return this._appraisalPhaseID;
            }
            set
            {
                if ((value != this._appraisalPhaseID))
                {
                    this.OnPropertyChanging("AppraisalPhaseID", this._appraisalPhaseID);
                    this._appraisalPhaseID = value;
                    this.OnPropertyChanged("AppraisalPhaseID");
                }
            }
        }
    }

    /// <summary>
    /// AppraisalGoals
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_AppraisalGoalsCType", Id = "0x01", List = "Appraisal Goals Draft")]
    public partial class AppraisalGoalsDraftVFS_AppraisalGoalsCType : Item
    {

        private System.Nullable<double> _appraisalId;

        private string _appraisalPhase;

        private string _goal;

        private string _goalCategory;

        private string _goalDescription;

        private string _appraiseeLatestComments;

        private System.Nullable<double> _weightage;

        private System.Nullable<System.DateTime> _dueDate;

        private string _appraiserLatestComments;

        private string _reviewerLatestComments;

        private System.Nullable<double> _evaluation;

        private System.Nullable<double> _score;

        private string _isMandatory;

        private System.Nullable<double> _appraisalPhaseId;

        private string _isMandatory0;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public AppraisalGoalsDraftVFS_AppraisalGoalsCType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraisalId", Storage = "_appraisalId", FieldType = "Number")]
        public System.Nullable<double> AppraisalId
        {
            get
            {
                return this._appraisalId;
            }
            set
            {
                if ((value != this._appraisalId))
                {
                    this.OnPropertyChanging("AppraisalId", this._appraisalId);
                    this._appraisalId = value;
                    this.OnPropertyChanged("AppraisalId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraisalPhase", Storage = "_appraisalPhase", FieldType = "Text")]
        public string AppraisalPhase
        {
            get
            {
                return this._appraisalPhase;
            }
            set
            {
                if ((value != this._appraisalPhase))
                {
                    this.OnPropertyChanging("AppraisalPhase", this._appraisalPhase);
                    this._appraisalPhase = value;
                    this.OnPropertyChanged("AppraisalPhase");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoal", Storage = "_goal", FieldType = "Note")]
        public string Goal
        {
            get
            {
                return this._goal;
            }
            set
            {
                if ((value != this._goal))
                {
                    this.OnPropertyChanging("Goal", this._goal);
                    this._goal = value;
                    this.OnPropertyChanged("Goal");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoalCategory", Storage = "_goalCategory", FieldType = "Text")]
        public string GoalCategory
        {
            get
            {
                return this._goalCategory;
            }
            set
            {
                if ((value != this._goalCategory))
                {
                    this.OnPropertyChanging("GoalCategory", this._goalCategory);
                    this._goalCategory = value;
                    this.OnPropertyChanged("GoalCategory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agGoalDescription", Storage = "_goalDescription", FieldType = "Note")]
        public string GoalDescription
        {
            get
            {
                return this._goalDescription;
            }
            set
            {
                if ((value != this._goalDescription))
                {
                    this.OnPropertyChanging("GoalDescription", this._goalDescription);
                    this._goalDescription = value;
                    this.OnPropertyChanged("GoalDescription");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraiseeLatestComments", Storage = "_appraiseeLatestComments", FieldType = "Note")]
        public string AppraiseeLatestComments
        {
            get
            {
                return this._appraiseeLatestComments;
            }
            set
            {
                if ((value != this._appraiseeLatestComments))
                {
                    this.OnPropertyChanging("AppraiseeLatestComments", this._appraiseeLatestComments);
                    this._appraiseeLatestComments = value;
                    this.OnPropertyChanged("AppraiseeLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agWeightage", Storage = "_weightage", FieldType = "Number")]
        public System.Nullable<double> Weightage
        {
            get
            {
                return this._weightage;
            }
            set
            {
                if ((value != this._weightage))
                {
                    this.OnPropertyChanging("Weightage", this._weightage);
                    this._weightage = value;
                    this.OnPropertyChanged("Weightage");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agDueDate", Storage = "_dueDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> DueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((value != this._dueDate))
                {
                    this.OnPropertyChanging("DueDate", this._dueDate);
                    this._dueDate = value;
                    this.OnPropertyChanged("DueDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraiserLatestComments", Storage = "_appraiserLatestComments", FieldType = "Note")]
        public string AppraiserLatestComments
        {
            get
            {
                return this._appraiserLatestComments;
            }
            set
            {
                if ((value != this._appraiserLatestComments))
                {
                    this.OnPropertyChanging("AppraiserLatestComments", this._appraiserLatestComments);
                    this._appraiserLatestComments = value;
                    this.OnPropertyChanged("AppraiserLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agReviewerLatestComments", Storage = "_reviewerLatestComments", FieldType = "Note")]
        public string ReviewerLatestComments
        {
            get
            {
                return this._reviewerLatestComments;
            }
            set
            {
                if ((value != this._reviewerLatestComments))
                {
                    this.OnPropertyChanging("ReviewerLatestComments", this._reviewerLatestComments);
                    this._reviewerLatestComments = value;
                    this.OnPropertyChanged("ReviewerLatestComments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agEvaluation", Storage = "_evaluation", FieldType = "Number")]
        public System.Nullable<double> Evaluation
        {
            get
            {
                return this._evaluation;
            }
            set
            {
                if ((value != this._evaluation))
                {
                    this.OnPropertyChanging("Evaluation", this._evaluation);
                    this._evaluation = value;
                    this.OnPropertyChanged("Evaluation");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agScore", Storage = "_score", FieldType = "Number")]
        public System.Nullable<double> Score
        {
            get
            {
                return this._score;
            }
            set
            {
                if ((value != this._score))
                {
                    this.OnPropertyChanging("Score", this._score);
                    this._score = value;
                    this.OnPropertyChanged("Score");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agIsMandatory", Storage = "_isMandatory", FieldType = "Text")]
        public string IsMandatory
        {
            get
            {
                return this._isMandatory;
            }
            set
            {
                if ((value != this._isMandatory))
                {
                    this.OnPropertyChanging("IsMandatory", this._isMandatory);
                    this._isMandatory = value;
                    this.OnPropertyChanged("IsMandatory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "agAppraisalPhaseID", Storage = "_appraisalPhaseId", FieldType = "Number")]
        public System.Nullable<double> AppraisalPhaseId
        {
            get
            {
                return this._appraisalPhaseId;
            }
            set
            {
                if ((value != this._appraisalPhaseId))
                {
                    this.OnPropertyChanging("AppraisalPhaseId", this._appraisalPhaseId);
                    this._appraisalPhaseId = value;
                    this.OnPropertyChanged("AppraisalPhaseId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "IsMandatory", Storage = "_isMandatory0", FieldType = "Text")]
        public string IsMandatory0
        {
            get
            {
                return this._isMandatory0;
            }
            set
            {
                if ((value != this._isMandatory0))
                {
                    this.OnPropertyChanging("IsMandatory0", this._isMandatory0);
                    this._isMandatory0 = value;
                    this.OnPropertyChanged("IsMandatory0");
                }
            }
        }
    }

    /// <summary>
    /// Master Competencies
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_MasterCompetencies1CType", Id = "0x0100FF1D94A4ABC6402EB27FF491DB1966FE", List = "Competencies")]
    public partial class CompetenciesVFS_MasterCompetencies1CType : VFS_MasterCompetencies1CType
    {

        private string _competency;

        private System.Nullable<bool> _status;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public CompetenciesVFS_MasterCompetencies1CType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptCompetency1", Storage = "_competency", Required = true, FieldType = "Text")]
        public string Competency
        {
            get
            {
                return this._competency;
            }
            set
            {
                if ((value != this._competency))
                {
                    this.OnPropertyChanging("Competency", this._competency);
                    this._competency = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptStatus", Storage = "_status", Required = true, FieldType = "Boolean")]
        public System.Nullable<bool> Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }
    }

    /// <summary>
    /// Master Competencies Description
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_MasterCompetenciesDescCType", Id = "0x01", List = "Competency Descriptions")]
    public partial class CompetencyDescriptionsVFS_MasterCompetenciesDescCType : Item
    {

        private string _competency;

        private string _description;

        private string _employeeGroup;

        private string _employeeSubGroup;

        private System.Nullable<bool> _status;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public CompetencyDescriptionsVFS_MasterCompetenciesDescCType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptCompetency", Storage = "_competency", Required = true, FieldType = "Text")]
        public string Competency
        {
            get
            {
                return this._competency;
            }
            set
            {
                if ((value != this._competency))
                {
                    this.OnPropertyChanging("Competency", this._competency);
                    this._competency = value;
                    this.OnPropertyChanged("Competency");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptDescription", Storage = "_description", Required = true, FieldType = "Note")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptEmpGroup", Storage = "_employeeGroup", FieldType = "Text")]
        public string EmployeeGroup
        {
            get
            {
                return this._employeeGroup;
            }
            set
            {
                if ((value != this._employeeGroup))
                {
                    this.OnPropertyChanging("EmployeeGroup", this._employeeGroup);
                    this._employeeGroup = value;
                    this.OnPropertyChanged("EmployeeGroup");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptEmpSubGroup", Storage = "_employeeSubGroup", Required = true, FieldType = "Text")]
        public string EmployeeSubGroup
        {
            get
            {
                return this._employeeSubGroup;
            }
            set
            {
                if ((value != this._employeeSubGroup))
                {
                    this.OnPropertyChanging("EmployeeSubGroup", this._employeeSubGroup);
                    this._employeeSubGroup = value;
                    this.OnPropertyChanged("EmployeeSubGroup");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "cmptdStatus", Storage = "_status", Required = true, FieldType = "Boolean")]
        public System.Nullable<bool> Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }
    }

    /// <summary>
    /// Goal Category
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_MasterCategoryCType", Id = "0x01", List = "Goal Categories")]
    public partial class GoalCategoriesVFS_MasterCategoryCType : Item
    {

        private string _category;

        private string _description;

        private System.Nullable<bool> _status;

        private System.Nullable<Mandatory> _mandatory;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public GoalCategoriesVFS_MasterCategoryCType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrCategory", Storage = "_category", FieldType = "Text")]
        public string Category
        {
            get
            {
                return this._category;
            }
            set
            {
                if ((value != this._category))
                {
                    this.OnPropertyChanging("Category", this._category);
                    this._category = value;
                    this.OnPropertyChanged("Category");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrDescription", Storage = "_description", FieldType = "Text")]
        public string Description
        {
            get
            {
                return this._description;
            }
            set
            {
                if ((value != this._description))
                {
                    this.OnPropertyChanging("Description", this._description);
                    this._description = value;
                    this.OnPropertyChanged("Description");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrStatus", Storage = "_status", FieldType = "Boolean")]
        public System.Nullable<bool> Status
        {
            get
            {
                return this._status;
            }
            set
            {
                if ((value != this._status))
                {
                    this.OnPropertyChanging("Status", this._status);
                    this._status = value;
                    this.OnPropertyChanged("Status");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ctgrMandatory", Storage = "_mandatory", FieldType = "Choice")]
        public System.Nullable<Mandatory> Mandatory
        {
            get
            {
                return this._mandatory;
            }
            set
            {
                if ((value != this._mandatory))
                {
                    this.OnPropertyChanging("Mandatory", this._mandatory);
                    this._mandatory = value;
                    this.OnPropertyChanged("Mandatory");
                }
            }
        }
    }

    /// <summary>
    /// My Content Type
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_PerformanceMatrixCType", Id = "0x0100065309A23D734BB1AFE672D7E86C0044", List = "Performance Ratings")]
    public partial class PerformanceRatingsVFS_PerformanceMatrixCType : VFS_PerformanceMatrixCType
    {

        private System.Nullable<double> _rating;

        private System.Nullable<double> _lowerValue;

        private System.Nullable<double> _upperValue;

        private string _achievement;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PerformanceRatingsVFS_PerformanceMatrixCType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pmScaleNumber", Storage = "_rating", FieldType = "Number")]
        public System.Nullable<double> Rating
        {
            get
            {
                return this._rating;
            }
            set
            {
                if ((value != this._rating))
                {
                    this.OnPropertyChanging("Rating", this._rating);
                    this._rating = value;
                    this.OnPropertyChanged("Rating");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pmInitialAchievement", Storage = "_lowerValue", FieldType = "Number")]
        public System.Nullable<double> LowerValue
        {
            get
            {
                return this._lowerValue;
            }
            set
            {
                if ((value != this._lowerValue))
                {
                    this.OnPropertyChanging("LowerValue", this._lowerValue);
                    this._lowerValue = value;
                    this.OnPropertyChanged("LowerValue");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pmMaximumAchievement", Storage = "_upperValue", FieldType = "Number")]
        public System.Nullable<double> UpperValue
        {
            get
            {
                return this._upperValue;
            }
            set
            {
                if ((value != this._upperValue))
                {
                    this.OnPropertyChanging("UpperValue", this._upperValue);
                    this._upperValue = value;
                    this.OnPropertyChanged("UpperValue");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "pmAchievement", Storage = "_achievement", FieldType = "Text")]
        public string Achievement
        {
            get
            {
                return this._achievement;
            }
            set
            {
                if ((value != this._achievement))
                {
                    this.OnPropertyChanging("Achievement", this._achievement);
                    this._achievement = value;
                    this.OnPropertyChanged("Achievement");
                }
            }
        }
    }

    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Reusable HTML", Id = "0x01", List = "Reusable Content")]
    public partial class ReusableContentReusableHTML : Item
    {

        private string _title0;

        private string _comments;

        private System.Nullable<bool> _automaticUpdate;

        private System.Nullable<bool> _showInDropDownMenu;

        private System.Nullable<ContentCategory> _contentCategory;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public ReusableContentReusableHTML()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "LinkTitle", Storage = "_title0", ReadOnly = true, Required = true, FieldType = "Computed")]
        public string Title0
        {
            get
            {
                return this._title0;
            }
            set
            {
                if ((value != this._title0))
                {
                    this.OnPropertyChanging("Title0", this._title0);
                    this._title0 = value;
                    this.OnPropertyChanged("Title0");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        /// <summary>
        /// If this option is selected, the content of this list item will be inserted into web pages as a read-only reference. New versions of this item will automatically appear in the web pages. If the option is not selected, the content of this list item will be inserted into web pages as a copy that page authors can then modify. New versions of this item will not appear in the web pages. Any change to this setting will not affect existing web pages that are using this item.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "AutomaticUpdate", Storage = "_automaticUpdate", FieldType = "Boolean")]
        public System.Nullable<bool> AutomaticUpdate
        {
            get
            {
                return this._automaticUpdate;
            }
            set
            {
                if ((value != this._automaticUpdate))
                {
                    this.OnPropertyChanging("AutomaticUpdate", this._automaticUpdate);
                    this._automaticUpdate = value;
                    this.OnPropertyChanged("AutomaticUpdate");
                }
            }
        }

        /// <summary>
        /// Select this option if you want this reusable content item to appear in a drop-down menu available during page editing. This will offer authors a quick way to add this item to a page.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ShowInRibbon", Storage = "_showInDropDownMenu", FieldType = "Boolean")]
        public System.Nullable<bool> ShowInDropDownMenu
        {
            get
            {
                return this._showInDropDownMenu;
            }
            set
            {
                if ((value != this._showInDropDownMenu))
                {
                    this.OnPropertyChanging("ShowInDropDownMenu", this._showInDropDownMenu);
                    this._showInDropDownMenu = value;
                    this.OnPropertyChanged("ShowInDropDownMenu");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ContentCategory", Storage = "_contentCategory", FieldType = "Choice")]
        public System.Nullable<ContentCategory> ContentCategory
        {
            get
            {
                return this._contentCategory;
            }
            set
            {
                if ((value != this._contentCategory))
                {
                    this.OnPropertyChanging("ContentCategory", this._contentCategory);
                    this._contentCategory = value;
                    this.OnPropertyChanged("ContentCategory");
                }
            }
        }
    }

    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Reusable Text", Id = "0x01", List = "Reusable Content")]
    public partial class ReusableContentReusableText : Item
    {

        private string _title0;

        private string _comments;

        private System.Nullable<bool> _automaticUpdate;

        private System.Nullable<bool> _showInDropDownMenu;

        private string _reusableText;

        private System.Nullable<ContentCategory> _contentCategory;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public ReusableContentReusableText()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "LinkTitle", Storage = "_title0", ReadOnly = true, FieldType = "Computed")]
        public string Title0
        {
            get
            {
                return this._title0;
            }
            set
            {
                if ((value != this._title0))
                {
                    this.OnPropertyChanging("Title0", this._title0);
                    this._title0 = value;
                    this.OnPropertyChanged("Title0");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        /// <summary>
        /// If this option is selected, the content of this list item will be inserted into web pages as a read-only reference. New versions of this item will automatically appear in the web pages. If the option is not selected, the content of this list item will be inserted into web pages as a copy that page authors can then modify. New versions of this item will not appear in the web pages. Any change to this setting will not affect existing web pages that are using this item.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "AutomaticUpdate", Storage = "_automaticUpdate", FieldType = "Boolean")]
        public System.Nullable<bool> AutomaticUpdate
        {
            get
            {
                return this._automaticUpdate;
            }
            set
            {
                if ((value != this._automaticUpdate))
                {
                    this.OnPropertyChanging("AutomaticUpdate", this._automaticUpdate);
                    this._automaticUpdate = value;
                    this.OnPropertyChanged("AutomaticUpdate");
                }
            }
        }

        /// <summary>
        /// Select this option if you want this reusable content item to appear in a drop-down menu available during page editing. This will offer authors a quick way to add this item to a page.
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ShowInRibbon", Storage = "_showInDropDownMenu", FieldType = "Boolean")]
        public System.Nullable<bool> ShowInDropDownMenu
        {
            get
            {
                return this._showInDropDownMenu;
            }
            set
            {
                if ((value != this._showInDropDownMenu))
                {
                    this.OnPropertyChanging("ShowInDropDownMenu", this._showInDropDownMenu);
                    this._showInDropDownMenu = value;
                    this.OnPropertyChanged("ShowInDropDownMenu");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ReusableText", Storage = "_reusableText", FieldType = "Note")]
        public string ReusableText
        {
            get
            {
                return this._reusableText;
            }
            set
            {
                if ((value != this._reusableText))
                {
                    this.OnPropertyChanging("ReusableText", this._reusableText);
                    this._reusableText = value;
                    this.OnPropertyChanged("ReusableText");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ContentCategory", Storage = "_contentCategory", FieldType = "Choice")]
        public System.Nullable<ContentCategory> ContentCategory
        {
            get
            {
                return this._contentCategory;
            }
            set
            {
                if ((value != this._contentCategory))
                {
                    this.OnPropertyChanging("ContentCategory", this._contentCategory);
                    this._contentCategory = value;
                    this.OnPropertyChanged("ContentCategory");
                }
            }
        }
    }

    /// <summary>
    /// TMT Actions
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "VFS_TMTActionsCType", Id = "0x0100BBF02E2360BA4530B75A0753D7B1F8C0", List = "TMT Actions")]
    public partial class TMTActionsVFS_TMTActionsCType : VFS_TMTActionsCType
    {

        private string _performanceCycle;

        private string _isH1GoalSettingStarted;

        private string _isH1SelfEvaluationStarted;

        private string _isH2SelfEvaluationStarted;

        private string _h1History;

        private string _h1SelfHistory;

        private string _h2SelHistory;

        private System.Nullable<bool> _isClosed;

        private System.Nullable<System.DateTime> _cycleCloseDate;

        private System.Nullable<int> _closedById;

        private string _closedByImnName;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public TMTActionsVFS_TMTActionsCType()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtPerformanceCycle", Storage = "_performanceCycle", FieldType = "Text")]
        public string PerformanceCycle
        {
            get
            {
                return this._performanceCycle;
            }
            set
            {
                if ((value != this._performanceCycle))
                {
                    this.OnPropertyChanging("PerformanceCycle", this._performanceCycle);
                    this._performanceCycle = value;
                    this.OnPropertyChanged("PerformanceCycle");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtIsH1GoalSettingStarted", Storage = "_isH1GoalSettingStarted", FieldType = "Text")]
        public string IsH1GoalSettingStarted
        {
            get
            {
                return this._isH1GoalSettingStarted;
            }
            set
            {
                if ((value != this._isH1GoalSettingStarted))
                {
                    this.OnPropertyChanging("IsH1GoalSettingStarted", this._isH1GoalSettingStarted);
                    this._isH1GoalSettingStarted = value;
                    this.OnPropertyChanged("IsH1GoalSettingStarted");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtIsH1SelfEvaluationStarted", Storage = "_isH1SelfEvaluationStarted", FieldType = "Text")]
        public string IsH1SelfEvaluationStarted
        {
            get
            {
                return this._isH1SelfEvaluationStarted;
            }
            set
            {
                if ((value != this._isH1SelfEvaluationStarted))
                {
                    this.OnPropertyChanging("IsH1SelfEvaluationStarted", this._isH1SelfEvaluationStarted);
                    this._isH1SelfEvaluationStarted = value;
                    this.OnPropertyChanged("IsH1SelfEvaluationStarted");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtIsH2SelfEvaluationStarted", Storage = "_isH2SelfEvaluationStarted", FieldType = "Text")]
        public string IsH2SelfEvaluationStarted
        {
            get
            {
                return this._isH2SelfEvaluationStarted;
            }
            set
            {
                if ((value != this._isH2SelfEvaluationStarted))
                {
                    this.OnPropertyChanging("IsH2SelfEvaluationStarted", this._isH2SelfEvaluationStarted);
                    this._isH2SelfEvaluationStarted = value;
                    this.OnPropertyChanged("IsH2SelfEvaluationStarted");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtH1History", Storage = "_h1History", FieldType = "Text")]
        public string H1History
        {
            get
            {
                return this._h1History;
            }
            set
            {
                if ((value != this._h1History))
                {
                    this.OnPropertyChanging("H1History", this._h1History);
                    this._h1History = value;
                    this.OnPropertyChanged("H1History");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtH1SelfHistory", Storage = "_h1SelfHistory", FieldType = "Text")]
        public string H1SelfHistory
        {
            get
            {
                return this._h1SelfHistory;
            }
            set
            {
                if ((value != this._h1SelfHistory))
                {
                    this.OnPropertyChanging("H1SelfHistory", this._h1SelfHistory);
                    this._h1SelfHistory = value;
                    this.OnPropertyChanged("H1SelfHistory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "tmtH2SelHistory", Storage = "_h2SelHistory", FieldType = "Text")]
        public string H2SelHistory
        {
            get
            {
                return this._h2SelHistory;
            }
            set
            {
                if ((value != this._h2SelHistory))
                {
                    this.OnPropertyChanging("H2SelHistory", this._h2SelHistory);
                    this._h2SelHistory = value;
                    this.OnPropertyChanged("H2SelHistory");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "IsClosed", Storage = "_isClosed", FieldType = "Boolean")]
        public System.Nullable<bool> IsClosed
        {
            get
            {
                return this._isClosed;
            }
            set
            {
                if ((value != this._isClosed))
                {
                    this.OnPropertyChanging("IsClosed", this._isClosed);
                    this._isClosed = value;
                    this.OnPropertyChanged("IsClosed");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CycleCloseDate", Storage = "_cycleCloseDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> CycleCloseDate
        {
            get
            {
                return this._cycleCloseDate;
            }
            set
            {
                if ((value != this._cycleCloseDate))
                {
                    this.OnPropertyChanging("CycleCloseDate", this._cycleCloseDate);
                    this._cycleCloseDate = value;
                    this.OnPropertyChanged("CycleCloseDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ClosedBy", Storage = "_closedById", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ClosedById
        {
            get
            {
                return this._closedById;
            }
            set
            {
                if ((value != this._closedById))
                {
                    this.OnPropertyChanging("ClosedById", this._closedById);
                    this._closedById = value;
                    this.OnPropertyChanged("ClosedById");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ClosedBy", Storage = "_closedByImnName", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string ClosedByImnName
        {
            get
            {
                return this._closedByImnName;
            }
            set
            {
                if ((value != this._closedByImnName))
                {
                    this.OnPropertyChanging("ClosedByImnName", this._closedByImnName);
                    this._closedByImnName = value;
                    this.OnPropertyChanged("ClosedByImnName");
                }
            }
        }
    }

    /// <summary>
    /// Upload an image.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Image", Id = "0x0101009148F5A04DDD49CBA7127AADA5FB792B00AADE34325A8B49CDA8BB4DB53328F214")]
    public partial class Image : RichMediaAsset
    {

        private string _pictureSize;

        private System.Nullable<int> _pictureHeight;

        private string _comments;

        private string _author;

        private System.Nullable<System.DateTime> _datePictureTaken;

        private string _copyright;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Image()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ImageSize", Storage = "_pictureSize", FieldType = "Computed")]
        public string PictureSize
        {
            get
            {
                return this._pictureSize;
            }
            set
            {
                if ((value != this._pictureSize))
                {
                    this.OnPropertyChanging("PictureSize", this._pictureSize);
                    this._pictureSize = value;
                    this.OnPropertyChanged("PictureSize");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ImageHeight", Storage = "_pictureHeight", ReadOnly = true, FieldType = "Integer")]
        public System.Nullable<int> PictureHeight
        {
            get
            {
                return this._pictureHeight;
            }
            set
            {
                if ((value != this._pictureHeight))
                {
                    this.OnPropertyChanging("PictureHeight", this._pictureHeight);
                    this._pictureHeight = value;
                    this.OnPropertyChanged("PictureHeight");
                }
            }
        }

        /// <summary>
        /// A summary of this resource
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        /// <summary>
        /// The primary author
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_Author", Storage = "_author", FieldType = "Text")]
        public string Author
        {
            get
            {
                return this._author;
            }
            set
            {
                if ((value != this._author))
                {
                    this.OnPropertyChanging("Author", this._author);
                    this._author = value;
                    this.OnPropertyChanged("Author");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ImageCreateDate", Storage = "_datePictureTaken", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> DatePictureTaken
        {
            get
            {
                return this._datePictureTaken;
            }
            set
            {
                if ((value != this._datePictureTaken))
                {
                    this.OnPropertyChanging("DatePictureTaken", this._datePictureTaken);
                    this._datePictureTaken = value;
                    this.OnPropertyChanged("DatePictureTaken");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "wic_System_Copyright", Storage = "_copyright", FieldType = "Text")]
        public string Copyright
        {
            get
            {
                return this._copyright;
            }
            set
            {
                if ((value != this._copyright))
                {
                    this.OnPropertyChanging("Copyright", this._copyright);
                    this._copyright = value;
                    this.OnPropertyChanged("Copyright");
                }
            }
        }
    }

    /// <summary>
    /// Upload an audio file.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Audio", Id = "0x0101009148F5A04DDD49CBA7127AADA5FB792B006973ACD696DC4858A76371B2FB2F439A")]
    public partial class Audio : RichMediaAsset
    {

        private string _author;

        private string _comments;

        private string _previewImageURL;

        private string _copyright;

        private System.Nullable<int> _lengthSeconds;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Audio()
        {
            this.OnCreated();
        }

        /// <summary>
        /// The primary author
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_Author", Storage = "_author", FieldType = "Text")]
        public string Author
        {
            get
            {
                return this._author;
            }
            set
            {
                if ((value != this._author))
                {
                    this.OnPropertyChanging("Author", this._author);
                    this._author = value;
                    this.OnPropertyChanged("Author");
                }
            }
        }

        /// <summary>
        /// A summary of this resource
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "AlternateThumbnailUrl", Storage = "_previewImageURL", FieldType = "Url")]
        public string PreviewImageURL
        {
            get
            {
                return this._previewImageURL;
            }
            set
            {
                if ((value != this._previewImageURL))
                {
                    this.OnPropertyChanging("PreviewImageURL", this._previewImageURL);
                    this._previewImageURL = value;
                    this.OnPropertyChanged("PreviewImageURL");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "wic_System_Copyright", Storage = "_copyright", FieldType = "Text")]
        public string Copyright
        {
            get
            {
                return this._copyright;
            }
            set
            {
                if ((value != this._copyright))
                {
                    this.OnPropertyChanging("Copyright", this._copyright);
                    this._copyright = value;
                    this.OnPropertyChanged("Copyright");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MediaLengthInSeconds", Storage = "_lengthSeconds", FieldType = "Integer")]
        public System.Nullable<int> LengthSeconds
        {
            get
            {
                return this._lengthSeconds;
            }
            set
            {
                if ((value != this._lengthSeconds))
                {
                    this.OnPropertyChanging("LengthSeconds", this._lengthSeconds);
                    this._lengthSeconds = value;
                    this.OnPropertyChanged("LengthSeconds");
                }
            }
        }
    }

    /// <summary>
    /// Upload a video file.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Video", Id = "0x0101009148F5A04DDD49CBA7127AADA5FB792B00291D173ECE694D56B19D111489C4369D")]
    public partial class Video : RichMediaAsset
    {

        private string _author;

        private string _comments;

        private string _previewImageURL;

        private string _copyright;

        private System.Nullable<int> _lengthSeconds;

        private System.Nullable<int> _frameWidth;

        private System.Nullable<int> _frameHeight;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public Video()
        {
            this.OnCreated();
        }

        /// <summary>
        /// The primary author
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_Author", Storage = "_author", FieldType = "Text")]
        public string Author
        {
            get
            {
                return this._author;
            }
            set
            {
                if ((value != this._author))
                {
                    this.OnPropertyChanging("Author", this._author);
                    this._author = value;
                    this.OnPropertyChanged("Author");
                }
            }
        }

        /// <summary>
        /// A summary of this resource
        /// </summary>
        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "_Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "AlternateThumbnailUrl", Storage = "_previewImageURL", FieldType = "Url")]
        public string PreviewImageURL
        {
            get
            {
                return this._previewImageURL;
            }
            set
            {
                if ((value != this._previewImageURL))
                {
                    this.OnPropertyChanging("PreviewImageURL", this._previewImageURL);
                    this._previewImageURL = value;
                    this.OnPropertyChanged("PreviewImageURL");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "wic_System_Copyright", Storage = "_copyright", FieldType = "Text")]
        public string Copyright
        {
            get
            {
                return this._copyright;
            }
            set
            {
                if ((value != this._copyright))
                {
                    this.OnPropertyChanging("Copyright", this._copyright);
                    this._copyright = value;
                    this.OnPropertyChanged("Copyright");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MediaLengthInSeconds", Storage = "_lengthSeconds", FieldType = "Integer")]
        public System.Nullable<int> LengthSeconds
        {
            get
            {
                return this._lengthSeconds;
            }
            set
            {
                if ((value != this._lengthSeconds))
                {
                    this.OnPropertyChanging("LengthSeconds", this._lengthSeconds);
                    this._lengthSeconds = value;
                    this.OnPropertyChanged("LengthSeconds");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "VideoWidthInPixels", Storage = "_frameWidth", FieldType = "Integer")]
        public System.Nullable<int> FrameWidth
        {
            get
            {
                return this._frameWidth;
            }
            set
            {
                if ((value != this._frameWidth))
                {
                    this.OnPropertyChanging("FrameWidth", this._frameWidth);
                    this._frameWidth = value;
                    this.OnPropertyChanged("FrameWidth");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "VideoHeightInPixels", Storage = "_frameHeight", FieldType = "Integer")]
        public System.Nullable<int> FrameHeight
        {
            get
            {
                return this._frameHeight;
            }
            set
            {
                if ((value != this._frameHeight))
                {
                    this.OnPropertyChanging("FrameHeight", this._frameHeight);
                    this._frameHeight = value;
                    this.OnPropertyChanged("FrameHeight");
                }
            }
        }
    }

    /// <summary>
    /// Page is a system content type template created by the Publishing Resources feature. The column templates from Page will be added to all Pages libraries created by the Publishing feature.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Page", Id = "0x0101", List = "Pages")]
    public partial class PagesPage : Document
    {

        private string _comments;

        private string _contactEMailAddress;

        private string _contactName;

        private string _contactPicture;

        private string _pageLayout;

        private System.Nullable<int> _contactId;

        private string _contact;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PagesPage()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactEmail", Storage = "_contactEMailAddress", FieldType = "Text")]
        public string ContactEMailAddress
        {
            get
            {
                return this._contactEMailAddress;
            }
            set
            {
                if ((value != this._contactEMailAddress))
                {
                    this.OnPropertyChanging("ContactEMailAddress", this._contactEMailAddress);
                    this._contactEMailAddress = value;
                    this.OnPropertyChanged("ContactEMailAddress");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactName", Storage = "_contactName", FieldType = "Text")]
        public string ContactName
        {
            get
            {
                return this._contactName;
            }
            set
            {
                if ((value != this._contactName))
                {
                    this.OnPropertyChanging("ContactName", this._contactName);
                    this._contactName = value;
                    this.OnPropertyChanged("ContactName");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactPicture", Storage = "_contactPicture", FieldType = "Url")]
        public string ContactPicture
        {
            get
            {
                return this._contactPicture;
            }
            set
            {
                if ((value != this._contactPicture))
                {
                    this.OnPropertyChanging("ContactPicture", this._contactPicture);
                    this._contactPicture = value;
                    this.OnPropertyChanged("ContactPicture");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingPageLayout", Storage = "_pageLayout", ReadOnly = true, FieldType = "Url")]
        public string PageLayout
        {
            get
            {
                return this._pageLayout;
            }
            set
            {
                if ((value != this._pageLayout))
                {
                    this.OnPropertyChanging("PageLayout", this._pageLayout);
                    this._pageLayout = value;
                    this.OnPropertyChanged("PageLayout");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContact", Storage = "_contactId", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ContactId
        {
            get
            {
                return this._contactId;
            }
            set
            {
                if ((value != this._contactId))
                {
                    this.OnPropertyChanging("ContactId", this._contactId);
                    this._contactId = value;
                    this.OnPropertyChanged("ContactId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContact", Storage = "_contact", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string Contact
        {
            get
            {
                return this._contact;
            }
            set
            {
                if ((value != this._contact))
                {
                    this.OnPropertyChanging("Contact", this._contact);
                    this._contact = value;
                    this.OnPropertyChanged("Contact");
                }
            }
        }
    }

    /// <summary>
    /// Article Page is a system content type template created by the Publishing Resources feature. It is the associated content type template for the default page layouts used to create article pages in sites that have the Publishing feature enabled.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Article Page", Id = "0x0101", List = "Pages")]
    public partial class PagesArticlePage : Document
    {

        private string _comments;

        private string _contactEMailAddress;

        private string _contactName;

        private string _contactPicture;

        private string _pageLayout;

        private string _byline;

        private System.Nullable<System.DateTime> _articleDate;

        private System.Nullable<int> _contactId;

        private string _contact;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PagesArticlePage()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactEmail", Storage = "_contactEMailAddress", FieldType = "Text")]
        public string ContactEMailAddress
        {
            get
            {
                return this._contactEMailAddress;
            }
            set
            {
                if ((value != this._contactEMailAddress))
                {
                    this.OnPropertyChanging("ContactEMailAddress", this._contactEMailAddress);
                    this._contactEMailAddress = value;
                    this.OnPropertyChanged("ContactEMailAddress");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactName", Storage = "_contactName", FieldType = "Text")]
        public string ContactName
        {
            get
            {
                return this._contactName;
            }
            set
            {
                if ((value != this._contactName))
                {
                    this.OnPropertyChanging("ContactName", this._contactName);
                    this._contactName = value;
                    this.OnPropertyChanged("ContactName");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactPicture", Storage = "_contactPicture", FieldType = "Url")]
        public string ContactPicture
        {
            get
            {
                return this._contactPicture;
            }
            set
            {
                if ((value != this._contactPicture))
                {
                    this.OnPropertyChanging("ContactPicture", this._contactPicture);
                    this._contactPicture = value;
                    this.OnPropertyChanged("ContactPicture");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingPageLayout", Storage = "_pageLayout", ReadOnly = true, FieldType = "Url")]
        public string PageLayout
        {
            get
            {
                return this._pageLayout;
            }
            set
            {
                if ((value != this._pageLayout))
                {
                    this.OnPropertyChanging("PageLayout", this._pageLayout);
                    this._pageLayout = value;
                    this.OnPropertyChanged("PageLayout");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ArticleByLine", Storage = "_byline", FieldType = "Text")]
        public string Byline
        {
            get
            {
                return this._byline;
            }
            set
            {
                if ((value != this._byline))
                {
                    this.OnPropertyChanging("Byline", this._byline);
                    this._byline = value;
                    this.OnPropertyChanged("Byline");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ArticleStartDate", Storage = "_articleDate", FieldType = "DateTime")]
        public System.Nullable<System.DateTime> ArticleDate
        {
            get
            {
                return this._articleDate;
            }
            set
            {
                if ((value != this._articleDate))
                {
                    this.OnPropertyChanging("ArticleDate", this._articleDate);
                    this._articleDate = value;
                    this.OnPropertyChanged("ArticleDate");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContact", Storage = "_contactId", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ContactId
        {
            get
            {
                return this._contactId;
            }
            set
            {
                if ((value != this._contactId))
                {
                    this.OnPropertyChanging("ContactId", this._contactId);
                    this._contactId = value;
                    this.OnPropertyChanged("ContactId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContact", Storage = "_contact", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string Contact
        {
            get
            {
                return this._contact;
            }
            set
            {
                if ((value != this._contact))
                {
                    this.OnPropertyChanging("Contact", this._contact);
                    this._contact = value;
                    this.OnPropertyChanged("Contact");
                }
            }
        }
    }

    /// <summary>
    /// Welcome Page is a system content type template created by the Publishing Resources feature. It is the associated content type template for the default page layout used to create welcome pages in sites that have the Publishing feature enabled.
    /// </summary>
    [Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Welcome Page", Id = "0x0101", List = "Pages")]
    public partial class PagesWelcomePage : Document
    {

        private string _comments;

        private string _contactEMailAddress;

        private string _contactName;

        private string _contactPicture;

        private string _pageLayout;

        private System.Nullable<int> _contactId;

        private string _contact;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate();
        partial void OnCreated();
        #endregion

        public PagesWelcomePage()
        {
            this.OnCreated();
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Comments", Storage = "_comments", FieldType = "Note")]
        public string Comments
        {
            get
            {
                return this._comments;
            }
            set
            {
                if ((value != this._comments))
                {
                    this.OnPropertyChanging("Comments", this._comments);
                    this._comments = value;
                    this.OnPropertyChanged("Comments");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactEmail", Storage = "_contactEMailAddress", FieldType = "Text")]
        public string ContactEMailAddress
        {
            get
            {
                return this._contactEMailAddress;
            }
            set
            {
                if ((value != this._contactEMailAddress))
                {
                    this.OnPropertyChanging("ContactEMailAddress", this._contactEMailAddress);
                    this._contactEMailAddress = value;
                    this.OnPropertyChanged("ContactEMailAddress");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactName", Storage = "_contactName", FieldType = "Text")]
        public string ContactName
        {
            get
            {
                return this._contactName;
            }
            set
            {
                if ((value != this._contactName))
                {
                    this.OnPropertyChanging("ContactName", this._contactName);
                    this._contactName = value;
                    this.OnPropertyChanged("ContactName");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContactPicture", Storage = "_contactPicture", FieldType = "Url")]
        public string ContactPicture
        {
            get
            {
                return this._contactPicture;
            }
            set
            {
                if ((value != this._contactPicture))
                {
                    this.OnPropertyChanging("ContactPicture", this._contactPicture);
                    this._contactPicture = value;
                    this.OnPropertyChanged("ContactPicture");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingPageLayout", Storage = "_pageLayout", ReadOnly = true, FieldType = "Url")]
        public string PageLayout
        {
            get
            {
                return this._pageLayout;
            }
            set
            {
                if ((value != this._pageLayout))
                {
                    this.OnPropertyChanging("PageLayout", this._pageLayout);
                    this._pageLayout = value;
                    this.OnPropertyChanged("PageLayout");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContact", Storage = "_contactId", FieldType = "User", IsLookupId = true)]
        public System.Nullable<int> ContactId
        {
            get
            {
                return this._contactId;
            }
            set
            {
                if ((value != this._contactId))
                {
                    this.OnPropertyChanging("ContactId", this._contactId);
                    this._contactId = value;
                    this.OnPropertyChanged("ContactId");
                }
            }
        }

        [Microsoft.SharePoint.Linq.ColumnAttribute(Name = "PublishingContact", Storage = "_contact", ReadOnly = true, FieldType = "User", IsLookupValue = true)]
        public string Contact
        {
            get
            {
                return this._contact;
            }
            set
            {
                if ((value != this._contact))
                {
                    this.OnPropertyChanging("Contact", this._contact);
                    this._contact = value;
                    this.OnPropertyChanged("Contact");
                }
            }
        }
    }

    public enum Category : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "(1) Category1")]
        _1Category1 = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "(2) Category2")]
        _2Category2 = 4,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "(3) Category3")]
        _3Category3 = 8,
    }

    public enum Priority : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "(1) High")]
        _1High = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "(2) Normal")]
        _2Normal = 4,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "(3) Low")]
        _3Low = 8,
    }

    public enum TaskStatus : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "Not Started")]
        NotStarted = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "In Progress")]
        InProgress = 4,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "Completed")]
        Completed = 8,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "Deferred")]
        Deferred = 16,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "Waiting on someone else")]
        WaitingOnSomeoneElse = 32,
    }

    public enum HRReview : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "Yes")]
        Yes = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "No")]
        No = 4,
    }

    public enum IsAppealed : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "Yes")]
        Yes = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "No")]
        No = 4,
    }

    public enum IsPIP : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "True")]
        True = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "False")]
        False = 4,
    }

    public enum Deactivated : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "Yes")]
        Yes = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "No")]
        No = 4,
    }

    public enum IsReview : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "True")]
        True = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "False")]
        False = 4,
    }

    public enum Mandatory : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "Yes")]
        Yes = 2,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "No")]
        No = 4,
    }

    public enum ContentCategory : int
    {

        None = 0,

        Invalid = 1,

        [Microsoft.SharePoint.Linq.ChoiceAttribute(Value = "None")]
        None0 = 2,
    }
}
